{"ts":1349883199604,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1349883221525,"patch":[[{"diffs":[[1,"function IterativeAStar()\n{\n    \n};"]],"start1":0,"start2":0,"length1":0,"length2":35}]],"length":35,"saved":false}
{"ts":1349883243494,"patch":[[{"diffs":[[0,"veAStar("],[1,"initialState, goalState"],[0,")\n{\n    "]],"start1":16,"start2":16,"length1":16,"length2":39},{"diffs":[[0,"  \n}"],[-1,";"]],"start1":53,"start2":53,"length1":5,"length2":4}]],"length":57,"saved":false}
{"ts":1349883329905,"patch":[[{"diffs":[[0,")\n{\n    "],[1,"if(initialState = goalState)\n    {\n        \n    }"],[0,"\n}"]],"start1":47,"start2":47,"length1":10,"length2":59}]],"length":106,"saved":false}
{"ts":1349883350920,"patch":[[{"diffs":[[0,"tate)\n{\n"],[1,"    var sequence =[];\n"],[0,"    if(i"]],"start1":43,"start2":43,"length1":16,"length2":38}]],"length":128,"saved":false}
{"ts":1349883358509,"patch":[[{"diffs":[[0," \n    }\n"],[1,"    \n    return sequence;\n"],[0,"}"]],"start1":119,"start2":119,"length1":9,"length2":35}]],"length":154,"saved":false}
{"ts":1349883415619,"patch":[[{"diffs":[[0,"ce =[];\n"],[1,"    \n"],[0,"    if(i"]],"start1":65,"start2":65,"length1":16,"length2":21},{"diffs":[[0,"alState "],[1,"!"],[0,"= goalSt"]],"start1":90,"start2":90,"length1":16,"length2":17}]],"length":160,"saved":false}
{"ts":1349883446233,"patch":[[{"diffs":[[1,"var goalState = null;\n\n"],[0,"function"]],"start1":0,"start2":0,"length1":8,"length2":31},{"diffs":[[0,"  {\n        "],[1,"    "],[0,"\n    }\n    \n"]],"start1":137,"start2":137,"length1":24,"length2":28}]],"length":187,"saved":false}
{"ts":1349883459989,"patch":[[{"diffs":[[0,"var "],[-1,"g"],[1,"iterativeG"],[0,"oalState"]],"start1":0,"start2":0,"length1":13,"length2":22},{"diffs":[[0,"        "],[-1,"    "],[1,"goalState"],[0,"\n    }\n "]],"start1":150,"start2":150,"length1":20,"length2":25}]],"length":201,"saved":false}
{"ts":1349883463600,"patch":[[{"diffs":[[0,"        "],[-1,"g"],[1,"iterativeG"],[0,"oalState"]],"start1":150,"start2":150,"length1":17,"length2":26}]],"length":210,"saved":false}
{"ts":1349883467504,"patch":[[{"diffs":[[0,"oalState"],[1," = goalState;"],[0,"\n    }\n "]],"start1":168,"start2":168,"length1":16,"length2":29}]],"length":223,"saved":false}
{"ts":1349883493337,"patch":[[{"diffs":[[0,"lState;\n"],[1,"        \n        \n"],[0,"    }\n  "]],"start1":182,"start2":182,"length1":16,"length2":34},{"diffs":[[0,"uence;\n}"],[1,"\n\nfunction IterativeAStar(initialState, goalState)\n{\n    \n}"]],"start1":233,"start2":233,"length1":8,"length2":67}]],"length":300,"saved":false}
{"ts":1349883523314,"patch":[[{"diffs":[[0,"on IterativeASta"],[-1,"r"],[0,"(initialState, g"]],"start1":38,"start2":38,"length1":33,"length2":32},{"diffs":[[0,"iveAStar"],[1,"Recursive"],[0,"(initial"]],"start1":257,"start2":257,"length1":16,"length2":25}]],"length":308,"saved":false}
{"ts":1349883535932,"patch":[[{"diffs":[[0,"itialState, "],[-1,"goalState"],[1,"depth"],[0,")\n{\n    \n}"]],"start1":277,"start2":277,"length1":31,"length2":27}]],"length":304,"saved":false}
{"ts":1349883545225,"patch":[[{"diffs":[[0,"   \n        "],[1,"IterativeAStarRecursive();"],[0,"\n    }\n    \n"]],"start1":194,"start2":194,"length1":24,"length2":50}]],"length":330,"saved":false}
{"ts":1349883561833,"patch":[[{"diffs":[[0,"cursive("],[1,"initialState"],[0,");\n    }"]],"start1":222,"start2":222,"length1":16,"length2":28},{"diffs":[[0,"arRecursive("],[-1,"initial"],[1,"start"],[0,"State, depth"]],"start1":301,"start2":301,"length1":31,"length2":29}]],"length":340,"saved":false}
{"ts":1349883576133,"patch":[[{"diffs":[[0,"\n       "],[1," sequence ="],[0," Iterati"]],"start1":197,"start2":197,"length1":16,"length2":27}]],"length":351,"saved":false}
{"ts":1349883595518,"patch":[[{"diffs":[[0,"te;\n        "],[1,"sequence.push(initialState);"],[0,"\n        seq"]],"start1":185,"start2":185,"length1":24,"length2":52}]],"length":379,"saved":false}
{"ts":1349883600834,"patch":[[{"diffs":[[0,"lState;\n"],[1,"        \n"],[0,"        "]],"start1":181,"start2":181,"length1":16,"length2":25},{"diffs":[[0,"tialState);\n"],[1,"        \n"],[0,"        sequ"]],"start1":223,"start2":223,"length1":24,"length2":33}]],"length":397,"saved":false}
{"ts":1349883668766,"patch":[[{"diffs":[[0,"initialState"],[1,",goalState"],[0,");\n    }\n   "]],"start1":287,"start2":287,"length1":24,"length2":34}]],"length":407,"saved":false}
{"ts":1349883672334,"patch":[[{"diffs":[[0,"rtState,"],[1," goalState,"],[0," depth)\n"]],"start1":383,"start2":383,"length1":16,"length2":27}]],"length":418,"saved":false}
{"ts":1349883675561,"patch":[[{"diffs":[[0,"te,goalState"],[1,",1"],[0,");\n    }\n   "]],"start1":297,"start2":297,"length1":24,"length2":26}]],"length":420,"saved":false}
{"ts":1349883679875,"patch":[[{"diffs":[[0,"  {\n"],[-1,"        iterativeGoalState = goalState;\n"],[0,"    "]],"start1":145,"start2":145,"length1":48,"length2":8}]],"length":380,"saved":false}
{"ts":1349883685242,"patch":[[{"diffs":[[-1,"var iterativeGoalState = null;"],[0,"\n\nfu"]],"start1":0,"start2":0,"length1":34,"length2":4}]],"length":350,"saved":false}
{"ts":1349883686230,"patch":[[{"diffs":[[-1,"\n"],[0,"\nfunction IterativeASta(init"]],"start1":0,"start2":0,"length1":29,"length2":28}]],"length":349,"saved":false}
{"ts":1349883704693,"patch":[[{"diffs":[[0,")\n    {\n"],[-1,"        \n"],[0,"        "]],"start1":110,"start2":110,"length1":25,"length2":16}]],"length":340,"saved":false}
{"ts":1349883772743,"patch":[[{"diffs":[[0,"e =[];\n    \n"],[1,"    while()\n    {\n        \n    }\n"],[0,"    if(initi"]],"start1":66,"start2":66,"length1":24,"length2":57}]],"length":373,"saved":false}
{"ts":1349883788818,"patch":[[{"diffs":[[0,"  while("],[1,"true"],[0,")\n    {\n"]],"start1":80,"start2":80,"length1":16,"length2":20}]],"length":377,"saved":false}
{"ts":1349883798415,"patch":[[{"diffs":[[0,"   {\n       "],[1,"\n      "],[0," \n    }\n    "]],"start1":95,"start2":95,"length1":24,"length2":31}]],"length":384,"saved":false}
{"ts":1349883813266,"patch":[[{"diffs":[[0,"   {\n       "],[1,"if(IterativeAStarRecursive(initialState,goalState,1));"],[0,"\n       \n   "]],"start1":95,"start2":95,"length1":24,"length2":78}]],"length":438,"saved":false}
{"ts":1349883824341,"patch":[[{"diffs":[[0,"ce =[];\n    "],[1,"var depth = 0;"],[0,"\n    while(t"]],"start1":65,"start2":65,"length1":24,"length2":38}]],"length":452,"saved":false}
{"ts":1349883828290,"patch":[[{"diffs":[[0,"alState,"],[-1,"1"],[1,"dpeth"],[0,"));\n    "]],"start1":163,"start2":163,"length1":17,"length2":21}]],"length":456,"saved":false}
{"ts":1349883831587,"patch":[[{"diffs":[[0,"te,d"],[-1,"p"],[0,"e"],[1,"p"],[0,"th))"]],"start1":168,"start2":168,"length1":10,"length2":10}]],"length":456,"saved":false}
{"ts":1349883849642,"patch":[[{"diffs":[[0,"\n       "],[-1,"if("],[1," "],[0,"Iterativ"]],"start1":113,"start2":113,"length1":19,"length2":17},{"diffs":[[0,"e,depth)"],[1,";\n       if()"],[0,");\n     "]],"start1":167,"start2":167,"length1":16,"length2":29}]],"length":467,"saved":false}
{"ts":1349883864862,"patch":[[{"diffs":[[0,"th = 0;\n"],[1,"    var goalNode = 0;\n"],[0,"    whil"]],"start1":84,"start2":84,"length1":16,"length2":38}]],"length":489,"saved":false}
{"ts":1349883879598,"patch":[[{"diffs":[[0,"\n       "],[1," goaNode ="],[0," Iterati"]],"start1":135,"start2":135,"length1":16,"length2":26},{"diffs":[[0,"    "],[-1,"if());"],[0,"\n   "]],"start1":212,"start2":212,"length1":14,"length2":8}]],"length":493,"saved":false}
{"ts":1349883907101,"patch":[[{"diffs":[[0,"     goa"],[1,"l"],[0,"Node = I"]],"start1":139,"start2":139,"length1":16,"length2":17}]],"length":494,"saved":false}
{"ts":1349883915699,"patch":[[{"diffs":[[0,"depth);\n"],[1,"        \n        if(goalNode)\n        {\n            \n        }\n"],[0,"       \n"]],"start1":202,"start2":202,"length1":16,"length2":79}]],"length":557,"saved":false}
{"ts":1349883919576,"patch":[[{"diffs":[[0,"   }"],[-1,"\n       \n     "],[0,"  \n "]],"start1":268,"start2":268,"length1":22,"length2":8}]],"length":543,"saved":false}
{"ts":1349883935976,"patch":[[{"diffs":[[0,"  {\n            "],[1,"sequence = getPathFromNode();    "],[0,"\n        }  \n   "]],"start1":246,"start2":246,"length1":32,"length2":65}]],"length":576,"saved":false}
{"ts":1349883939691,"patch":[[{"diffs":[[0,"romNode("],[1,"goalNode"],[0,");    \n "]],"start1":281,"start2":281,"length1":16,"length2":24}]],"length":584,"saved":false}
{"ts":1349883947732,"patch":[[{"diffs":[[0,"{\n    \n}"],[1,"\n\n\nfunction getPathFromNode(node)\n{\n    \n}"]],"start1":576,"start2":576,"length1":8,"length2":50}]],"length":626,"saved":false}
{"ts":1349884000092,"patch":[[{"diffs":[[0," 0;\n    "],[-1,""],[0,""],[1,"\n    "],[0,"while(tr"]],"start1":110,"start2":110,"length1":16,"length2":21},{"diffs":[[0,"  }\n"],[-1,"    if(initialState != goalState)\n    {\n        sequence.push(initialState);\n        \n        sequence = IterativeAStarRecursive(initialState,goalState,1);\n    }\n"],[0,"    "]],"start1":323,"start2":323,"length1":170,"length2":8},{"diffs":[[0,"ive("],[-1,"startStat"],[1,"currentNod"],[0,"e, g"]],"start1":385,"start2":385,"length1":17,"length2":18},{"diffs":[[0,"de(node)\n{\n "],[-1,""],[0,""],[1,"//recursion goes here."],[0,"   \n}"]],"start1":453,"start2":453,"length1":17,"length2":39}]],"length":492,"saved":false}
{"ts":1349884051084,"patch":[[{"diffs":[[0,")\n{\n    "],[1,"currentNode.getSuccessors();"],[0,"\n}\n\n\nfun"]],"start1":418,"start2":418,"length1":16,"length2":44}]],"length":520,"saved":false}
{"ts":1349884132592,"patch":[[{"diffs":[[0,"true)\n    {\n"],[1,"        //TODO make a node class.\n"],[0,"        goal"]],"start1":129,"start2":129,"length1":24,"length2":58},{"diffs":[[0,"sors();\n"],[1,"    \n"],[0,"}\n\n\nfunc"]],"start1":481,"start2":481,"length1":16,"length2":21}]],"length":559,"saved":false}
{"ts":1349884156362,"patch":[[{"diffs":[[0,"h)\n{\n   "],[1," var successors ="],[0," current"]],"start1":451,"start2":451,"length1":16,"length2":33},{"diffs":[[0,");\n    \n"],[1,"    for (index in successors)\n    {\n        \n    }\n    \n    \n"],[0,"}\n\n\nfunc"]],"start1":503,"start2":503,"length1":16,"length2":77}]],"length":637,"saved":false}
{"ts":1349884162689,"patch":[[{"diffs":[[0,"  {\n        "],[1,"successors[index]    "],[0,"\n    }\n    \n"]],"start1":543,"start2":543,"length1":24,"length2":45}]],"length":658,"saved":false}
{"ts":1349884214456,"patch":[[{"diffs":[[0,"s[index]"],[1,";"],[0,"    \n   "]],"start1":564,"start2":564,"length1":16,"length2":17}]],"length":659,"saved":false}
{"ts":1349884220206,"patch":[[{"diffs":[[0,"   for ("],[1,"var "],[0,"index in"]],"start1":512,"start2":512,"length1":16,"length2":20}]],"length":663,"saved":false}
{"contributors":[],"silentsave":false,"ts":1349923923952,"patch":[[{"diffs":[[0,"tiveASta"],[1,"r"],[0,"(initial"]],"start1":15,"start2":15,"length1":16,"length2":17}]],"length":664,"saved":false}
{"contributors":["jfdbear1@gmail.com"],"silentsave":false,"ts":1350232442116,"patch":[[{"diffs":[[0,"    }  \n"],[1,"        else{\n            dept ++;    \n        }\n        \n"],[0,"    }\n  "]],"start1":348,"start2":348,"length1":16,"length2":74}]],"length":722,"saved":false}
{"ts":1350232445168,"patch":[[{"diffs":[[0,"lNode);    \n"],[1,"            break;\n"],[0,"        }  \n"]],"start1":332,"start2":332,"length1":24,"length2":43}]],"length":741,"saved":false}
{"ts":1350232447461,"patch":[[{"diffs":[[0,"    else"],[1,"\n        "],[0,"{\n      "]],"start1":379,"start2":379,"length1":16,"length2":25}]],"length":750,"saved":false}
{"ts":1350232450291,"patch":[[{"diffs":[[0,"    dept"],[1,"h"],[0," ++;    "]],"start1":406,"start2":406,"length1":16,"length2":17}]],"length":751,"saved":false}
{"ts":1350232458927,"patch":[[{"diffs":[[0,"   }"],[-1,"  \n        "],[0,"e"],[1,"l"],[0,"lse\n"]],"start1":368,"start2":368,"length1":20,"length2":10}]],"length":741,"saved":false}
{"ts":1350232459283,"patch":[[{"diffs":[[0,"     }el"],[-1,"l"],[0,"se\n     "]],"start1":366,"start2":366,"length1":17,"length2":16}]],"length":740,"saved":false}
{"ts":1350232478801,"patch":[[{"diffs":[[0,"       }"],[1,"\n        "],[0,"else\n   "]],"start1":364,"start2":364,"length1":16,"length2":25},{"diffs":[[0,"   depth"],[-1," "],[0,"++;    \n"]],"start1":405,"start2":405,"length1":17,"length2":16}]],"length":748,"saved":false}
{"ts":1350232485320,"patch":[[{"diffs":[[0,"    "],[-1,"}\n        else\n        {\n            depth++;    \n        }"],[0,"\n   "]],"start1":367,"start2":367,"length1":67,"length2":8}]],"length":689,"saved":false}
{"ts":1350232486623,"patch":[[{"diffs":[[0," break;\n        "],[1,"}"],[0,"\n        \n    }\n"]],"start1":355,"start2":355,"length1":32,"length2":33}]],"length":690,"saved":false}
{"ts":1350232491956,"patch":[[{"diffs":[[0,"   \n"],[-1,"            break;\n"],[0,"    "]],"start1":340,"start2":340,"length1":27,"length2":8}]],"length":671,"saved":false}
{"ts":1350232497381,"patch":[[{"diffs":[[0,"lNode);    \n"],[1,"            break;\n        }\n        else\n        {\n            depth++;    \n"],[0,"        }\n  "]],"start1":332,"start2":332,"length1":24,"length2":101}]],"length":748,"saved":false}
{"ts":1350232519521,"patch":[[{"diffs":[[0,"  }\n"],[-1,"        else\n        {\n"],[0,"    "]],"start1":369,"start2":369,"length1":31,"length2":8},{"diffs":[[0,"++;    \n        "],[-1,"}"],[0,"\n        \n    }\n"]],"start1":390,"start2":390,"length1":33,"length2":32}]],"length":724,"saved":false}
{"ts":1350232525971,"patch":[[{"diffs":[[0,"        "],[-1,"    "],[0,"depth++;"]],"start1":373,"start2":373,"length1":20,"length2":16},{"diffs":[[0,"depth++;    "],[-1,"\n        \n"],[0,"        \n   "]],"start1":381,"start2":381,"length1":34,"length2":24}]],"length":710,"saved":false}
{"ts":1350232526693,"patch":[[{"diffs":[[0,";\n        }\n"],[1,"        \n"],[0,"        dept"]],"start1":361,"start2":361,"length1":24,"length2":33}]],"length":719,"saved":false}
{"ts":1350232619361,"patch":[[{"diffs":[[1,"/* ---------------\n    iterativeAStar.jjs\n    \n    A script for running the IDA* algorithm described in korf's paper.\n   ----------------*/\n\n"],[0,"\nfunction IterativeAStar(ini"]],"start1":0,"start2":0,"length1":28,"length2":169}]],"length":860,"saved":false}
{"ts":1350232678979,"patch":[[{"diffs":[[0,"----*/\n\n"],[1,"function IDA ()\n{\n    \n}\n"],[0,"\nfunctio"]],"start1":133,"start2":133,"length1":16,"length2":41}]],"length":885,"saved":false}
{"ts":1350232701289,"patch":[[{"diffs":[[0,"DA ()\n{\n    "],[1,"initialState = null;   "],[0,"\n}\n\nfunction"]],"start1":151,"start2":151,"length1":24,"length2":47}]],"length":908,"saved":false}
{"ts":1350232705529,"patch":[[{"diffs":[[0,"*/\n\n"],[-1,"function IDA ()\n{\n    initialState = null;   \n}\n\n"],[0,"func"]],"start1":137,"start2":137,"length1":57,"length2":8}]],"length":859,"saved":false}
{"ts":1350232763098,"patch":[[{"diffs":[[0,"e, depth)\n{\n"],[1,"    \n    \n"],[0,"    var succ"]],"start1":640,"start2":640,"length1":24,"length2":34}]],"length":869,"saved":false}
{"ts":1350232894910,"patch":[[{"diffs":[[0,"ile(true)\n    {\n"],[1,"        if( initialState.equals(goalState))\n        {\n            \n        }\n"],[0,"        //TODO m"]],"start1":266,"start2":266,"length1":32,"length2":109}]],"length":946,"saved":false}
{"ts":1350232912082,"patch":[[{"diffs":[[0,"  {\n            "],[1,"breakl    "],[0,"\n        }\n     "]],"start1":332,"start2":332,"length1":32,"length2":42}]],"length":956,"saved":false}
{"ts":1350232913576,"patch":[[{"diffs":[[0,"   break"],[-1,"l"],[1,";"],[0,"    \n   "]],"start1":345,"start2":345,"length1":17,"length2":17}]],"length":956,"saved":false}
{"ts":1350232935486,"patch":[[{"diffs":[[0,"ate."],[-1,"equals(goalState)"],[1,"isValid"],[0,")\n  "]],"start1":303,"start2":303,"length1":25,"length2":15}]],"length":946,"saved":false}
{"ts":1350232940840,"patch":[[{"diffs":[[0,"     if("],[-1," "],[0,"initialS"]],"start1":285,"start2":285,"length1":17,"length2":16},{"diffs":[[0,".isValid"],[1,"()"],[0,")\n      "]],"start1":305,"start2":305,"length1":16,"length2":18}]],"length":947,"saved":false}
{"ts":1350232946388,"patch":[[{"diffs":[[0,"ialState"],[-1,", goalState"],[0,")\n{\n    "]],"start1":169,"start2":169,"length1":27,"length2":16}]],"length":936,"saved":false}
{"ts":1350232949327,"patch":[[{"diffs":[[0,"alState,"],[-1,"goalState,"],[0,"depth);\n"]],"start1":431,"start2":431,"length1":26,"length2":16}]],"length":926,"saved":false}
{"ts":1350232951917,"patch":[[{"diffs":[[0,"ode,"],[-1," goalState,"],[0," dep"]],"start1":684,"start2":684,"length1":19,"length2":8}]],"length":915,"saved":false}
{"ts":1350232987691,"patch":[[{"diffs":[[0,"cursive("],[1,"new RubixNode("],[0,"initialS"]],"start1":418,"start2":418,"length1":16,"length2":30},{"diffs":[[0,"ialState"],[1,")"],[0,",depth);"]],"start1":444,"start2":444,"length1":16,"length2":17}]],"length":930,"saved":false}
{"contributors":[],"silentsave":false,"ts":1350239817614,"patch":[[{"diffs":[[0,"------*/"],[1,"\nvar goalState = RubixState.initWithGoalState();"],[0,"\n\nfuncti"]],"start1":131,"start2":131,"length1":16,"length2":64},{"diffs":[[0,"alNode = 0;\n"],[1,"\n"],[0,"    \n    whi"]],"start1":280,"start2":280,"length1":24,"length2":25},{"diffs":[[0,"    "],[-1,"while(true"],[1,"for(var depth = 0; depth < 20; depth++"],[0,")\n    {\n"],[1,".\n"],[0,"    "]],"start1":298,"start2":298,"length1":26,"length2":56},{"diffs":[[0,"ate."],[-1,"isValid"],[1,"toString() === goalState.toString"],[0,"())\n"]],"start1":370,"start2":370,"length1":15,"length2":41},{"diffs":[[0,"   }"],[-1,"\n        //TODO make a node class."],[1,"  \n"],[0,"\n   "]],"start1":449,"start2":449,"length1":42,"length2":11},{"diffs":[[0,"        "],[-1,""],[0,""],[1,"//"],[0,"depth++;"]],"start1":668,"start2":668,"length1":16,"length2":18},{"diffs":[[0,"depth)\n{"],[-1,"\n"],[0,"    "],[-1,"\n  "],[0,"  \n    v"]],"start1":780,"start2":780,"length1":24,"length2":20},{"diffs":[[0,"sors();\n"],[1,"    console.log(successors);\n"],[0,"    \n   "]],"start1":837,"start2":837,"length1":16,"length2":45}]],"length":1031,"saved":false}
{"ts":1350239819820,"patch":[[{"diffs":[[0,")\n    {\n"],[-1,".\n"],[0,"        "]],"start1":340,"start2":340,"length1":18,"length2":16}]],"length":1029,"saved":false}
{"contributors":[],"silentsave":false,"ts":1350240368428,"patch":[[{"diffs":[[0,") === goalState."],[1," "],[0,"toString())\n    "]],"start1":381,"start2":381,"length1":32,"length2":33},{"diffs":[[0,"ng())\n        {\n"],[1,"            console.log(\"ended\");\n"],[0,"            brea"]],"start1":404,"start2":404,"length1":32,"length2":66},{"diffs":[[0,"th)\n{      \n"],[1,"    if(currentNode.depth != depth)\n    {\n        return null;\n    }\n"],[0,"    var succ"]],"start1":816,"start2":816,"length1":24,"length2":92},{"diffs":[[0,"();\n"],[1,"\n"],[0,"    "],[-1,"console.log(successors);"],[1,"if(successors.length == 1)\n    {\n        // Something goes here.\n    }"],[0,"\n   "]],"start1":942,"start2":942,"length1":36,"length2":83}]],"length":1179,"saved":false}
{"contributors":[],"silentsave":false,"ts":1350240562521,"patch":[[{"diffs":[[0,"pth "],[-1,"!"],[1,"="],[0,"= de"]],"start1":849,"start2":849,"length1":9,"length2":9},{"diffs":[[0," return "],[1,"(currentNode.toString() === goalState.toString())?currentNode:"],[0,"null;\n  "]],"start1":876,"start2":876,"length1":16,"length2":78},{"diffs":[[0,"sors();\n"],[-1,""],[0,""],[1,"    var goalNode = null;\n    "],[0,"\n    if("]],"start1":1000,"start2":1000,"length1":16,"length2":45},{"diffs":[[0,"    "],[-1,"// Something goes here."],[1,"return successors[0]"],[0,"\n   "]],"start1":1079,"start2":1079,"length1":31,"length2":28},{"diffs":[[0,"        "],[1,"goalNode = IterativeAStarRecursive("],[0,"successo"]],"start1":1155,"start2":1155,"length1":16,"length2":51},{"diffs":[[0,"s[index]"],[1,",depth)"],[0,";    \n  "]],"start1":1207,"start2":1207,"length1":16,"length2":23},{"diffs":[[0,"depth);    \n    "],[-1,"}"],[1,"    \n        if(goalNode)\n        {\n            return goalNode;   \n        }\n    }\n    return null;"],[0,"\n    \n    \n}\n\n\nf"]],"start1":1216,"start2":1216,"length1":33,"length2":132}]],"length":1408,"saved":false}
{"ts":1350240567244,"patch":[[{"diffs":[[0,"null;\n    }\n"],[1,"    \n"],[0,"    var succ"]],"start1":946,"start2":946,"length1":24,"length2":29}]],"length":1413,"saved":false}
{"ts":1350240572110,"patch":[[{"diffs":[[0,"ssors[0]"],[1,";"],[0,"\n    }\n "]],"start1":1100,"start2":1100,"length1":16,"length2":17}]],"length":1414,"saved":false}
{"ts":1350240576714,"patch":[[{"diffs":[[0,"    }\n    }\n"],[1,"    \n"],[0,"    return n"]],"start1":1310,"start2":1310,"length1":24,"length2":29}]],"length":1419,"saved":false}
{"contributors":[],"silentsave":false,"ts":1350240640109,"patch":[[{"diffs":[[0,"ar.j"],[-1,"js\n"],[1,"s"],[0,"    "]],"start1":35,"start2":35,"length1":11,"length2":9},{"diffs":[[0,"null;\n    }\n"],[-1,"    \n"],[0,"    var succ"]],"start1":944,"start2":944,"length1":29,"length2":24},{"diffs":[[0,"    }\n    }\n"],[-1,"    \n"],[0,"    return n"]],"start1":1303,"start2":1303,"length1":29,"length2":24}]],"length":1407,"saved":false}
{"contributors":[],"silentsave":false,"ts":1350245078544,"patch":[[{"diffs":[[0,"-----*/\n"],[-1,"var "],[1,"AStar."],[0,"goalStat"]],"start1":130,"start2":130,"length1":20,"length2":22},{"diffs":[[0,"te();\n\nfunction "],[-1,"I"],[1,"AStar()\n{\n    this.frontier = PriorityQueue({low: true});\n    this.counts = [0,0,0,0,0];\n}\n\nAStar.prototype.i"],[0,"terativeAStar(in"]],"start1":182,"start2":182,"length1":33,"length2":141},{"diffs":[[0,"iveAStar"],[1," = function"],[0,"(initial"]],"start1":312,"start2":312,"length1":16,"length2":27},{"diffs":[[0,"h < "],[-1,"20"],[1,"5"],[0,"; de"]],"start1":444,"start2":444,"length1":10,"length2":9},{"diffs":[[0,".toString() === "],[1,"AStar."],[0,"goalState. toStr"]],"start1":489,"start2":489,"length1":32,"length2":38},{"diffs":[[0,"alState."],[-1," "],[0,"toString"]],"start1":513,"start2":513,"length1":17,"length2":16},{"diffs":[[0,"    }  \n"],[1,"    console.log(\"the depth steadily increased.\");"],[0,"\n       "]],"start1":604,"start2":604,"length1":16,"length2":65},{"diffs":[[0,"     goalNode = "],[-1,"I"],[1,"this.i"],[0,"terativeAStarRec"]],"start1":665,"start2":665,"length1":33,"length2":38},{"diffs":[[0,"    "],[1,"\n"],[0,"     "],[-1,"\n    }\n    "],[1,"   console.log(this.counts);\n        this.counts = [0,0,0,0,0];\n    }\n    console.log(sequence);"],[0,"\n   "]],"start1":899,"start2":899,"length1":24,"length2":110},{"diffs":[[0,"e;\n}"],[1,";"],[0,"\n\n"],[-1,"function I"],[1,"AStar.prototype.i"],[0,"tera"]],"start1":1024,"start2":1024,"length1":20,"length2":28},{"diffs":[[0,"ecursive"],[1," = function"],[0,"(current"]],"start1":1062,"start2":1062,"length1":16,"length2":27},{"diffs":[[0,"th)\n{      \n"],[1,"    \n"],[0,"    if(curre"]],"start1":1098,"start2":1098,"length1":24,"length2":29},{"diffs":[[0,"== depth"],[1," && this.frontier.size() === 0"],[0,")\n    {\n"]],"start1":1140,"start2":1140,"length1":16,"length2":46},{"diffs":[[0,"g() === "],[1,"AStar."],[0,"goalStat"]],"start1":1221,"start2":1221,"length1":16,"length2":22},{"diffs":[[0,"    "],[-1,"var successors = currentNode.getSuccessors();\n    var goalNode"],[1,"\n    var localNode = currentNode;\n    var successors"],[0," = n"]],"start1":1281,"start2":1281,"length1":70,"length2":60},{"diffs":[[0,"ors = null;\n"],[1,"\n"],[0,"    \n    if("]],"start1":1334,"start2":1334,"length1":24,"length2":25},{"diffs":[[0,"    "],[-1,"if(successors.length == 1)\n    {\n        return s"],[1,"do{\n        successors = localNode.getS"],[0,"ucce"]],"start1":1352,"start2":1352,"length1":57,"length2":47},{"diffs":[[0,"sors"],[-1,"[0]"],[1,"()"],[0,";\n    "],[-1,"}"],[1,"    "],[0,"\n    "],[-1,"\n"],[0,"    "]],"start1":1400,"start2":1400,"length1":24,"length2":25},{"diffs":[[0,"essors)\n"],[1,"    "],[0,"    {\n  "]],"start1":1447,"start2":1447,"length1":16,"length2":20},{"diffs":[[0,"    "],[-1,"goalNode = IterativeAStarRecursive(successors[index],depth);"],[1,"    this.frontier.push(successors[index],successors[index].totalPathCost);\n   "],[0,"    "],[1," }"],[0,"\n   "]],"start1":1469,"start2":1469,"length1":72,"length2":92},{"diffs":[[0,"    "],[-1,"if(goalNode)\n        {"],[1,"\n    \n    }while(this.frontier.size() != 0 && currentNode.toString() != AStar.goalState.toString())\n    \n    this.counts[currentNode.depth]++;\n    if(currentNode.depth == depth && this.frontier.size() === 0)"],[0,"\n    "],[1,"{\n"],[0,"    "]],"start1":1571,"start2":1571,"length1":35,"length2":222},{"diffs":[[0,"urn "],[-1,"goalNode;"],[1,"(currentNode.toString() === AStar.goalState.toString())?currentNode:null;\n"],[0,"   "],[1," }"],[0,"\n    "],[-1,"    }"],[1,"else if(currentNode.depth == depth)\n    {"],[0,"\n    "],[-1,"}\n"],[0,"    "]],"start1":1800,"start2":1800,"length1":37,"length2":138},{"diffs":[[0," return "],[-1,"null;\n"],[1,"this.iterativeAStarRecursive(this.frontier.pop(),depth);"],[0,"    \n   "]],"start1":1937,"start2":1937,"length1":22,"length2":72},{"diffs":[[0,"    "],[-1,"\n"],[0,"}\n"],[-1,"\n\nfunction getPathFromNode(node)\n{\n //rec"],[1,"        \n\n    if(successors.length == 1)\n    {\n        return successors[0];\n    }\n    \n    \n    \n    var goalNode = this.iterativeAStarRecursive(this.frontier.pop(),depth);    \n\n    ret"],[0,"ur"],[-1,"sio"],[0,"n go"],[-1,"es here. "],[1,"alNode;"],[0,"  \n}"],[1,";\n"]],"start1":2006,"start2":2006,"length1":70,"length2":211}]],"length":2217,"saved":false}
{"ts":1350245081187,"patch":[[{"diffs":[[0,".toString())"],[1,";"],[0,"\n    \n    th"]],"start1":1662,"start2":1662,"length1":24,"length2":25}]],"length":2218,"saved":false}
{"ts":1350245086818,"patch":[[{"diffs":[[0,"ize() !="],[1,"="],[0," 0 && cu"]],"start1":1607,"start2":1607,"length1":16,"length2":17}]],"length":2219,"saved":false}
{"contributors":[],"silentsave":false,"ts":1350245192955,"patch":[[{"diffs":[[0,"   \n        "],[1,"this.counts[localNode.depth]++;\n"],[0,"\n    \n    }w"]],"start1":1563,"start2":1563,"length1":24,"length2":56},{"diffs":[[0,"== 0 && "],[1,"\n        "],[0,"currentN"]],"start1":1646,"start2":1646,"length1":16,"length2":25},{"diffs":[[0,"    currentNode."],[1,"rubixState."],[0,"toString() != AS"]],"start1":1659,"start2":1659,"length1":32,"length2":43},{"diffs":[[0,"   \n"],[-1,"    this.counts[currentNode.depth]++;\n"],[0,"    "]],"start1":1730,"start2":1730,"length1":46,"length2":8}]],"length":2233,"saved":false}
{"ts":1350245198344,"patch":[[{"diffs":[[0,"pth]++;\n"],[-1,"\n"],[0,"    \n   "]],"start1":1599,"start2":1599,"length1":17,"length2":16}]],"length":2232,"saved":false}
{"ts":1350245211165,"patch":[[{"diffs":[[0,"     }\n        \n"],[1,"        localNode = this.frontier.pop();\n"],[0,"        this.cou"]],"start1":1551,"start2":1551,"length1":32,"length2":73}]],"length":2273,"saved":false}
{"contributors":[],"silentsave":false,"ts":1350245241612,"patch":[[{"diffs":[[0,"    "],[-1,"localNode = this.frontier.pop();\n        this.counts[localNode.depth]++;"],[1," if(successors.length == 1)\n        {\n            return successors[0];\n        }\n        \n        "],[0,"\n   "]],"start1":1571,"start2":1571,"length1":80,"length2":107},{"diffs":[[0,"ing());\n"],[-1,""],[0,"    \n"],[1,"    this.counts[currentNode.depth]++;\n"],[0,"    if(c"]],"start1":1788,"start2":1788,"length1":21,"length2":59},{"diffs":[[0,"\n   "],[-1," if(successors.length == 1)\n    {\n        return successors[0];\n    }"],[0,"\n   "]],"start1":2142,"start2":2142,"length1":77,"length2":8}]],"length":2269,"saved":false}
{"ts":1350245248632,"patch":[[{"diffs":[[0,"];\n        }"],[-1,"\n"],[0,"        "],[-1,"\n "],[0,"       \n    "]],"start1":1644,"start2":1644,"length1":35,"length2":32}]],"length":2266,"saved":false}
{"contributors":[],"silentsave":false,"ts":1350257648863,"patch":[[{"diffs":[[0,"de = 0;\n"],[-1,"\n"],[0,"    "],[1,"console.log(AStar.goalState.toString(true));\n    console.log(initialState.toString(true));\n\n"],[0,"\n    for"]],"start1":403,"start2":403,"length1":21,"length2":112},{"diffs":[[0,"h < "],[-1,"5"],[1,"3"],[0,"; de"]],"start1":535,"start2":535,"length1":9,"length2":9},{"diffs":[[0,"    }  \n"],[1,"    "],[0,"    cons"]],"start1":695,"start2":695,"length1":16,"length2":20},{"diffs":[[0,"creased.\");\n"],[1,"        \n"],[0,"        goal"]],"start1":745,"start2":745,"length1":24,"length2":33},{"diffs":[[0,"iveAStar"],[-1,"Recursive"],[1,"DepthLimted"],[0,"(new Rub"]],"start1":796,"start2":796,"length1":25,"length2":27},{"diffs":[[0,"    "],[-1,"\n        if(goalNode)\n        {\n            sequence = getPathFromNode"],[1,"console.log(goalNode);\n        if"],[0,"(goa"]],"start1":856,"start2":856,"length1":78,"length2":41},{"diffs":[[0,"oalNode)"],[-1,";"],[1,"\n    "],[0,"    "],[1,"{"],[0,"\n       "]],"start1":895,"start2":895,"length1":21,"length2":26},{"diffs":[[0,"    "],[-1," "],[-1,"   \n        //depth++;       \n        console.log(this.counts);\n        this.counts = [0,0,0,0,0];\n    }\n    console.log(sequence);\n    return sequence;\n};\n"],[1,"}\n\n    return sequence;\n};\n\n// I find the do while to be more effective in a browser."],[0,"\nASt"]],"start1":943,"start2":943,"length1":165,"length2":93},{"diffs":[[0,"iveAStar"],[-1,"Recursive"],[1,"DepthLimted"],[0," = funct"]],"start1":1055,"start2":1055,"length1":25,"length2":27},{"diffs":[[0,"    "],[-1,"\n        for (var index in successors)\n        {\n"],[1,"console.log(successors.length);\n        if(successors.length == 1)\n        {\n            return successors[0];\n        }               \n        \n        for (var index in successors)\n        {\n            if(successors[index].toString(false,false) \n                === AStar.goalState.toString(false,false))\n            {\n                return successors[index];   \n            }\n            \n            if(successors[index].depth != depth)\n            {\n    "],[0,"    "]],"start1":1416,"start2":1416,"length1":57,"length2":469},{"diffs":[[0,"hCost);\n        "],[1,"    "],[0,"}\n        \n     "]],"start1":1956,"start2":1956,"length1":32,"length2":36},{"diffs":[[0,"    "],[1,"}"],[0,"\n    "],[1,"\n"],[0,"     "],[-1,"if(successors.length == 1)"],[1,"  // console.log(localNode.rubixState.toString(true));"],[0,"\n   "]],"start1":1982,"start2":1982,"length1":44,"length2":74},{"diffs":[[0,"    "],[-1,"{\n "],[1,"\n"],[0,"        "],[-1,"   return successors[0];"],[1,"if(this.frontier.size() > 0)"],[0,"\n   "]],"start1":2057,"start2":2057,"length1":43,"length2":45},{"diffs":[[0,"() > 0)\n        "],[-1,"}"],[1,"{\n"],[0,"               \n"]],"start1":2091,"start2":2091,"length1":33,"length2":34},{"diffs":[[0,"            "],[-1,"   "],[1,"localNode = this.frontier.pop();    \n        }"],[0,"\n    \n    }w"]],"start1":2109,"start2":2109,"length1":27,"length2":70},{"diffs":[[0,"        "],[-1,"current"],[1,"local"],[0,"Node.rub"]],"start1":2215,"start2":2215,"length1":23,"length2":21},{"diffs":[[0,"oString("],[1,"false,false"],[0,") != ASt"]],"start1":2245,"start2":2245,"length1":16,"length2":27},{"diffs":[[0,"ing("],[-1,"));\n    \n    this.counts[currentNode.depth]++;\n    if(currentNode.depth == depth && this.frontier.size() === 0)"],[1,"false,false));"],[0,"\n    "],[-1,"{"],[0,"\n "],[-1,"   "],[1,"\n"],[0,"    "]],"start1":2290,"start2":2290,"length1":130,"length2":30},{"diffs":[[0,"\n    return "],[-1,"(currentNod"],[1,"localNode.rubixStat"],[0,"e.toString()"]],"start1":2315,"start2":2315,"length1":35,"length2":43},{"diffs":[[0,"ng()"],[-1,")?current"],[1,"?local"],[0,"Node:"],[1," "],[0,"null;"],[-1,"\n    }\n    else if(currentNode.depth == depth)\n    {\n        return this.iterativeAStarRecursive(this.frontier.pop(),depth);    \n    }\n        \n\n   \n  "],[1,"  \n};\n\nAStar.prototype.pathFromNode = function(node)\n{\n    if(node)\n    {\n        return this.pathFromNode(node.parent) + node.action.toString();\n    }\n    else"],[0,"  \n    "],[1,"{"],[0,"\n    "],[-1,"\n"],[0,"    "],[-1,"var goalNode = this.iterativeAStarRecursive(this.frontier.pop(),depth);    \n\n    return goalNode;  "],[1,"return \"\";\n    }"],[0,"\n};\n"]],"start1":2385,"start2":2385,"length1":294,"length2":218}]],"length":2603,"saved":false}
{"contributors":[],"silentsave":false,"ts":1350257676431,"patch":[[{"diffs":[[0,"Node)\n        {\n"],[1,"            this.pathFromNode(goalNode);\n"],[0,"            brea"]],"start1":898,"start2":898,"length1":32,"length2":73}]],"length":2644,"saved":false}
{"contributors":[],"silentsave":false,"ts":1350272441514,"patch":[[{"diffs":[[0,"});\n"],[-1,"    this.counts = [0,0,0,0,0];\n"],[0,"}\n\nA"]],"start1":252,"start2":252,"length1":39,"length2":8},{"diffs":[[0,"e = "],[-1,"0;\n    console.log(AStar.goalState.toString(true))"],[1,"null"],[0,";\n  "]],"start1":373,"start2":373,"length1":58,"length2":12},{"diffs":[[0,"rue));\n\n"],[-1,"\n"],[0,"    for("]],"start1":422,"start2":422,"length1":17,"length2":16},{"diffs":[[0,"h < "],[-1,"3"],[1,"20"],[0,"; de"]],"start1":457,"start2":457,"length1":9,"length2":10},{"diffs":[[0,"  {\n"],[-1,"            console.log(\"ended\");\n"],[0,"    "]],"start1":553,"start2":553,"length1":42,"length2":8},{"diffs":[[0,"}  \n"],[-1,"        console.log(\"the depth steadily increased.\");\n"],[0,"    "]],"start1":588,"start2":588,"length1":62,"length2":8},{"diffs":[[0,"        "],[-1,"console.log"],[1,"\n        if"],[0,"(goalNod"]],"start1":687,"start2":687,"length1":27,"length2":27},{"diffs":[[0,"    if(goalNode)"],[-1,";"],[0,"\n        if(goal"]],"start1":700,"start2":700,"length1":33,"length2":32},{"diffs":[[0,"    "],[-1,"if(goalNode)\n        {"],[1,"{\n            console.log(goalNode.rubixState.toString(true));\n            console.log(\"goal\");"],[0,"\n   "]],"start1":721,"start2":721,"length1":30,"length2":103},{"diffs":[[0,"            "],[1,"console.log("],[0,"this.pathFro"]],"start1":821,"start2":821,"length1":24,"length2":36},{"diffs":[[0,"oalNode)"],[1,")"],[0,";\n      "]],"start1":864,"start2":864,"length1":16,"length2":17},{"diffs":[[0,";\n        }\n"],[1,"        else{\n                 console.log(\"The depth steadily increased.\");\n   \n        }\n"],[0,"    }\n\n    r"]],"start1":892,"start2":892,"length1":24,"length2":115},{"diffs":[[0,"();\n"],[-1,"        console.log(successors.length);"],[0,""],[1,""],[0,"\n   "]],"start1":1460,"start2":1460,"length1":47,"length2":8},{"diffs":[[0,"       \n        "],[-1,""],[0,""],[1,"console.log(successors.length);"],[0,"\n        for (va"]],"start1":1561,"start2":1561,"length1":32,"length2":63},{"diffs":[[0,"      }\n"],[-1,"            \n"],[0,"        "]],"start1":1837,"start2":1837,"length1":29,"length2":16},{"diffs":[[0,"    "],[-1,"\n       // console.log(localNode.rubixState.toString(true));\n"],[0,""],[1,""],[0,"    "]],"start1":2019,"start2":2019,"length1":69,"length2":8},{"diffs":[[0," if(node"],[1,".depth > 1"],[0,")\n    {\n"],[1,"        console.log(node);\n"],[0,"        "]],"start1":2434,"start2":2434,"length1":24,"length2":61},{"diffs":[[0,"rent"],[-1,") + node.action.toString();\n    }\n    else  \n    {\n        return \"\""],[1,"Node) + \", \" + RubixState.faceValues[node.nodeAction[0]] + \":\" + node.nodeAction[1];\n    }\n    else if (node.depth === 1) \n    {\n        console.log(node);\n        return RubixState.faceValues[node.nodeAction[0]] + \":\" + node.nodeAction[1]"],[0,";\n  "]],"start1":2527,"start2":2527,"length1":76,"length2":247}]],"length":2781,"saved":false}
{"contributors":["jfdbear1@gmail.com"],"silentsave":false,"ts":1350314799037,"patch":[[{"diffs":[[0,"       \n        "],[1,"//"],[0,"console.log(succ"]],"start1":1561,"start2":1561,"length1":32,"length2":34},{"diffs":[[0,"[index],"],[1,"\n                    CubeHeuristics.heuristic(successors[index].rubixState) + \n                    "],[0,"successo"]],"start1":1955,"start2":1955,"length1":16,"length2":115},{"diffs":[[0,"      }\n    "],[1,"    console.log(\"popped\");\n        console.log(top);"],[0,"\n    }while("]],"start1":2231,"start2":2231,"length1":24,"length2":76}]],"length":2934,"saved":false}
{"ts":1350314805248,"patch":[[{"diffs":[[0,"ole.log("],[1,"this.frontier."],[0,"top);\n  "]],"start1":2282,"start2":2282,"length1":16,"length2":30}]],"length":2948,"saved":false}
{"ts":1350314810364,"patch":[[{"diffs":[[0,"      }\n        "],[1,"\n"],[0,"    "],[1,"    console.log(this.frontier.top);"],[0,"\n        if(this"]],"start1":2112,"start2":2112,"length1":36,"length2":72},{"diffs":[[0,"\");\n"],[-1,"        console.log(this.frontier.top);\n"],[0,"    "]],"start1":2302,"start2":2302,"length1":48,"length2":8}]],"length":2944,"saved":false}
{"ts":1350314836181,"patch":[[{"diffs":[[0,"tier.top"],[1,"()"],[0,");\n     "]],"start1":2158,"start2":2158,"length1":16,"length2":18}]],"length":2946,"saved":false}
{"ts":1350315051957,"patch":[[{"diffs":[[0,"er.top()"],[1,", CubeHeuristics.heuristic(this.frontier.top().object)"],[0,");\n     "]],"start1":2160,"start2":2160,"length1":16,"length2":70}]],"length":3000,"saved":false}
{"ts":1350315057822,"patch":[[{"diffs":[[0,".object)"],[1,".rubixState"],[0,");\n     "]],"start1":2214,"start2":2214,"length1":16,"length2":27}]],"length":3011,"saved":false}
{"ts":1350315067832,"patch":[[{"diffs":[[0,").object"],[-1,")"],[0,".rubixSt"]],"start1":2213,"start2":2213,"length1":17,"length2":16},{"diffs":[[0,"ixState)"],[1,")"],[0,";\n      "]],"start1":2225,"start2":2225,"length1":16,"length2":17}]],"length":3011,"saved":false}
{"ts":1350315125087,"patch":[[{"diffs":[[0,"    "],[-1,"}\n        }\n        \n        console.log(this.frontier.top(), CubeHeuristics.heuristic(this.frontier.top().object.rubixState));"],[1,"        console.log(CubeHeuristics.heuristic(successors[index].rubixState), successors[index].rubixState)\n            }\n        }\n        "],[0,"\n   "]],"start1":2104,"start2":2104,"length1":135,"length2":146}]],"length":3022,"saved":false}
{"ts":1350315150563,"patch":[[{"diffs":[[0,"s[index]"],[-1,".rubixState"],[0,")\n      "]],"start1":2193,"start2":2193,"length1":27,"length2":16}]],"length":3011,"saved":false}
{"ts":1350315453974,"patch":[[{"diffs":[[0,"[index])"],[1,";"],[0,"\n       "]],"start1":2194,"start2":2194,"length1":16,"length2":17}]],"length":3012,"saved":false}
{"ts":1350315500079,"patch":[[{"diffs":[[0,"    "],[-1,"console.log(\"popped\");"],[0,"\n   "]],"start1":2347,"start2":2347,"length1":30,"length2":8}]],"length":2990,"saved":false}
{"ts":1350315512120,"patch":[[{"diffs":[[0,"[index])"],[-1,";"],[0,"\n       "]],"start1":2194,"start2":2194,"length1":17,"length2":16},{"diffs":[[0,"  }\n        "],[1,"console.log(\"popped\");"],[0,"\n    }while("]],"start1":2338,"start2":2338,"length1":24,"length2":46}]],"length":3011,"saved":false}
{"contributors":[],"silentsave":false,"ts":1350315534032,"patch":[[{"diffs":[[0,"    "],[-1,"console.log(\"popped\");"],[0,"\n   "]],"start1":2346,"start2":2346,"length1":30,"length2":8}]],"length":2989,"saved":false}
{"ts":1350319285970,"patch":[[{"diffs":[[0,"depth = "],[-1,"0"],[1,"19"],[0,"; depth "]],"start1":442,"start2":442,"length1":17,"length2":18},{"diffs":[[0,"dex "],[-1,"in successors"],[1,"= 0; index< successors.length; index++"],[0,")\n  "]],"start1":1631,"start2":1631,"length1":21,"length2":46},{"diffs":[[0,"[index]."],[1,"rubixState."],[0,"toString"]],"start1":1710,"start2":1710,"length1":16,"length2":27},{"diffs":[[0,")\n            {\n"],[1,"           /* console.log(JSON.stringify(successors[index].rubixState));\n            console.log(JSON.stringify(AStar.goalState));\n            console.log( CubeHeuristics.heuristic(successors[index].rubixState));\n            console.log( CubeHeuristics.heuristic(AStar.goalState));*/\n\n"],[0,"                "]],"start1":1809,"start2":1809,"length1":32,"length2":317},{"diffs":[[0," \n            }\n"],[1,"            \n"],[0,"            if(s"]],"start1":2153,"start2":2153,"length1":32,"length2":45},{"diffs":[[0,"    "],[-1,"console.log(CubeHeuristics.heuristic(successors[index].rubixState), successors[index])"],[0,""],[1,""],[0,"\n   "]],"start1":2447,"start2":2447,"length1":94,"length2":8},{"diffs":[[0,"  }\n        "],[-1,""],[0,""],[1,"console.log(\"popped\");"],[0,"\n    }while("]],"start1":2587,"start2":2587,"length1":24,"length2":46}]],"length":3260,"saved":false}
{"ts":1350319372933,"patch":[[{"diffs":[[0,"h = "],[-1,"19"],[1,"0"],[0,"; de"]],"start1":446,"start2":446,"length1":10,"length2":9}]],"length":3259,"saved":false}
{"ts":1350320322278,"patch":[[{"diffs":[[0,"            "],[-1,"     "],[0,"console.log("]],"start1":918,"start2":918,"length1":29,"length2":24}]],"length":3254,"saved":false}
{"ts":1350320665317,"patch":[[{"diffs":[[0,"thCost);"],[-1,"\n                "],[0,"    \n   "]],"start1":2416,"start2":2416,"length1":33,"length2":16},{"diffs":[[0,";    \n        }\n"],[1,"        \n"],[0,"        console."]],"start1":2552,"start2":2552,"length1":32,"length2":41}]],"length":3246,"saved":false}
{"contributors":[],"silentsave":false,"ts":1350343463210,"patch":[[{"diffs":[[0,"ex++)\n        {\n"],[1,"            /*\n"],[0,"            if(s"]],"start1":1663,"start2":1663,"length1":32,"length2":47},{"diffs":[[0,"  \n            }"],[1,"*/"],[0,"\n            \n  "]],"start1":2161,"start2":2161,"length1":32,"length2":34}]],"length":3263,"saved":false}
{"ts":1350343565899,"patch":[[{"diffs":[[0,"State));"],[-1,"*/"],[0,"\n\n      "]],"start1":2107,"start2":2107,"length1":18,"length2":16}]],"length":3261,"saved":false}
{"contributors":[],"silentsave":false,"ts":1350363491131,"patch":[[{"diffs":[[0," null;\n\n    "],[-1,""],[0,""],[1,"AStar.goalState"],[0,"\n    do{\n   "]],"start1":1390,"start2":1390,"length1":24,"length2":39},{"diffs":[[0,"dex++)\n        {"],[-1,"\n"],[0,"            /*\n "]],"start1":1677,"start2":1677,"length1":33,"length2":32},{"diffs":[[0,"        "],[-1,"/*"],[0,"\n       "]],"start1":1697,"start2":1697,"length1":18,"length2":16},{"diffs":[[0,"ex]."],[-1,"rubixState.toString(false,false) \n                === AStar.goalState.toString(false,false))"],[1,"depth != depth)\n            {\n                this.frontier.push(successors[index],"],[0,"\n   "]],"start1":1735,"start2":1735,"length1":100,"length2":91},{"diffs":[[0,"dex],\n          "],[-1,"  {\n"],[0,"           /* co"]],"start1":1817,"start2":1817,"length1":36,"length2":32},{"diffs":[[0,"    "],[-1," /* console.log(JSON.stringify"],[1,"CubeHeuristics.heuristic"],[0,"(suc"]],"start1":1839,"start2":1839,"length1":38,"length2":32},{"diffs":[[0,"dex].rubixState)"],[-1,");"],[1," + "],[0,"\n            con"]],"start1":1881,"start2":1881,"length1":34,"length2":35},{"diffs":[[0,"    "],[-1,"console.log(JSON.stringify(AStar.goalState));\n            console.log"],[1,"        successors[index].totalPathCost);    \n                    \n                if"],[0,"( Cu"]],"start1":1909,"start2":1909,"length1":77,"length2":93},{"diffs":[[0,"ixState)"],[-1,");\n"],[1," === 0)\n                {\n        "],[0,"        "]],"start1":2046,"start2":2046,"length1":19,"length2":50},{"diffs":[[0,"tic("],[-1,"AStar.goalState));\n\n                return "],[0,"succ"]],"start1":2134,"start2":2134,"length1":51,"length2":8},{"diffs":[[0,"s[index]"],[-1,";   "],[1,".rubixState));"],[0,"\n       "]],"start1":2147,"start2":2147,"length1":20,"length2":30},{"diffs":[[0,"    "],[-1,"}*/"],[1,"    }"],[0,"\n   "]],"start1":2178,"start2":2178,"length1":11,"length2":13},{"diffs":[[0,"  }\n            "],[1,"}"],[0,"\n            if("]],"start1":2184,"start2":2184,"length1":32,"length2":33},{"diffs":[[0,"  }\n            "],[1,"else "],[0,"if"],[1," "],[0,"(successors[inde"]],"start1":2198,"start2":2198,"length1":34,"length2":40},{"diffs":[[0,"sors[index]."],[-1,"depth != depth)"],[1,"rubixState.toString(false,false) "],[0,"\n           "]],"start1":2229,"start2":2229,"length1":39,"length2":57},{"diffs":[[0,"    "],[-1,"{\n"],[0,"    "],[-1,"            this.frontier.push(successors[index],\n                    CubeHeuristics.heuristic(successors[index].rubixState) + "],[1,"=== AStar.goalState.toString(false,false))\n            {"],[0,"\n   "]],"start1":2283,"start2":2283,"length1":141,"length2":68},{"diffs":[[0,"                "],[-1,"   "],[1,"return"],[0," successors[inde"]],"start1":2348,"start2":2348,"length1":35,"length2":38},{"diffs":[[0,"s[index]"],[-1,".totalPathCost); "],[1,";"],[0,"   \n    "]],"start1":2380,"start2":2380,"length1":33,"length2":17},{"diffs":[[0,");    \n        }"],[-1,""],[0,""],[1,"\n        \n         "],[0,"\n        \n      "]],"start1":2515,"start2":2515,"length1":32,"length2":51}]],"length":3229,"saved":false}
{"contributors":[],"silentsave":false,"ts":1350398946342,"patch":[[{"diffs":[[0,"ixState."],[-1,"init"],[1,"create"],[0,"WithGoal"]],"start1":159,"start2":159,"length1":20,"length2":22}]],"length":3231,"saved":false}
{"ts":1350403548071,"patch":[[{"diffs":[[0,"log("],[-1,"goalNode.r"],[1,"R"],[0,"ubix"]],"start1":749,"start2":749,"length1":18,"length2":9},{"diffs":[[0,"te.toString("],[-1,"tru"],[1,"goalNod"],[0,"e));\n       "]],"start1":761,"start2":761,"length1":27,"length2":31}]],"length":3226,"saved":false}
{"ts":1350403575163,"patch":[[{"diffs":[[0,"ole.log("],[-1,"initial"],[1,"Rubix"],[0,"State.to"]],"start1":393,"start2":393,"length1":23,"length2":21},{"diffs":[[0,"ing("],[1,"toString("],[0,"true))"],[1,")"],[0,";\n\n "]],"start1":417,"start2":417,"length1":14,"length2":24}]],"length":3234,"saved":false}
{"ts":1350403884474,"patch":[[{"diffs":[[0,"ing("],[-1,"toString(true)"],[1,"initialState"],[0,"));\n"]],"start1":417,"start2":417,"length1":22,"length2":20}]],"length":3232,"saved":false}
{"ts":1350403908010,"patch":[[{"diffs":[[0," if("],[-1,"initialState.toString() === "],[1,"RubixState.compare(initialState,"],[0,"ASta"]],"start1":495,"start2":495,"length1":36,"length2":40},{"diffs":[[0,"oalState"],[-1,".toString()"],[0,")\n      "]],"start1":538,"start2":538,"length1":27,"length2":16}]],"length":3225,"saved":false}
{"ts":1350403909922,"patch":[[{"diffs":[[0,"alState)"],[1,")"],[0,"\n       "]],"start1":539,"start2":539,"length1":16,"length2":17}]],"length":3226,"saved":false}
{"ts":1350403992055,"patch":[[{"diffs":[[0,"ate."],[-1,"compare"],[1,"isEqual"],[0,"(ini"]],"start1":506,"start2":506,"length1":15,"length2":15}]],"length":3226,"saved":false}
{"ts":1350404176240,"patch":[[{"diffs":[[0,"    "],[-1," console.log(RubixState.toString(goalNode));\n            console.log(\"goal\");"],[0,"\n   "]],"start1":736,"start2":736,"length1":85,"length2":8}]],"length":3149,"saved":false}
{"ts":1350404178459,"patch":[[{"diffs":[[0,"lNode)\n        {"],[-1,"\n"],[0,"           \n    "]],"start1":712,"start2":712,"length1":33,"length2":32}]],"length":3148,"saved":false}
{"ts":1350404248434,"patch":[[{"diffs":[[0,";\n    }\n"],[1,"    else\n    {\n        return \"It was already solved!\"\n    }\n"],[0,"};\n"]],"start1":3137,"start2":3137,"length1":11,"length2":72}]],"length":3209,"saved":false}
{"ts":1350404266564,"patch":[[{"diffs":[[0,"solved!\""],[1,";"],[0,"\n    }\n}"]],"start1":3191,"start2":3191,"length1":16,"length2":17}]],"length":3210,"saved":false}
{"ts":1350404992963,"patch":[[{"diffs":[[0,"l;\n\n"],[-1,"    AStar.goalState\n"],[0,"    "]],"start1":1313,"start2":1313,"length1":28,"length2":8}]],"length":3190,"saved":false}
{"ts":1350405017554,"patch":[[{"diffs":[[0,"else if "],[1,"(RubixState.isEqual"],[0,"(success"]],"start1":2113,"start2":2113,"length1":16,"length2":35},{"diffs":[[0,"tate"],[-1,".toString(false,false) \n                === AStar.goalState.toString(false,fals"],[1,",AStar.goalStat"],[0,"e))\n"]],"start1":2165,"start2":2165,"length1":87,"length2":23}]],"length":3145,"saved":false}
{"ts":1350405103120,"patch":[[{"diffs":[[0,".isEqual"],[-1,"("],[0,"successo"]],"start1":2132,"start2":2132,"length1":17,"length2":16},{"diffs":[[0,"].rubixState"],[-1,",AStar.goalStat"],[1,".toString(false,false) \n                === AStar.goalState.toString(false,fals"],[0,"e))\n        "]],"start1":2156,"start2":2156,"length1":39,"length2":103}]],"length":3208,"saved":false}
{"contributors":["jfdbear1@gmail.com"],"silentsave":false,"ts":1350405583718,"patch":[[{"diffs":[[0,"urn "],[-1,"(currentNode.toString() === "],[1,"RubixState.isEqual(currentNode.rubixState,"],[0,"ASta"]],"start1":1167,"start2":1167,"length1":36,"length2":50},{"diffs":[[0,"tate"],[-1,".toString())?"],[1,") ? "],[0,"curr"]],"start1":1224,"start2":1224,"length1":21,"length2":12},{"diffs":[[0,"rentNode"],[-1,":"],[1," : "],[0,"null;\n  "]],"start1":1235,"start2":1235,"length1":17,"length2":19},{"diffs":[[0,".isEqual"],[1,"("],[0,"successo"]],"start1":2139,"start2":2139,"length1":16,"length2":17},{"diffs":[[0,"sEqual(successor"],[-1,"s"],[0,"[index].rubixSta"]],"start1":2141,"start2":2141,"length1":33,"length2":32},{"diffs":[[0,"tate"],[-1,".toString(false,false) \n                === AStar.goalState.toString(false,fals"],[1,",AStar.goalStat"],[0,"e))\n"]],"start1":2171,"start2":2171,"length1":87,"length2":23},{"diffs":[[0,"    "],[-1,"localNode.rubixState.toString(false,false) != AStar.goalState.toString(false,false));\n    \n \n    return localNode.rubixState.toString() === "],[1,"!RubixState.isEqual(successor[index].rubixState,AStar.goalState));\n    \n \n    return RubixState.isEqual(successor[index].rubixState,"],[0,"ASta"]],"start1":2497,"start2":2497,"length1":148,"length2":140},{"diffs":[[0,"tate"],[-1,".toString("],[0,")"],[1," "],[0,"?loc"]],"start1":2644,"start2":2644,"length1":19,"length2":10}]],"length":3134,"saved":false}
{"contributors":[],"silentsave":false,"ts":1350408503450,"patch":[[{"diffs":[[0,"tate));\n"],[-1,""],[0,""],[1,"return;"],[0,"\n    for"]],"start1":429,"start2":429,"length1":16,"length2":23},{"diffs":[[0,"    "],[-1,"break;    \n        }  "],[1,"goalNode = initialState;\n        } \n        else"],[0,"\n   "]],"start1":574,"start2":574,"length1":30,"length2":56},{"diffs":[[0,"   else\n        "],[-1,"\n"],[1,"{\n    "],[0,"        goalNode"]],"start1":619,"start2":619,"length1":33,"length2":38},{"diffs":[[0,"te),depth);\n"],[1,"        }\n"],[0,"        \n   "]],"start1":715,"start2":715,"length1":24,"length2":34},{"diffs":[[0,"        "],[1,"//"],[0,"CubeHeur"]],"start1":1789,"start2":1789,"length1":16,"length2":18},{"diffs":[[0,"            "],[1,"/*"],[0," if( CubeHeu"]],"start1":1939,"start2":1939,"length1":24,"length2":26},{"diffs":[[0,"               }"],[1,"*/"],[0,"\n            }\n "]],"start1":2129,"start2":2129,"length1":32,"length2":34},{"diffs":[[0,"sEqual(successor"],[1,"s"],[0,"[index].rubixSta"]],"start1":2195,"start2":2195,"length1":32,"length2":33},{"diffs":[[0,"isEqual("],[-1,"successor[index]"],[1,"localNode"],[0,".rubixSt"]],"start1":2568,"start2":2568,"length1":32,"length2":25},{"diffs":[[0,"ual("],[-1,"successor[index]"],[1,"localNode"],[0,".rub"]],"start1":2649,"start2":2649,"length1":24,"length2":17}]],"length":3175,"saved":false}
{"ts":1350408508299,"patch":[[{"diffs":[[0,"));\n"],[-1,"return;"],[0,"\n   "]],"start1":433,"start2":433,"length1":15,"length2":8}]],"length":3168,"saved":false}
{"ts":1350408516603,"patch":[[{"diffs":[[0,"                "],[-1,"    "],[1,"return"],[0,"\n               "]],"start1":1908,"start2":1908,"length1":36,"length2":38}]],"length":3170,"saved":false}
{"ts":1350408517674,"patch":[[{"diffs":[[0,"  return"],[1,"'"],[0,"\n       "]],"start1":1922,"start2":1922,"length1":16,"length2":17}]],"length":3171,"saved":false}
{"ts":1350408518208,"patch":[[{"diffs":[[0,"  return"],[-1,"'"],[0,"\n       "]],"start1":1922,"start2":1922,"length1":17,"length2":16}]],"length":3170,"saved":false}
{"ts":1350408519458,"patch":[[{"diffs":[[0,"  return"],[1,";"],[0,"\n       "]],"start1":1922,"start2":1922,"length1":16,"length2":17}]],"length":3171,"saved":false}
{"contributors":[],"silentsave":false,"ts":1350409410928,"patch":[[{"diffs":[[0,"depth = "],[-1,"0"],[1,"19"],[0,"; depth "]],"start1":450,"start2":450,"length1":17,"length2":18}]],"length":3172,"saved":false}
{"ts":1350413855805,"patch":[[{"diffs":[[0,"h = "],[-1,"19"],[1,"0"],[0,"; de"]],"start1":454,"start2":454,"length1":10,"length2":9}]],"length":3171,"saved":false}
{"ts":1350419614408,"patch":[[{"diffs":[[0,"     }\n        \n"],[1,"        console.log(goalNode);\n"],[0,"        if(goalN"]],"start1":723,"start2":723,"length1":32,"length2":63}]],"length":3202,"saved":false}
{"ts":1350419630682,"patch":[[{"diffs":[[0,"   \n"],[-1,"        console.log(goalNode);\n"],[0,"    "]],"start1":735,"start2":735,"length1":39,"length2":8}]],"length":3171,"saved":false}
{"ts":1350419745289,"patch":[[{"diffs":[[0,"hCost);    \n"],[1,"                    \n"],[0,"            "]],"start1":1896,"start2":1896,"length1":24,"length2":45}]],"length":3192,"saved":false}
{"ts":1350419746768,"patch":[[{"diffs":[[0,"   \n"],[-1,"                return;\n"],[0,"    "]],"start1":1925,"start2":1925,"length1":32,"length2":8}]],"length":3168,"saved":false}
{"contributors":[],"silentsave":false,"ts":1350427841511,"patch":[[{"diffs":[[0,"-----*/\n"],[1,"   \n// THe goal state for this variant of AStar.\n"],[0,"AStar.go"]],"start1":130,"start2":130,"length1":16,"length2":65},{"diffs":[[0,"ate();\n\n"],[1,"/**\n * \n */\n"],[0,"function"]],"start1":232,"start2":232,"length1":16,"length2":28}]],"length":3229,"saved":false}
{"ts":1350427899763,"patch":[[{"diffs":[[0,"\n * "],[-1,"\n */\nfunction AStar()\n{"],[1,"Generates an object that may perform an AStar search.\n */\nfunction AStar()\n{\n    // The frontier that will do the majority of the algorithm's work."],[0,"\n   "]],"start1":243,"start2":243,"length1":31,"length2":155}]],"length":3353,"saved":false}
{"ts":1350427931025,"patch":[[{"diffs":[[0,"e});\n}\n\n"],[1,"/**\n * The outward facing mechanism to access the IDA* search.\n * \n */\n"],[0,"AStar.pr"]],"start1":438,"start2":438,"length1":16,"length2":87}]],"length":3424,"saved":false}
{"ts":1350427955503,"patch":[[{"diffs":[[0,"rch.\n * "],[1,"@param initialState The initial state of the cube to search for a solution."],[0,"\n */\nASt"]],"start1":504,"start2":504,"length1":16,"length2":91}]],"length":3499,"saved":false}
{"ts":1350427999699,"patch":[[{"diffs":[[0,"lution.\n"],[1," * @return The sequence to reach the goal state from the initial state.\n"],[0," */\nASta"]],"start1":580,"start2":580,"length1":16,"length2":88}]],"length":3571,"saved":false}
{"ts":1350428010204,"patch":[[{"diffs":[[0,"ce ="],[-1,"[]"],[0,";\n  "]],"start1":736,"start2":736,"length1":10,"length2":8}]],"length":3569,"saved":false}
{"ts":1350428011616,"patch":[[{"diffs":[[0,"quence ="],[1,"\"\""],[0,";\n    va"]],"start1":732,"start2":732,"length1":16,"length2":18}]],"length":3571,"saved":false}
{"ts":1350428027953,"patch":[[{"diffs":[[0,"ence =\"\""],[-1,";\n    var"],[1,","],[0," depth ="]],"start1":734,"start2":734,"length1":25,"length2":17},{"diffs":[[0,"epth = 0"],[-1,";\n    var"],[1,","],[0," goalNod"]],"start1":745,"start2":745,"length1":25,"length2":17},{"diffs":[[0,"ode = null;\n"],[1,"    \n"],[0,"    console."]],"start1":760,"start2":760,"length1":24,"length2":29}]],"length":3560,"saved":false}
{"ts":1350428030427,"patch":[[{"diffs":[[0,"    "],[-1,"\n    console.log(RubixState.toString(initialState));"],[0,"\n\n  "]],"start1":772,"start2":772,"length1":60,"length2":8}]],"length":3508,"saved":false}
{"ts":1350428033735,"patch":[[{"diffs":[[0,"    for("],[-1,"var "],[0,"depth = "]],"start1":778,"start2":778,"length1":20,"length2":16}]],"length":3504,"saved":false}
{"ts":1350428046383,"patch":[[{"diffs":[[0,"        "],[-1,"console.log("],[1,"state = "],[0,"this.pat"]],"start1":1121,"start2":1121,"length1":28,"length2":24},{"diffs":[[0,"oalNode)"],[-1,")"],[0,";\n      "]],"start1":1156,"start2":1156,"length1":17,"length2":16}]],"length":3499,"saved":false}
{"ts":1350428050884,"patch":[[{"diffs":[[0,"       s"],[-1,"tat"],[1,"equenc"],[0,"e = this"]],"start1":1122,"start2":1122,"length1":19,"length2":22}]],"length":3502,"saved":false}
{"ts":1350428063791,"patch":[[{"diffs":[[0," }\n    }"],[1,"\n    console.log(sequence);"],[0,"\n\n    re"]],"start1":1281,"start2":1281,"length1":16,"length2":43}]],"length":3529,"saved":false}
{"contributors":[],"silentsave":false,"ts":1350436703708,"patch":[[{"diffs":[[0,"-*/\n"],[-1,"   \n// THe goal state for this variant of AStar.\n"],[0,"ASta"]],"start1":134,"start2":134,"length1":57,"length2":8},{"diffs":[[0,");\n\n"],[-1,"/**\n * Generates an object that may perform an AStar search.\n */\nfunction AStar()\n{\n    // The frontier that will do the majority of the algorithm's work.\n    this.frontier = PriorityQueue({low: true});\n}\n\n/**\n * The outward facing mechanism to access the IDA* search.\n * @param initialState The initial state of the cube to search for a solution.\n * @return The sequence to reach the goal state from the initial state.\n */"],[1,"function AStar()\n{\n    this.frontier = PriorityQueue({low: true});\n}\n"],[0,"\nASt"]],"start1":187,"start2":187,"length1":431,"length2":77},{"diffs":[[0,"ence =\"\""],[-1,","],[1,";\n    var"],[0," depth ="]],"start1":331,"start2":331,"length1":17,"length2":25},{"diffs":[[0,"epth = 0"],[-1,","],[1,";\n    var"],[0," goalNod"]],"start1":350,"start2":350,"length1":17,"length2":25},{"diffs":[[0,"ll;\n    "],[1,"console.log(RubixState.toString(initialState));"],[0,"\n\n    fo"]],"start1":381,"start2":381,"length1":16,"length2":63},{"diffs":[[0,"    for("],[1,"var "],[0,"depth = "],[1,"2"],[0,"0; depth"]],"start1":438,"start2":438,"length1":24,"length2":29},{"diffs":[[0,"    "],[-1,"goalNode = initialState;"],[1,"console.log(\"This Cube was already solved!\");\n            return \"\";        "],[0,"\n   "]],"start1":568,"start2":568,"length1":32,"length2":84},{"diffs":[[0,"        "],[-1," goalNode ="],[0," this.it"]],"start1":686,"start2":686,"length1":27,"length2":16},{"diffs":[[0,"(goalNode);\n"],[1,"            \n"],[0,"            "]],"start1":863,"start2":863,"length1":24,"length2":37},{"diffs":[[0,"sed.\");\n"],[-1,"   \n"],[0,"        "]],"start1":981,"start2":981,"length1":20,"length2":16},{"diffs":[[0,"   }"],[-1,"\n    console.log(sequence);"],[0,"\n\n  "]],"start1":1000,"start2":1000,"length1":35,"length2":8},{"diffs":[[0,"ssors = "],[-1,"local"],[1,"Rubix"],[0,"Node.get"]],"start1":1435,"start2":1435,"length1":21,"length2":21},{"diffs":[[0,"cessors("],[1,"localNode"],[0,");\n\n    "]],"start1":1459,"start2":1459,"length1":16,"length2":25},{"diffs":[[0,"ex]."],[-1,"totalPathCost"],[1,"depth"],[0,");  "]],"start1":1942,"start2":1942,"length1":21,"length2":13},{"diffs":[[0,"   }\n        }\n "],[-1,"       "],[0,""],[1,""],[0,"\n        if(this"]],"start1":2360,"start2":2360,"length1":39,"length2":32},{"diffs":[[0,"      }\n        "],[-1,""],[0,""],[1,"       console.log(localNode.actions);\n        return;"],[0,"\n         \n     "]],"start1":2475,"start2":2475,"length1":32,"length2":86},{"diffs":[[0,"ion(node)\n{\n"],[1,"    console.log(node.actions);\n    /*\n    \n"],[0,"    if(node."]],"start1":2841,"start2":2841,"length1":24,"length2":67},{"diffs":[[0,"\";\n    }"],[-1,""],[0,""],[1,"*/"],[0,"\n};\n"]],"start1":3296,"start2":3296,"length1":12,"length2":14}]],"length":3310,"saved":false}
{"contributors":["jfdbear1@gmail.com"],"silentsave":false,"ts":1350437596703,"patch":[[{"diffs":[[0,"alState));\n\n"],[1,"\n"],[0,"    for(var "]],"start1":426,"start2":426,"length1":24,"length2":25},{"diffs":[[0,"depth = "],[-1,"20"],[1,"19"],[0,"; depth "]],"start1":451,"start2":451,"length1":18,"length2":18},{"diffs":[[0,"        "],[-1,"sequence ="],[1,"return"],[0," this.pa"]],"start1":828,"start2":828,"length1":26,"length2":22},{"diffs":[[0,"e(goalNode);"],[-1,"\n"],[0,"            "]],"start1":859,"start2":859,"length1":25,"length2":24},{"diffs":[[0,"   \n"],[-1,"            break;\n"],[0,"    "]],"start1":880,"start2":880,"length1":27,"length2":8},{"diffs":[[0,"     }\n "],[1,"               console.log(RubixState.toString(localNode.rubixState));\n"],[0,"\n       "]],"start1":2345,"start2":2345,"length1":16,"length2":87},{"diffs":[[0,";    \n        }\n"],[1,"        \n"],[0,"               c"]],"start1":2515,"start2":2515,"length1":32,"length2":41},{"diffs":[[0,"log("],[-1,"localNode.actions"],[1,"RubixState.toString(localNode.rubixState)"],[0,");\n "]],"start1":2563,"start2":2563,"length1":25,"length2":49},{"diffs":[[0,"  return"],[1," null"],[0,";\n      "]],"start1":2617,"start2":2617,"length1":16,"length2":21},{"diffs":[[0,"n null;\n        "],[-1," "],[0,"\n        \n      "]],"start1":2624,"start2":2624,"length1":33,"length2":32}]],"length":3395,"saved":false}
{"ts":1350437608255,"patch":[[{"diffs":[[0,"h = "],[-1,"19"],[1,"0"],[0,"; de"]],"start1":455,"start2":455,"length1":10,"length2":9},{"diffs":[[0,"epth < 2"],[-1,"0"],[0,"; depth+"]],"start1":463,"start2":463,"length1":17,"length2":16}]],"length":3393,"saved":false}
{"ts":1350437645358,"patch":[[{"diffs":[[0,"    do{\n"],[1,"        \n         if(successors[index].depth != depth)\n         {\n"],[0,"        "]],"start1":1389,"start2":1389,"length1":16,"length2":82}]],"length":3459,"saved":false}
{"ts":1350437646366,"patch":[[{"diffs":[[0,"       \n        "],[-1," "],[0,"if(successors[in"]],"start1":1398,"start2":1398,"length1":33,"length2":32}]],"length":3458,"saved":false}
{"ts":1350437647239,"patch":[[{"diffs":[[0," depth)\n        "],[-1," "],[0,"{\n        succes"]],"start1":1443,"start2":1443,"length1":33,"length2":32}]],"length":3457,"saved":false}
{"contributors":[],"silentsave":false,"ts":1350437702185,"patch":[[{"diffs":[[0,"      {\n        "],[1,"    "],[0,"successors = Rub"]],"start1":1453,"start2":1453,"length1":32,"length2":36},{"diffs":[[0,"lNode);\n"],[-1,"\n"],[1,"    \n    "],[0,"        "]],"start1":1514,"start2":1514,"length1":17,"length2":25},{"diffs":[[0,"h == 1)\n        "],[1,"  "],[-1,"{\n"],[1,"  {\n    "],[0,"            retu"]],"start1":1558,"start2":1558,"length1":34,"length2":42},{"diffs":[[0,"        "],[1,"    "],[0,"}       "]],"start1":1618,"start2":1618,"length1":16,"length2":20},{"diffs":[[0,"               \n"],[1,"    "],[0,"        //consol"]],"start1":1631,"start2":1631,"length1":32,"length2":36},{"diffs":[[0,"        "],[1,"    "],[0,"for (var"]],"start1":1693,"start2":1693,"length1":16,"length2":20},{"diffs":[[0,"ndex++)\n        "],[1,"   "],[1," "],[0,"{            \n  "]],"start1":1752,"start2":1752,"length1":32,"length2":36},{"diffs":[[0,"  {            \n"],[1,"    "],[0,"            if(s"]],"start1":1770,"start2":1770,"length1":32,"length2":36},{"diffs":[[0,"th)\n            "],[1,"  "],[-1,"{\n"],[1,"  {\n    "],[0,"                "]],"start1":1835,"start2":1835,"length1":34,"length2":42},{"diffs":[[0,"index],\n"],[1,"    "],[0,"        "]],"start1":1907,"start2":1907,"length1":16,"length2":20},{"diffs":[[0,"                "],[1,"   "],[1," "],[0,"successors[index"]],"start1":2003,"start2":2003,"length1":32,"length2":36},{"diffs":[[0,"                "],[-1,"\n"],[1,"    \n    "],[0,"               /"]],"start1":2057,"start2":2057,"length1":33,"length2":41},{"diffs":[[0,"                "],[1,"    "],[0,"{\n              "]],"start1":2166,"start2":2166,"length1":32,"length2":36},{"diffs":[[0,"                "],[1," "],[1,"   "],[0,"console.log( Cub"]],"start1":2192,"start2":2192,"length1":32,"length2":36},{"diffs":[[0,"            "],[1,"    "],[0,"}*/\n        "]],"start1":2286,"start2":2286,"length1":24,"length2":28},{"diffs":[[0,"}*/\n            "],[-1,"}\n"],[1,"    }\n   "],[0,"            else"]],"start1":2302,"start2":2302,"length1":34,"length2":41},{"diffs":[[0,"            "],[1," "],[0,"else if (Rub"]],"start1":2327,"start2":2327,"length1":24,"length2":25},{"diffs":[[0,"e))\n            "],[-1,"{\n"],[1,"    {\n    "],[0,"                "]],"start1":2411,"start2":2411,"length1":34,"length2":42},{"diffs":[[0,"[index];   \n"],[1,"                }\n"],[0,"            "]],"start1":2470,"start2":2470,"length1":24,"length2":42}]],"length":3567,"saved":false}
{"ts":1350438067460,"patch":[[{"diffs":[[0,"     if("],[-1,"successors[index]"],[1,"localNode"],[0,".depth !"]],"start1":1409,"start2":1409,"length1":33,"length2":25},{"diffs":[[0,"    "],[-1," \n                if(successors[index].depth != depth)\n                {\n    "],[1,"\n\n"],[0,"    "]],"start1":1772,"start2":1772,"length1":85,"length2":10},{"diffs":[[0,"index],\n"],[-1,"    "],[0,"        "]],"start1":1824,"start2":1824,"length1":20,"length2":16},{"diffs":[[0,"                "],[-1,"  "],[-1,"  "],[0,"successors[index"]],"start1":1916,"start2":1916,"length1":36,"length2":32},{"diffs":[[0,"            "],[-1,"    \n   "],[1,"\n"],[0,"            "]],"start1":1970,"start2":1970,"length1":32,"length2":25},{"diffs":[[0,"        "],[-1," "],[0,"/* if( C"]],"start1":1990,"start2":1990,"length1":17,"length2":16},{"diffs":[[0,"            "],[-1,"    {\n    "],[1,"{\n"],[0,"            "]],"start1":2071,"start2":2071,"length1":34,"length2":26},{"diffs":[[0,"        "],[-1,"    }*/"],[1,"}"],[0,"\n       "]],"start1":2183,"start2":2183,"length1":23,"length2":17},{"diffs":[[0,"    "],[-1,"}\n                else"],[0,""],[1,""],[0," if "]],"start1":2205,"start2":2205,"length1":30,"length2":8},{"diffs":[[0,"               }"],[1,"*/"],[0,"\n            }\n "]],"start1":2348,"start2":2348,"length1":32,"length2":34},{"diffs":[[0,"/\n            }\n"],[1,"           \n"],[0,"        }\n      "]],"start1":2365,"start2":2365,"length1":32,"length2":44},{"diffs":[[0,"\n               "],[1,"//"],[0," console.log(Rub"]],"start1":2402,"start2":2402,"length1":32,"length2":34},{"diffs":[[0,"    "],[-1,"\n               console.log(RubixState.toString(localNode.rubixState));\n        return null;"],[0,""],[1,""],[0,"\n   "]],"start1":2588,"start2":2588,"length1":100,"length2":8}]],"length":3356,"saved":false}
{"contributors":["jfdbear1@gmail.com"],"silentsave":false,"ts":1350489197010,"patch":[[{"diffs":[[0,"quence ="],[-1,"\"\""],[1,"[]"],[0,";\n    va"]],"start1":329,"start2":329,"length1":18,"length2":18},{"diffs":[[0,"ate));\n\n"],[-1,"\n"],[0,"    for("]],"start1":430,"start2":430,"length1":17,"length2":16},{"diffs":[[0,"epth < 2"],[1,"0"],[0,"; depth+"]],"start1":462,"start2":462,"length1":16,"length2":17},{"diffs":[[0,"    "],[-1,"console.log(\"This Cube was already solved!\");\n            return \"\";        "],[1,"goalNode = initialState;"],[0,"\n   "]],"start1":567,"start2":567,"length1":84,"length2":32},{"diffs":[[0,"\n           "],[1," goalNode ="],[0," this.iterat"]],"start1":629,"start2":629,"length1":24,"length2":35},{"diffs":[[0,"   \n            "],[-1,"return "],[1,"console.log("],[0,"this.pathFromNod"]],"start1":777,"start2":777,"length1":39,"length2":44},{"diffs":[[0,"oalNode)"],[-1,";"],[1,");\n"],[0,"        "]],"start1":824,"start2":824,"length1":17,"length2":19},{"diffs":[[0,"));\n            "],[1,"break;"],[0,"\n        }\n     "]],"start1":831,"start2":831,"length1":32,"length2":38},{"diffs":[[0,"creased.\");\n"],[1,"   \n"],[0,"        }\n  "]],"start1":924,"start2":924,"length1":24,"length2":28},{"diffs":[[0,"    "],[-1,"\n        if(localNode.depth != depth)\n        {\n            "],[0,"succ"]],"start1":1377,"start2":1377,"length1":68,"length2":8},{"diffs":[[0,"ssors = "],[-1,"Rubix"],[1,"local"],[0,"Node.get"]],"start1":1386,"start2":1386,"length1":21,"length2":21},{"diffs":[[0,"ors("],[-1,"localNode);\n    \n    "],[1,");\n\n"],[0,"    "]],"start1":1414,"start2":1414,"length1":29,"length2":12},{"diffs":[[0,"h == 1)\n"],[-1,"    "],[0,"        "]],"start1":1449,"start2":1449,"length1":20,"length2":16},{"diffs":[[0,"  {\n            "],[-1,"    "],[0,"return successor"]],"start1":1463,"start2":1463,"length1":36,"length2":32},{"diffs":[[0,"        "],[-1,"    "],[0,"}       "]],"start1":1501,"start2":1501,"length1":20,"length2":16},{"diffs":[[0,"        "],[-1," "],[-1,"   "],[0,"//consol"]],"start1":1526,"start2":1526,"length1":20,"length2":16},{"diffs":[[0,"rs.length);\n"],[-1,"    "],[0,"        for "]],"start1":1556,"start2":1556,"length1":28,"length2":24},{"diffs":[[0,"++)\n        "],[-1,"  "],[-1,"  "],[0,"{           "]],"start1":1627,"start2":1627,"length1":28,"length2":24},{"diffs":[[0,"        "],[-1,"\n\n"],[0," "],[1,"\n"],[0,"        "]],"start1":1643,"start2":1643,"length1":19,"length2":18},{"diffs":[[0,"    "],[-1,"   this.frontier.push(successors[index],\n                    //CubeHeuristics.heuristic(successors[index].rubixState) + \n                    successors[index].depth);    \n      "],[1,"if(successors[index].depth != depth)\n"],[0,"    "]],"start1":1661,"start2":1661,"length1":185,"length2":45},{"diffs":[[0,"th)\n            "],[-1,"  "],[1,"{"],[0,"\n               "]],"start1":1698,"start2":1698,"length1":34,"length2":33},{"diffs":[[0,"    "],[-1,"/* if( CubeHeuristics.heuristic(successors[index].rubixState) === 0)\n                {"],[1," this.frontier.push(successors[index],"],[0,"\n   "]],"start1":1727,"start2":1727,"length1":94,"length2":46},{"diffs":[[0,"    "],[-1,"console.log( "],[1,"//"],[0,"Cube"]],"start1":1786,"start2":1786,"length1":21,"length2":10},{"diffs":[[0,"ate)"],[-1,");\n                }\n                 if (RubixState.isEqual(successors[index].rubixState,AStar.goalState))\n                {\n                    return successors[index];   \n                }*/\n            }\n           \n        }\n               // console.log(RubixState.toString(localNode.rubixState));\n"],[1," + \n                    successors[index].totalPathCost);    \n            }\n        }\n        "],[0,"\n   "]],"start1":1842,"start2":1842,"length1":313,"length2":102},{"diffs":[[0,"       \n        "],[-1,""],[0,""],[1," "],[0,"\n        \n      "]],"start1":2048,"start2":2048,"length1":32,"length2":33},{"diffs":[[0,")\n{\n"],[-1,"    console.log(node.actions);\n    /*\n    \n"],[0,"    "]],"start1":2359,"start2":2359,"length1":51,"length2":8},{"diffs":[[0,"    "],[-1,"console.log(node);\n        "],[1,"//"],[0,"retu"]],"start1":2396,"start2":2396,"length1":35,"length2":10},{"diffs":[[0,"    "],[-1," console.log(node);\n       "],[1,"//"],[0," ret"]],"start1":2570,"start2":2570,"length1":35,"length2":10},{"diffs":[[0,"\";\n    }"],[-1,"*/"],[0,""],[1,""],[0,"\n};\n"]],"start1":2713,"start2":2713,"length1":14,"length2":12}]],"length":2725,"saved":false}
{"ts":1350489226047,"patch":[[{"diffs":[[0,"epth > 1)\n    {\n"],[1,"        return this.pathFromNode(node.parentNode) + \", \" + RubixState.faceValues[node.nodeAction>>4] + \":\" + node.nodeAction&7;\n"],[0,"        //return"]],"start1":2376,"start2":2376,"length1":32,"length2":160}]],"length":2853,"saved":false}
{"ts":1350489228281,"patch":[[{"diffs":[[0,"deAction"],[-1,"&"],[1," & "],[0,"7;\n     "]],"start1":2508,"start2":2508,"length1":17,"length2":19}]],"length":2855,"saved":false}
{"ts":1350489264504,"patch":[[{"diffs":[[0,"= 1) \n    {\n"],[1,"        return RubixState.faceValues[node.nodeAction>>4] + \":\" + node.nodeAction & 7;\n"],[0,"       // re"]],"start1":2685,"start2":2685,"length1":24,"length2":110}]],"length":2941,"saved":false}
{"ts":1350489276062,"patch":[[{"diffs":[[0,"[node.nodeAction"],[1," "],[0,">>"],[1," "],[0,"4] + \":\" + node."]],"start1":2472,"start2":2472,"length1":34,"length2":36},{"diffs":[[0,"deAction"],[1," "],[0,">>"],[1," "],[0,"4] + \":\""]],"start1":2743,"start2":2743,"length1":18,"length2":20}]],"length":2945,"saved":false}
{"contributors":[],"silentsave":false,"ts":1350491471219,"patch":[[{"diffs":[[0,"ce ="],[-1,"[]"],[1,"\"\""],[0,";\n  "]],"start1":333,"start2":333,"length1":10,"length2":10},{"diffs":[[0,"goalNode));\n"],[1,"            sequence =this.pathFromNode(goalNode);\n"],[0,"            "]],"start1":823,"start2":823,"length1":24,"length2":75},{"diffs":[[0,"ex]."],[-1,"totalPathCost"],[1,"depth"],[0,");  "]],"start1":1935,"start2":1935,"length1":21,"length2":13},{"diffs":[[0,"n >> 4] + \":\" + "],[1,"("],[0,"node.nodeAction "]],"start1":2530,"start2":2530,"length1":32,"length2":33},{"diffs":[[0," & 7"],[-1,";\n        //return this.pathFromNode(node.parentNode) + \", \" + RubixState.faceValues[node.nodeAction[0]] + \":\" + node.nodeAction[1]"],[1,")"],[0,";\n  "]],"start1":2562,"start2":2562,"length1":139,"length2":9},{"diffs":[[0,"n >> 4] + \":\" + "],[1,"("],[0,"node.nodeAction "]],"start1":2664,"start2":2664,"length1":32,"length2":33},{"diffs":[[0," & 7"],[-1,";\n       // return RubixState.faceValues[node.nodeAction[0]] + \":\" + node.nodeAction[1]"],[1,")"],[0,";\n  "]],"start1":2696,"start2":2696,"length1":95,"length2":9}]],"length":2774,"saved":false}
{"ts":1350491529173,"patch":[[{"diffs":[[0,"ssors = "],[-1,"local"],[1,"Rubix"],[0,"Node.get"]],"start1":1437,"start2":1437,"length1":21,"length2":21},{"diffs":[[0,"cessors("],[1,"localNode"],[0,");\n\n    "]],"start1":1461,"start2":1461,"length1":16,"length2":25}]],"length":2783,"saved":false}
{"ts":1350491670763,"patch":[[{"diffs":[[0,"    "],[-1,"for(var depth = 0; depth < 20; depth++"],[1,"while(true"],[0,")\n  "]],"start1":438,"start2":438,"length1":46,"length2":18}]],"length":2755,"saved":false}
{"ts":1350491683981,"patch":[[{"diffs":[[0,"ode = null;\n"],[1,"    var initialNode = new RubixNode(initialState);\n"],[0,"    console."]],"start1":373,"start2":373,"length1":24,"length2":75}]],"length":2806,"saved":false}
{"ts":1350491716969,"patch":[[{"diffs":[[0,"    "],[-1,"console.log(RubixState.toString(initialState))"],[1,"\n    depth = initialNode.fn"],[0,";\n\n "]],"start1":436,"start2":436,"length1":54,"length2":35}]],"length":2787,"saved":false}
{"ts":1350491722727,"patch":[[{"diffs":[[0," \n        }\n"],[1,"        depth ++\n"],[0,"    }\n\n    r"]],"start1":993,"start2":993,"length1":24,"length2":41}]],"length":2804,"saved":false}
{"ts":1350491723882,"patch":[[{"diffs":[[0,"depth ++"],[1,";"],[0,"\n    }\n\n"]],"start1":1013,"start2":1013,"length1":16,"length2":17}]],"length":2805,"saved":false}
{"ts":1350491755195,"patch":[[{"diffs":[[0,"  while("],[-1,"tru"],[1,"!goalNod"],[0,"e)\n    {"]],"start1":472,"start2":472,"length1":19,"length2":24},{"diffs":[[0,"  }\n"],[-1,"        else{\n    "],[0,"    "]],"start1":920,"start2":920,"length1":26,"length2":8},{"diffs":[[0,"sed.\");\n"],[-1,"   \n        }\n"],[0,"        "]],"start1":970,"start2":970,"length1":30,"length2":16}]],"length":2778,"saved":false}
{"ts":1350491763584,"patch":[[{"diffs":[[0,"    "],[-1,"console.log(this.pathFromNode(goalNode));\n            sequence =this.pathFromNode(goalNode);"],[0,"\n   "]],"start1":798,"start2":798,"length1":100,"length2":8},{"diffs":[[0,"+;\n    }"],[1,"\n    \n    console.log(this.pathFromNode(goalNode));\n            sequence =this.pathFromNode(goalNode);"],[0,"\n\n    re"]],"start1":901,"start2":901,"length1":16,"length2":118}]],"length":2788,"saved":false}
{"ts":1350491766405,"patch":[[{"diffs":[[0,"Node));\n"],[-1,"        "],[0,"    sequ"]],"start1":953,"start2":953,"length1":24,"length2":16}]],"length":2780,"saved":false}
{"ts":1350491771017,"patch":[[{"diffs":[[0,"  }\n"],[-1,"        \n        if(goalNode)\n        {           \n            \n            break;\n        }\n"],[0,"    "]],"start1":735,"start2":735,"length1":101,"length2":8}]],"length":2687,"saved":false}
{"ts":1350491772648,"patch":[[{"diffs":[[0,"pth);\n        }\n"],[1,"        \n"],[0,"        console."]],"start1":723,"start2":723,"length1":32,"length2":41}]],"length":2696,"saved":false}
{"ts":1350491788504,"patch":[[{"diffs":[[0,"[index]."],[-1,"depth"],[1,"fn"],[0,");    \n "]],"start1":1853,"start2":1853,"length1":21,"length2":18}]],"length":2693,"saved":false}
{"ts":1350491791299,"patch":[[{"diffs":[[0,"x],\n"],[-1,"                    //CubeHeuristics.heuristic(successors[index].rubixState) + \n"],[0,"    "]],"start1":1739,"start2":1739,"length1":88,"length2":8}]],"length":2613,"saved":false}
{"ts":1350491803888,"patch":[[{"diffs":[[0,"entNode."],[-1,"depth"],[1,"fn"],[0," == dept"]],"start1":1101,"start2":1101,"length1":21,"length2":18}]],"length":2610,"saved":false}
{"ts":1350491821548,"patch":[[{"diffs":[[0,"    "],[-1,"if(successors.length == 1)\n        {\n            return successors[0];\n        }               \n        //console.log(successors.length);"],[1,"        "],[0,"\n   "]],"start1":1396,"start2":1396,"length1":145,"length2":16}]],"length":2481,"saved":false}
{"ts":1350491843951,"patch":[[{"diffs":[[0,"    do{\n        "],[1,"\n        if(localNode.fn < depth)\n        {\n            "],[0,"successors = Rub"]],"start1":1326,"start2":1326,"length1":32,"length2":88},{"diffs":[[0,"        "],[1,"    "],[0,"for (var"]],"start1":1465,"start2":1465,"length1":16,"length2":20},{"diffs":[[0,"        "],[1,"  "],[1,"  "],[0,"{       "]],"start1":1532,"start2":1532,"length1":16,"length2":20},{"diffs":[[0,"  {            \n"],[1,"    "],[0,"            if(s"]],"start1":1542,"start2":1542,"length1":32,"length2":36},{"diffs":[[0,"th)\n            "],[-1,"{\n"],[1,"    {\n  "],[0,"                "]],"start1":1607,"start2":1607,"length1":34,"length2":40},{"diffs":[[0,"            "],[1,"  "],[0,"this.frontie"]],"start1":1635,"start2":1635,"length1":24,"length2":26},{"diffs":[[0,"                "],[1,"    "],[0,"successors[index"]],"start1":1691,"start2":1691,"length1":32,"length2":36},{"diffs":[[0,"x].fn);    \n"],[1,"                }\n"],[0,"            "]],"start1":1726,"start2":1726,"length1":24,"length2":42}]],"length":2579,"saved":false}
{"ts":1350491950980,"patch":[[{"diffs":[[0,"ased"],[-1,".\""],[1,":\" + depth"],[0,");\n "]],"start1":793,"start2":793,"length1":10,"length2":18}]],"length":2587,"saved":false}
{"ts":1350491954935,"patch":[[{"diffs":[[0,"     }\n        \n"],[1,"        depth ++;\n        \n"],[0,"        console."]],"start1":732,"start2":732,"length1":32,"length2":59},{"diffs":[[0,"depth);\n"],[-1,"        depth ++;\n"],[0,"    }\n  "]],"start1":829,"start2":829,"length1":34,"length2":16}]],"length":2596,"saved":false}
{"ts":1350493908396,"patch":[[{"diffs":[[0,"[index]."],[-1,"depth"],[1,"fn"],[0," != dept"]],"start1":1604,"start2":1604,"length1":21,"length2":18}]],"length":2593,"saved":false}
{"ts":1350493913295,"patch":[[{"diffs":[[0,"dex].fn "],[-1,"!"],[1,"<"],[0,"= depth)"]],"start1":1607,"start2":1607,"length1":17,"length2":17}]],"length":2593,"saved":false}
{"contributors":[],"silentsave":false,"ts":1350523096027,"patch":[[{"diffs":[[0,"ode.fn;\n"],[1," return;"],[0,"\n    whi"]],"start1":461,"start2":461,"length1":16,"length2":24}]],"length":2601,"saved":false}
{"contributors":[],"silentsave":false,"ts":1350523967451,"patch":[[{"diffs":[[0,"de.fn;\n "],[1,"//"],[0,"return;\n"]],"start1":462,"start2":462,"length1":16,"length2":18}]],"length":2603,"saved":false}
{"contributors":[],"silentsave":false,"ts":1350603065880,"patch":[[{"diffs":[[0,"ontier ="],[1," new"],[0," Priorit"]],"start1":221,"start2":221,"length1":16,"length2":20},{"diffs":[[0,"rity"],[1,"Min"],[0,"Queue("],[-1,"{low: true}"],[0,");\n}"]],"start1":238,"start2":238,"length1":25,"length2":17},{"diffs":[[0,"ialState)\n{\n"],[1,"    if(!initialState)\n        return \"Bad Cube\";\n"],[0,"    var sequ"]],"start1":303,"start2":303,"length1":24,"length2":73},{"diffs":[[0,"fn;\n"],[-1," //return;"],[0,""],[1,""],[0,"\n   "]],"start1":510,"start2":510,"length1":18,"length2":8},{"diffs":[[0,"epth && "],[1,"!"],[0,"this.fro"]],"start1":1178,"start2":1178,"length1":16,"length2":17},{"diffs":[[0,"ier."],[-1,"size() === 0"],[1,"isEmpty()"],[0,")\n  "]],"start1":1197,"start2":1197,"length1":20,"length2":17},{"diffs":[[0,"ier."],[-1,"push"],[1,"insert"],[0,"(suc"]],"start1":1716,"start2":1716,"length1":12,"length2":14},{"diffs":[[0,"dex]"],[-1,",\n                       "],[1,".fn,"],[0," suc"]],"start1":1740,"start2":1740,"length1":33,"length2":12},{"diffs":[[0,"s[index]"],[-1,".fn"],[0,");    \n "]],"start1":1758,"start2":1758,"length1":19,"length2":16},{"diffs":[[0,"     if("],[1,"!"],[0,"this.fro"]],"start1":1827,"start2":1827,"length1":16,"length2":17},{"diffs":[[0,"ier."],[-1,"size() > 0"],[1,"isEmpty()"],[0,")\n  "]],"start1":1846,"start2":1846,"length1":18,"length2":17},{"diffs":[[0,"rontier."],[-1,"pop"],[1,"remove"],[0,"();    \n"]],"start1":1901,"start2":1901,"length1":19,"length2":22},{"diffs":[[0,"      \n         "],[-1,""],[0,""],[1,"return;"],[0,"\n        \n      "]],"start1":1935,"start2":1935,"length1":32,"length2":39},{"diffs":[[0," }while("],[1,"!"],[0,"this.fro"]],"start1":2002,"start2":2002,"length1":16,"length2":17},{"diffs":[[0,"ier."],[-1,"size() !== 0"],[1,"isEmpty()"],[0," && "]],"start1":2021,"start2":2021,"length1":20,"length2":17}]],"length":2622,"saved":false}
{"contributors":[],"silentsave":false,"ts":1350603327856,"patch":[[{"diffs":[[0,"\" + depth);\n"],[1,"                 return;\n\n"],[0,"    }\n    \n "]],"start1":870,"start2":870,"length1":24,"length2":50},{"diffs":[[0,"       \n"],[-1,"         return;\n"],[0,"        "]],"start1":1960,"start2":1960,"length1":33,"length2":16}]],"length":2631,"saved":false}
{"ts":1350603351991,"patch":[[{"diffs":[[0,"sed:\" + depth);\n"],[1,"        if(depth > 2)\n"],[0,"                "]],"start1":866,"start2":866,"length1":32,"length2":54}]],"length":2653,"saved":false}
{"ts":1350603358040,"patch":[[{"diffs":[[0,"h > "],[-1,"2"],[1,"10"],[0,")\n  "]],"start1":897,"start2":897,"length1":9,"length2":10}]],"length":2654,"saved":false}
{"ts":1350603474416,"patch":[[{"diffs":[[0,".remove();  "],[1,"\n"],[0,"  "],[1,"          console.log(localNode);"],[0,"\n        }\n "]],"start1":1957,"start2":1957,"length1":26,"length2":60}]],"length":2688,"saved":false}
{"ts":1350603501578,"patch":[[{"diffs":[[0,"      }\n        "],[1,"console.log(this.frontier);"],[0,"\n        if(!thi"]],"start1":1856,"start2":1856,"length1":32,"length2":59}]],"length":2715,"saved":false}
{"ts":1350603543292,"patch":[[{"diffs":[[0,";  \n"],[-1,"            console.log(localNode);\n"],[0,"    "]],"start1":1993,"start2":1993,"length1":44,"length2":8}]],"length":2679,"saved":false}
{"ts":1350603550302,"patch":[[{"diffs":[[0,"ier."],[-1,"remove"],[1,"pop"],[0,"(); "]],"start1":1981,"start2":1981,"length1":14,"length2":11}]],"length":2676,"saved":false}
{"ts":1350603581142,"patch":[[{"diffs":[[0,"rontier."],[-1,"pop"],[1,"remove"],[0,"();  \n  "]],"start1":1977,"start2":1977,"length1":19,"length2":22}]],"length":2679,"saved":false}
{"ts":1350603726568,"patch":[[{"diffs":[[0,"  }\n"],[-1,"        console.log(this.frontier);\n"],[0,"    "]],"start1":1860,"start2":1860,"length1":44,"length2":8}]],"length":2643,"saved":false}
{"ts":1350603733777,"patch":[[{"diffs":[[0,"     if("],[-1,"!"],[0,"this.fro"]],"start1":1867,"start2":1867,"length1":17,"length2":16}]],"length":2642,"saved":false}
{"ts":1350603750337,"patch":[[{"diffs":[[0,"     if("],[1,"!"],[0,"this.fro"]],"start1":1867,"start2":1867,"length1":16,"length2":17}]],"length":2643,"saved":false}
{"ts":1350603787027,"patch":[[{"diffs":[[0,"move(); "],[-1," "],[1,"\n            console.log(localNode);"],[0,"\n       "]],"start1":1951,"start2":1951,"length1":17,"length2":52}]],"length":2678,"saved":false}
{"ts":1350603794336,"patch":[[{"diffs":[[0,"       \n        "],[1,"//"],[0,"console.log(\"pop"]],"start1":2016,"start2":2016,"length1":32,"length2":34}]],"length":2680,"saved":false}
{"ts":1350603846193,"patch":[[{"diffs":[[0,"ty() && "],[1,"localNode &&"],[0,"\n       "]],"start1":2088,"start2":2088,"length1":16,"length2":28}]],"length":2692,"saved":false}
{"ts":1350603852041,"patch":[[{"diffs":[[0,"calNode "],[-1,"&&"],[0,"\n       "]],"start1":2098,"start2":2098,"length1":18,"length2":16}]],"length":2690,"saved":false}
{"ts":1350603877746,"patch":[[{"diffs":[[0,"ty())\n        {\n"],[1,"                        console.log(this.frontier.heap.size());\n\n"],[0,"            loca"]],"start1":1895,"start2":1895,"length1":32,"length2":97}]],"length":2755,"saved":false}
{"ts":1350603886680,"patch":[[{"diffs":[[0,"heap"],[-1,".size()"],[0,");\n\n"]],"start1":1961,"start2":1961,"length1":15,"length2":8}]],"length":2748,"saved":false}
{"ts":1350603897344,"patch":[[{"diffs":[[0,"calNode "],[1,"&&"],[0,"\n       "]],"start1":2156,"start2":2156,"length1":16,"length2":18}]],"length":2750,"saved":false}
{"ts":1350603923051,"patch":[[{"diffs":[[0," && "],[-1,"localNode &&"],[0,"\n   "]],"start1":2150,"start2":2150,"length1":20,"length2":8}]],"length":2738,"saved":false}
{"ts":1350604010072,"patch":[[{"diffs":[[0,"        "],[-1,"//"],[0,"console."]],"start1":2082,"start2":2082,"length1":18,"length2":16}]],"length":2736,"saved":false}
{"ts":1350604017162,"patch":[[{"diffs":[[0,"    "],[-1,"            console.log(this.frontier.heap);\n\n            localNode = this.frontier.remove(); \n            console.log(localNode);"],[1,"localNode = this.frontier.remove(); "],[0,"\n   "]],"start1":1919,"start2":1919,"length1":138,"length2":44}]],"length":2642,"saved":false}
{"ts":1350604040826,"patch":[[{"diffs":[[0,"localNode);\n"],[-1,"\n"],[0,"            "]],"start1":1544,"start2":1544,"length1":25,"length2":24}]],"length":2641,"saved":false}
{"ts":1350604179262,"patch":[[{"diffs":[[0,"              {\n"],[1,"                    console.log(successors[index].fn);\n"],[0,"                "]],"start1":1718,"start2":1718,"length1":32,"length2":87}]],"length":2696,"saved":false}
{"ts":1350604701179,"patch":[[{"diffs":[[0,"    "],[-1,"if(depth > 10)\n                 return;"],[0,"\n\n  "]],"start1":886,"start2":886,"length1":47,"length2":8}]],"length":2657,"saved":false}
{"ts":1350604702539,"patch":[[{"diffs":[[0," depth);"],[-1,"\n        "],[0,"\n\n    }\n"]],"start1":873,"start2":873,"length1":25,"length2":16}]],"length":2648,"saved":false}
{"ts":1350604703077,"patch":[[{"diffs":[[0,"depth);\n"],[-1,"\n"],[0,"    }\n  "]],"start1":874,"start2":874,"length1":17,"length2":16}]],"length":2647,"saved":false}
{"ts":1350604708264,"patch":[[{"diffs":[[0,"       \n"],[-1,"        \n"],[0,"        "]],"start1":1976,"start2":1976,"length1":25,"length2":16}]],"length":2638,"saved":false}
{"ts":1350604713914,"patch":[[{"diffs":[[0,"ty() && "],[-1,"\n        "],[0,"!RubixSt"]],"start1":2046,"start2":2046,"length1":25,"length2":16}]],"length":2629,"saved":false}
{"ts":1350604716892,"patch":[[{"diffs":[[0,"Node.rubixState,"],[1," "],[0,"AStar.goalState)"]],"start1":2079,"start2":2079,"length1":32,"length2":33}]],"length":2630,"saved":false}
{"ts":1350604718588,"patch":[[{"diffs":[[0,"xState, "],[1,"\n        "],[0,"AStar.go"]],"start1":2088,"start2":2088,"length1":16,"length2":25}]],"length":2639,"saved":false}
{"ts":1350604722641,"patch":[[{"diffs":[[0,"  {\n"],[-1,"                    console.log(successors[index].fn);\n"],[0,"    "]],"start1":1681,"start2":1681,"length1":63,"length2":8}]],"length":2584,"saved":false}
{"ts":1350605283068,"patch":[[{"diffs":[[0," initial"],[-1,"Stat"],[1,"Nod"],[0,"e;\n     "]],"start1":635,"start2":635,"length1":20,"length2":19}]],"length":2583,"saved":false}
{"ts":1350605290228,"patch":[[{"diffs":[[0," initial"],[-1,"Nod"],[1,"Stat"],[0,"e;\n     "]],"start1":635,"start2":635,"length1":19,"length2":20}]],"length":2584,"saved":false}
{"ts":1350605325664,"patch":[[{"diffs":[[0,"goalNode));\n"],[1,"    console.log(goalNode);\n"],[0,"    sequence"]],"start1":927,"start2":927,"length1":24,"length2":51}]],"length":2611,"saved":false}
{"contributors":[],"silentsave":false,"ts":1350606854178,"patch":[[{"diffs":[[0,"));\n"],[-1,"    console.log(goalNode);\n"],[0,"    "]],"start1":935,"start2":935,"length1":35,"length2":8}]],"length":2584,"saved":false}
{"ts":1350606860430,"patch":[[{"diffs":[[0,";\n\n/"],[-1,"/ I find the do while to be more effective in a browser."],[1,"**\n * \n */"],[0,"\nASt"]],"start1":1005,"start2":1005,"length1":64,"length2":18}]],"length":2538,"saved":false}
{"ts":1350606876786,"patch":[[{"diffs":[[0,"lNode);\n"],[1,"    this.frontier = nbew PriorityMinQueue();"],[0,"\n    ret"]],"start1":974,"start2":974,"length1":16,"length2":60}]],"length":2582,"saved":false}
{"ts":1350606879412,"patch":[[{"diffs":[[0,"tier = n"],[-1,"b"],[0,"ew Prior"]],"start1":995,"start2":995,"length1":17,"length2":16}]],"length":2581,"saved":false}
{"ts":1350606881852,"patch":[[{"diffs":[[0,"(goalNode);\n"],[1,"    \n"],[0,"    this.fro"]],"start1":970,"start2":970,"length1":24,"length2":29},{"diffs":[[0,"ueue();\n"],[1,"    \n"],[0,"    retu"]],"start1":1023,"start2":1023,"length1":16,"length2":21}]],"length":2591,"saved":false}
{"ts":1350606899895,"patch":[[{"diffs":[[0,"Node);\n    \n"],[1,"    // Clears the queue of undesired remaineder\n"],[0,"    this.fro"]],"start1":975,"start2":975,"length1":24,"length2":72}]],"length":2639,"saved":false}
{"ts":1350606901588,"patch":[[{"diffs":[[0,"maineder"],[1,"s"],[0,"\n    thi"]],"start1":1026,"start2":1026,"length1":16,"length2":17}]],"length":2640,"saved":false}
{"ts":1350606905029,"patch":[[{"diffs":[[0,"   \n"],[-1,"    // Clears the queue of undesired remaineders\n    this.frontier = new PriorityMinQueue();\n    \n"],[0,"    "]],"start1":983,"start2":983,"length1":106,"length2":8}]],"length":2542,"saved":false}
{"ts":1350606936367,"patch":[[{"diffs":[[0,"\n/**\n * "],[1,"Performs the IDA* search using a do while loop and Priority min queue."],[0,"\n */\nASt"]],"start1":1011,"start2":1011,"length1":16,"length2":86}]],"length":2612,"saved":false}
{"ts":1350606998737,"patch":[[{"diffs":[[0,"n queue."],[1," Before iteration\n * the node is checked for "],[0,"\n */\nASt"]],"start1":1081,"start2":1081,"length1":16,"length2":61},{"diffs":[[0,"epth && "],[-1,"!"],[0,"this.fro"]],"start1":1251,"start2":1251,"length1":17,"length2":16}]],"length":2656,"saved":false}
{"ts":1350607038558,"patch":[[{"diffs":[[0," queue. "],[1,"\n * "],[0,"Before i"]],"start1":1082,"start2":1082,"length1":16,"length2":20},{"diffs":[[0,"teration"],[-1,"\n *"],[0," the nod"]],"start1":1102,"start2":1102,"length1":19,"length2":16},{"diffs":[[0,"checked "],[-1,"for"],[1,"to see if it is of the"],[0," \n */\nAS"]],"start1":1123,"start2":1123,"length1":19,"length2":38},{"diffs":[[0,"th)\n"],[1,""],[0,"{      \n"],[-1,"    \n    if(currentNode.fn == depth && this.frontier.isEmpty())\n    {\n        return RubixState.isEqual(currentNode.rubixState,AStar.goalState) ? currentNode : null;\n    }\n    \n"],[0,"    "]],"start1":1228,"start2":1228,"length1":193,"length2":16}]],"length":2499,"saved":false}
{"ts":1350607095160,"patch":[[{"diffs":[[0,"\n * "],[-1,"Before"],[1,"Each"],[0," ite"]],"start1":1090,"start2":1090,"length1":14,"length2":12},{"diffs":[[0,"ion "],[1,"of "],[0,"the "],[-1,"node is"],[1,"search"],[0," check"],[-1,"ed"],[1,"s"],[0," to "]],"start1":1105,"start2":1105,"length1":27,"length2":28},{"diffs":[[0," if "],[-1,"it is of"],[1,"the current node f(n) is less than\n *"],[0," the"]],"start1":1136,"start2":1136,"length1":16,"length2":45}]],"length":2527,"saved":false}
{"ts":1350607141989,"patch":[[{"diffs":[[0,"\n * the "],[1,"limit imposed by the depth. If this evaluates to true new nodes may be spawned.\n * The spawned nodes are then added to a min priority queue"],[0,"\n */\nASt"]],"start1":1174,"start2":1174,"length1":16,"length2":155}]],"length":2666,"saved":false}
{"ts":1350607243963,"patch":[[{"diffs":[[0,"\n\n/**\n *"],[1," \\brief"],[0," Perform"]],"start1":1010,"start2":1010,"length1":16,"length2":23},{"diffs":[[0,"ty queue"],[1," if their f(n) does not exceed the\n * depth. The frontier is then checked if it is empty and if not a new node is \n * pulled from the priority queue. The loop is exited if the priority is "],[0,"\n */\nASt"]],"start1":1320,"start2":1320,"length1":16,"length2":204}]],"length":2861,"saved":false}
{"ts":1350607246167,"patch":[[{"diffs":[[0,"\n * "],[-1,"\\"],[1,"@"],[0,"brie"]],"start1":1015,"start2":1015,"length1":9,"length2":9}]],"length":2861,"saved":false}
{"ts":1350607295397,"patch":[[{"diffs":[[0,"queue. \n"],[1," * \n"],[0," * Each "]],"start1":1090,"start2":1090,"length1":16,"length2":20},{"diffs":[[0,"riority "],[-1,"is "],[1,"queue is empty\n * or a goal state is found.\n * \n * @param currentNode, the initial node containing the state to find a solution for."],[0,"\n */\nASt"]],"start1":1509,"start2":1509,"length1":19,"length2":148}]],"length":2994,"saved":false}
{"ts":1350607300145,"patch":[[{"diffs":[[0,"Node"],[-1,", t"],[1," T"],[0,"he i"]],"start1":1582,"start2":1582,"length1":11,"length2":10}]],"length":2993,"saved":false}
{"ts":1350607352292,"patch":[[{"diffs":[[0,"on for.\n"],[1," * @param depth The maximum f(n) of a node that may be expanded.\n"],[0," */\nASta"]],"start1":1641,"start2":1641,"length1":16,"length2":81}]],"length":3058,"saved":false}
{"ts":1350607365234,"patch":[[{"diffs":[[0,"pth The "],[1,"noninclusive "],[0,"maximum "]],"start1":1661,"start2":1661,"length1":16,"length2":29}]],"length":3071,"saved":false}
{"ts":1350607386146,"patch":[[{"diffs":[[0,"panded.\n"],[1," * \n * @return The goal node if found or null.\n"],[0," */\nASta"]],"start1":1719,"start2":1719,"length1":16,"length2":63}]],"length":3118,"saved":false}
{"ts":1350607443449,"patch":[[{"diffs":[[0,";  \n};\n\n"],[1,"/**\n * Recursively generates a path from the goal node.\n * \n * @param node The goal node the path is reuired from.\n * @return The string containing the sequence.\n */\n"],[0,"AStar.pr"]],"start1":2694,"start2":2694,"length1":16,"length2":182}]],"length":3284,"saved":false}
{"ts":1350607505115,"patch":[[{"diffs":[[0,"ubix"],[-1,"State.faceValues[node.nodeAction >> 4] + \":\" + (node.nodeAction & 7"],[1,"Node.nodeActionToString(node"],[0,");\n "]],"start1":3139,"start2":3139,"length1":75,"length2":36}]],"length":3245,"saved":false}
{"ts":1350607513128,"patch":[[{"diffs":[[0,"ubix"],[-1,"State.faceValues[node.nodeAction >> 4] + \":\" + (node.nodeAction & 7"],[1,"Node.nodeActionToString(node"],[0,");\n "]],"start1":3005,"start2":3005,"length1":75,"length2":36}]],"length":3206,"saved":false}
{"ts":1350607536798,"patch":[[{"diffs":[[0,"ion(node)\n{\n"],[1,"    // If the depth is > 1 recursion must be done.\n"],[0,"    if(node."]],"start1":2904,"start2":2904,"length1":24,"length2":75}]],"length":3257,"saved":false}
{"ts":1350607584164,"patch":[[{"diffs":[[0,"e done.\n"],[1,"    // else if the depth is 1 the action sequence is done.\n    // else the cube was already solved when it reached this search.\n"],[0,"    if(n"]],"start1":2959,"start2":2959,"length1":16,"length2":144}]],"length":3385,"saved":false}
{"ts":1350607618689,"patch":[[{"diffs":[[0,"e();\n}\n\n"],[1,"/**\n * Runs IDA* on a rubixState objec supplied by the user.\n */\n"],[0,"AStar.pr"]],"start1":249,"start2":249,"length1":16,"length2":81}]],"length":3450,"saved":false}
{"ts":1350607684488,"patch":[[{"diffs":[[0,"A* on a "],[-1,"r"],[1,"R"],[0,"ubixStat"]],"start1":271,"start2":271,"length1":17,"length2":17},{"diffs":[[0,"te objec"],[1,"t"],[0," supplie"]],"start1":287,"start2":287,"length1":16,"length2":17},{"diffs":[[0,"e user.\n"],[1," * \n * @param initialState A valid RubixState to find a solution to.\n"],[0," */\nASta"]],"start1":311,"start2":311,"length1":16,"length2":85}]],"length":3520,"saved":false}
{"ts":1350607711194,"patch":[[{"diffs":[[0,"ion to.\n"],[1," * @return A string containing the necessary sequence of moves to achieve a goal state.\n"],[0," */\nASta"]],"start1":380,"start2":380,"length1":16,"length2":104}]],"length":3608,"saved":false}
{"ts":1350607738645,"patch":[[{"diffs":[[0,"Star.js    \n"],[1,"    Requires - priorityQueue.js, RubixNode.js, RubixState.js\n"],[0,"    A script"]],"start1":33,"start2":33,"length1":24,"length2":85}]],"length":3669,"saved":false}
{"ts":1350607745062,"patch":[[{"diffs":[[0,"tyQueue.js, "],[-1,"R"],[1,"r"],[0,"ubixNode.js,"]],"start1":66,"start2":66,"length1":25,"length2":25},{"diffs":[[0,"ode.js, "],[-1,"R"],[1,"r"],[0,"ubixStat"]],"start1":84,"start2":84,"length1":17,"length2":17}]],"length":3669,"saved":false}
{"contributors":[],"silentsave":false,"ts":1350670007950,"patch":[[{"diffs":[[0,"ueue();\n"],[1,"    this.record = [];\n"],[0,"}\n\n/**\n "]],"start1":307,"start2":307,"length1":16,"length2":38},{"diffs":[[0,"= null;\n"],[1,"    \n    for (var i = 0; i < 100; i ++)\n    {\n        RubixState.rotate(initialState,Math.floor(Math.random()*6), Math.floor(Math.random()*3 + 1));  \n    }\n    \n    console.log(RubixState.verifyState(initialState));\n    console.log(RubixState.toString(initialState));\n"],[0,"    var "]],"start1":728,"start2":728,"length1":16,"length2":284},{"diffs":[[0,"tate);\n    \n"],[1,"    \n"],[0,"    depth = "]],"start1":1048,"start2":1048,"length1":24,"length2":29},{"diffs":[[0,"alNode)\n"],[-1,""],[0,"    {\n"],[1,"        //TODO get Garbage collection to run here...\n        for(var index in this.record)\n        {\n            this.record.pop().parent = null;    \n        }\n        \n"],[0,"        "]],"start1":1107,"start2":1107,"length1":22,"length2":191},{"diffs":[[0,"ty())\n        {\n"],[1,"            //this.record.push(localNode);\n"],[0,"            loca"]],"start1":3127,"start2":3127,"length1":32,"length2":75}]],"length":4176,"saved":false}
{"contributors":[],"silentsave":false,"ts":1350672178098,"patch":[[{"diffs":[[0,"alNode.r"],[-1,"ubixState"],[1,"S"],[0,", \n     "]],"start1":3347,"start2":3347,"length1":25,"length2":17}]],"length":4168,"saved":false}
{"ts":1350672191392,"patch":[[{"diffs":[[0,"alNode.r"],[-1,"ubixState"],[1,"S"],[0,",AStar.g"]],"start1":3426,"start2":3426,"length1":25,"length2":17}]],"length":4160,"saved":false}
{"ts":1350672746197,"patch":[[{"diffs":[[0,"ove(); \n"],[1,"            console.log(sizeof localNode);\n"],[0,"        "]],"start1":3227,"start2":3227,"length1":16,"length2":59}]],"length":4203,"saved":false}
{"contributors":[],"silentsave":false,"ts":1350751978233,"patch":[[{"diffs":[[0,"        "],[-1,"//"],[0,""],[1,""],[0,"this.rec"]],"start1":3147,"start2":3147,"length1":18,"length2":16},{"diffs":[[0,"); \n"],[-1,"            console.log(sizeof localNode);\n"],[0,"    "]],"start1":3229,"start2":3229,"length1":51,"length2":8},{"diffs":[[0,"alNode.r"],[-1,"S"],[1,"ubixState"],[0,", \n     "]],"start1":3345,"start2":3345,"length1":17,"length2":25},{"diffs":[[0,"alNode.r"],[-1,"S"],[1,"ubixState"],[0,",AStar.g"]],"start1":3432,"start2":3432,"length1":17,"length2":25}]],"length":4174,"saved":false}
{"ts":1350751989881,"patch":[[{"diffs":[[0,"    }\n        }\n"],[1,"        else\n        {\n            \n        }\n        \n        \n"],[0,"        if(!this"]],"start1":3080,"start2":3080,"length1":32,"length2":96},{"diffs":[[0,"  {\n            "],[1,"//"],[0,"this.record.push"]],"start1":3203,"start2":3203,"length1":32,"length2":34}]],"length":4240,"saved":false}
{"ts":1350752123910,"patch":[[{"diffs":[[0,"  {\n            "],[1,"RubixNode.wipeBadChain(localNode);"],[0,"\n        }\n     "]],"start1":3115,"start2":3115,"length1":32,"length2":66}]],"length":4274,"saved":false}
{"contributors":[],"silentsave":false,"ts":1350752860822,"patch":[[{"diffs":[[0,"= null;\n    "],[1,"/*"],[0,"\n    for (va"]],"start1":728,"start2":728,"length1":24,"length2":26},{"diffs":[[0,"tialState));"],[1,"*/"],[0,"\n    var ini"]],"start1":993,"start2":993,"length1":24,"length2":26}]],"length":4278,"saved":false}
{"contributors":[],"silentsave":false,"ts":1350753621104,"patch":[[{"diffs":[[0,"ll;\n    "],[-1,"/*"],[0,"\n    for"]],"start1":732,"start2":732,"length1":18,"length2":16},{"diffs":[[0,"State));"],[-1,"*/"],[0,"\n    var"]],"start1":995,"start2":995,"length1":18,"length2":16}]],"length":4274,"saved":false}
{"contributors":[],"silentsave":false,"ts":1350754064849,"patch":[[{"diffs":[[0,"       \n        "],[1,"//"],[0,"console.log(\"pop"]],"start1":3344,"start2":3344,"length1":32,"length2":34}]],"length":4276,"saved":false}
{"ts":1350754073666,"patch":[[{"diffs":[[0,"       }\n       "],[1,"/*"],[0," else\n        {\n"]],"start1":3087,"start2":3087,"length1":32,"length2":34},{"diffs":[[0,"      }\n        "],[1,"*/"],[0,"\n        \n      "]],"start1":3170,"start2":3170,"length1":32,"length2":34}]],"length":4280,"saved":false}
{"contributors":[],"silentsave":false,"ts":1350761204822,"patch":[[{"diffs":[[0,"        "],[-1,"//"],[0,"console."]],"start1":3356,"start2":3356,"length1":18,"length2":16}]],"length":4278,"saved":false}
{"contributors":[],"silentsave":false,"ts":1350763574816,"patch":[[{"diffs":[[0,"    "],[-1," /*"],[0," els"]],"start1":3098,"start2":3098,"length1":11,"length2":8},{"diffs":[[0,"\n       "],[-1," */"],[0,"\n       "]],"start1":3174,"start2":3174,"length1":19,"length2":16}]],"length":4272,"saved":false}
{"contributors":[],"silentsave":false,"ts":1350766837610,"patch":[[{"diffs":[[0,"pth ++;\n"],[1,"        this.frontier = new PriorityMinQueue();\n"],[0,"        "]],"start1":1551,"start2":1551,"length1":16,"length2":64}]],"length":4320,"saved":false}
{"ts":1350766841751,"patch":[[{"diffs":[[0,"();\n"],[-1,"    this.record = [];\n"],[0,"}\n\n/"]],"start1":311,"start2":311,"length1":30,"length2":8}]],"length":4298,"saved":false}
{"contributors":[],"silentsave":false,"ts":1350773566931,"patch":[[{"diffs":[[0,"i < "],[-1,"100"],[1,"8"],[0,"; i "]],"start1":739,"start2":739,"length1":11,"length2":9}]],"length":4296,"saved":false}
{"ts":1350775440683,"patch":[[{"diffs":[[0,"i < "],[-1,"8"],[1,"9"],[0,"; i "]],"start1":739,"start2":739,"length1":9,"length2":9}]],"length":4296,"saved":false}
{"contributors":[],"silentsave":false,"ts":1350777920243,"patch":[[{"diffs":[[0,"}\n        }\n"],[1,"        /*\n"],[0,"       else\n"]],"start1":3108,"start2":3108,"length1":24,"length2":35},{"diffs":[[0,"Node);\n        }"],[1,"*/"],[0,"\n       \n       "]],"start1":3193,"start2":3193,"length1":32,"length2":34}]],"length":4309,"saved":false}
{"contributors":[],"silentsave":false,"ts":1350785168129,"patch":[[{"diffs":[[0,"pth ++;\n        "],[1,"//"],[0,"this.frontier = "]],"start1":1527,"start2":1527,"length1":32,"length2":34},{"diffs":[[0,"  }\n"],[-1,"        /*\n"],[0,"    "]],"start1":3118,"start2":3118,"length1":19,"length2":8},{"diffs":[[0,"       }"],[-1,"*/"],[0,"\n       "]],"start1":3192,"start2":3192,"length1":18,"length2":16}]],"length":4298,"saved":false}
{"ts":1350785178523,"patch":[[{"diffs":[[0,"for("],[-1,"var index in "],[0,"this"]],"start1":1158,"start2":1158,"length1":21,"length2":8}]],"length":4285,"saved":false}
{"ts":1350785185219,"patch":[[{"diffs":[[0,"    for("],[1,"var index in "],[0,"this.rec"]],"start1":1154,"start2":1154,"length1":16,"length2":29}]],"length":4298,"saved":false}
{"contributors":[],"silentsave":false,"ts":1350791099095,"patch":[[{"diffs":[[0,"++;\n        "],[-1,"//"],[0,"this.frontie"]],"start1":1531,"start2":1531,"length1":26,"length2":24}]],"length":4296,"saved":false}
{"contributors":[],"silentsave":false,"ts":1350797838161,"patch":[[{"diffs":[[0,"= null;\n    "],[1,"/*"],[0,"\n    for (va"]],"start1":706,"start2":706,"length1":24,"length2":26},{"diffs":[[0,"tialState));"],[1,"*/"],[0,"\n    var ini"]],"start1":969,"start2":969,"length1":24,"length2":26}]],"length":4300,"saved":false}
{"contributors":[],"silentsave":false,"ts":1350797974322,"patch":[[{"diffs":[[0,"ll;\n    "],[-1,"/*"],[0,"\n    for"]],"start1":710,"start2":710,"length1":18,"length2":16},{"diffs":[[0,"State));"],[-1,"*/"],[0,"\n    var"]],"start1":971,"start2":971,"length1":18,"length2":16}]],"length":4296,"saved":false}
{"contributors":[],"silentsave":false,"ts":1350798109707,"patch":[[{"diffs":[[0,"       \n        "],[1,"console.log(localNode);"],[0,"\n        if(!thi"]],"start1":3199,"start2":3199,"length1":32,"length2":55}]],"length":4319,"saved":false}
{"contributors":[],"silentsave":false,"ts":1350798144985,"patch":[[{"diffs":[[0,"= null;\n    "],[1,"/*"],[0,"\n    for (va"]],"start1":706,"start2":706,"length1":24,"length2":26},{"diffs":[[0,"tialState));"],[1,"*/"],[0,"\n    var ini"]],"start1":969,"start2":969,"length1":24,"length2":26}]],"length":4323,"saved":false}
{"ts":1350798188832,"patch":[[{"diffs":[[0,"pth ++;\n"],[1,"        console.log(this.frontier);\n"],[0,"        "]],"start1":1531,"start2":1531,"length1":16,"length2":52}]],"length":4359,"saved":false}
{"ts":1350798468143,"patch":[[{"diffs":[[0,"   \n"],[-1,"        console.log(localNode);\n"],[0,"    "]],"start1":3243,"start2":3243,"length1":40,"length2":8}]],"length":4327,"saved":false}
{"ts":1350798506031,"patch":[[{"diffs":[[0,"++;\n"],[-1,"        console.log(this.frontier);\n        "],[1,"\n"],[0,"this"]],"start1":1535,"start2":1535,"length1":52,"length2":9}]],"length":4284,"saved":false}
{"ts":1350798507366,"patch":[[{"diffs":[[0,"th ++;\n\n"],[1,"        "],[0,"this.fro"]],"start1":1532,"start2":1532,"length1":16,"length2":24}]],"length":4292,"saved":false}
{"ts":1350798795555,"patch":[[{"diffs":[[0,"ush(localNode);\n"],[1,"            localNode = null;\n"],[0,"            loca"]],"start1":3286,"start2":3286,"length1":32,"length2":62}]],"length":4322,"saved":false}
{"ts":1350798880006,"patch":[[{"diffs":[[0,"ll;\n    "],[-1,"/*"],[0,"\n    for"]],"start1":710,"start2":710,"length1":18,"length2":16},{"diffs":[[0,"State));"],[-1,"*/"],[0,"\n    var"]],"start1":971,"start2":971,"length1":18,"length2":16}]],"length":4318,"saved":false}
{"contributors":[],"silentsave":false,"ts":1350832043215,"patch":[[{"diffs":[[0,"= null;\n    "],[1,"/*"],[0,"\n    for (va"]],"start1":706,"start2":706,"length1":24,"length2":26},{"diffs":[[0,"tialState));"],[1,"*/"],[0,"\n    var ini"]],"start1":969,"start2":969,"length1":24,"length2":26}]],"length":4322,"saved":false}
{"ts":1350832201506,"patch":[[{"diffs":[[0,"ll;\n    "],[-1,"/*"],[0,"\n    for"]],"start1":710,"start2":710,"length1":18,"length2":16},{"diffs":[[0,"State));"],[-1,"*/"],[0,"\n    var"]],"start1":971,"start2":971,"length1":18,"length2":16}]],"length":4318,"saved":false}
{"ts":1350832212107,"patch":[[{"diffs":[[0,"= null;\n    "],[1,"/*"],[0,"\n    for (va"]],"start1":706,"start2":706,"length1":24,"length2":26},{"diffs":[[0,"tialState));"],[1,"*/"],[0,"\n    var ini"]],"start1":969,"start2":969,"length1":24,"length2":26}]],"length":4322,"saved":false}
{"ts":1350832214804,"patch":[[{"diffs":[[0,"tate));*"],[-1,"/"],[1,"\n    "],[0,"\n    var"]],"start1":974,"start2":974,"length1":17,"length2":21}]],"length":4326,"saved":false}
{"ts":1350832217106,"patch":[[{"diffs":[[0,"tate));*"],[1,"/"],[0,"\n    \n  "]],"start1":974,"start2":974,"length1":16,"length2":17}]],"length":4327,"saved":false}
{"ts":1350832219013,"patch":[[{"diffs":[[0,"ode = null;\n"],[1,"    \n"],[0,"    /*\n    f"]],"start1":702,"start2":702,"length1":24,"length2":29}]],"length":4332,"saved":false}
{"contributors":[],"silentsave":false,"ts":1350867945571,"patch":[[{"diffs":[[0,"= null;\n"],[-1,"    \n"],[0,"    /*\n "]],"start1":706,"start2":706,"length1":21,"length2":16},{"diffs":[[0,"i < "],[-1,"9"],[1,"10"],[0,"; i "]],"start1":741,"start2":741,"length1":9,"length2":10},{"diffs":[[0,"\" + depth);\n"],[1,"        console.log(RubixNode.statePool.length);\n                console.log(RubixNode.nodePool.length);\n\n"],[0,"    }\n    \n "]],"start1":1653,"start2":1653,"length1":24,"length2":130},{"diffs":[[0,"       \n        "],[1,"//"],[0,"console.log(\"pop"]],"start1":3504,"start2":3504,"length1":32,"length2":34}]],"length":4436,"saved":false}
{"contributors":[],"silentsave":false,"ts":1350872803299,"patch":[[{"diffs":[[0,"              }\n"],[1,"                else\n                {\n                    RubixNode.wipeBadChain(successors[index]);   \n                }\n"],[0,"            }\n  "]],"start1":3197,"start2":3197,"length1":32,"length2":155},{"diffs":[[0,"        "],[-1,"//"],[0,"console."]],"start1":3635,"start2":3635,"length1":18,"length2":16}]],"length":4557,"saved":false}
{"contributors":[],"silentsave":false,"ts":1350872875535,"patch":[[{"diffs":[[0,"                "],[1,"//"],[0," RubixNode.wipeB"]],"start1":3255,"start2":3255,"length1":32,"length2":34}]],"length":4559,"saved":false}
{"contributors":[],"silentsave":false,"ts":1350872910504,"patch":[[{"diffs":[[0,"\n           "],[-1," "],[1,"//"],[0,"RubixNode.wi"]],"start1":3383,"start2":3383,"length1":25,"length2":26}]],"length":4560,"saved":false}
{"ts":1350872928281,"patch":[[{"diffs":[[0,"        "],[-1,"//"],[0,"RubixNod"]],"start1":3387,"start2":3387,"length1":18,"length2":16}]],"length":4558,"saved":false}
{"ts":1350872962547,"patch":[[{"diffs":[[0,"        "],[-1," //"],[0," RubixNo"]],"start1":3262,"start2":3262,"length1":19,"length2":16}]],"length":4555,"saved":false}
{"contributors":[],"silentsave":false,"ts":1350874595839,"patch":[[{"diffs":[[0,"goalNode"],[1," && depth < 5"],[0,")\n    {\n"]],"start1":1091,"start2":1091,"length1":16,"length2":29}]],"length":4568,"saved":false}
{"contributors":[],"silentsave":false,"ts":1350874640635,"patch":[[{"diffs":[[0,"Node"],[-1," && depth < 5"],[0,")\n  "]],"start1":1095,"start2":1095,"length1":21,"length2":8}]],"length":4555,"saved":false}
{"ts":1350874663233,"patch":[[{"diffs":[[0,"pth ++;\n"],[1,"        if(depth === 5.5)\n        {\n            break;   \n        }"],[0,"\n       "]],"start1":1537,"start2":1537,"length1":16,"length2":83}]],"length":4622,"saved":false}
{"ts":1350874755588,"patch":[[{"diffs":[[0,"   }\n       else"],[1," if(!RubixState.isEqual(localNode.rubixState, \n        AStar.goalState))"],[0,"\n        {\n     "]],"start1":3421,"start2":3421,"length1":32,"length2":104}]],"length":4694,"saved":false}
{"ts":1350874810431,"patch":[[{"diffs":[[0,"ntNode;\n"],[1,"    var isGoal;\n"],[0,"    var "]],"start1":2840,"start2":2840,"length1":16,"length2":32}]],"length":4710,"saved":false}
{"ts":1350874827234,"patch":[[{"diffs":[[0,"e);\n            "],[1,"\n"],[0,"    "],[1,"        isGoal = RubixState.isEqual(localNode.rubixState, AStar.goalState);"],[0,"\n            for"]],"start1":3009,"start2":3009,"length1":36,"length2":112}]],"length":4786,"saved":false}
{"ts":1350874827887,"patch":[[{"diffs":[[0,"goalState);\n"],[1,"            \n"],[0,"            "]],"start1":3094,"start2":3094,"length1":24,"length2":37}]],"length":4799,"saved":false}
{"ts":1350874834673,"patch":[[{"diffs":[[0,"if(!"],[-1,"RubixState.isEqual(localNode.rubixState, \n        AStar.goalState)"],[1,"isGoal"],[0,")\n  "]],"start1":3543,"start2":3543,"length1":74,"length2":14}]],"length":4739,"saved":false}
{"ts":1350874842022,"patch":[[{"diffs":[[0,"&& !"],[-1,"RubixState.isEqual(localNode.rubixState, \n        AStar.goalState)"],[1,"isGoal"],[0,");\n "]],"start1":3884,"start2":3884,"length1":74,"length2":14}]],"length":4679,"saved":false}
{"ts":1350874846842,"patch":[[{"diffs":[[0,"urn "],[-1,"RubixState.isEqual(localNode.rubixState,AStar.goalState)"],[1,"isGoal"],[0," ?lo"]],"start1":3911,"start2":3911,"length1":64,"length2":14}]],"length":4629,"saved":false}
{"ts":1350874870354,"patch":[[{"diffs":[[0,"    do{\n        "],[1,"isGoal = RubixState.isEqual(localNode.rubixState, AStar.goalState);\n"],[0,"\n        if(loca"]],"start1":2892,"start2":2892,"length1":32,"length2":100},{"diffs":[[0,"   \n"],[-1,"            isGoal = RubixState.isEqual(localNode.rubixState, AStar.goalState);\n"],[0,"    "]],"start1":3090,"start2":3090,"length1":88,"length2":8},{"diffs":[[0,"   }\n       "],[1," "],[0,"\n        if("]],"start1":3604,"start2":3604,"length1":24,"length2":25}]],"length":4618,"saved":false}
{"ts":1350874887003,"patch":[[{"diffs":[[0,"lState);"],[1,"\n        console.log(isGoal);"],[0,"\n\n      "]],"start1":2967,"start2":2967,"length1":16,"length2":45}]],"length":4647,"saved":false}
{"ts":1350874918958,"patch":[[{"diffs":[[0,"ole.log("],[-1,"isGoal"],[1,"RubixState.toString(localNode)"],[0,");\n\n    "]],"start1":2988,"start2":2988,"length1":22,"length2":46}]],"length":4671,"saved":false}
{"ts":1350874931231,"patch":[[{"diffs":[[0,"te);"],[-1,"\n        console.log(RubixState.toString(localNode));"],[0,"\n\n  "]],"start1":2971,"start2":2971,"length1":61,"length2":8}]],"length":4618,"saved":false}
{"ts":1350874933819,"patch":[[{"diffs":[[0,"      }\n        "],[1,"        console.log(RubixState.toString(localNode));\n"],[0,"\n        console"]],"start1":3789,"start2":3789,"length1":32,"length2":85}]],"length":4671,"saved":false}
{"ts":1350874956371,"patch":[[{"diffs":[[0,"ole.log("],[-1,"RubixState.toString("],[0,"localNod"]],"start1":3817,"start2":3817,"length1":36,"length2":16},{"diffs":[[0,"calNode)"],[-1,")"],[0,";\n\n     "]],"start1":3827,"start2":3827,"length1":17,"length2":16}]],"length":4650,"saved":false}
{"ts":1350874987633,"patch":[[{"diffs":[[0,"   }"],[-1,"\n                console.log(localNode);"],[0,"\n\n  "]],"start1":3792,"start2":3792,"length1":48,"length2":8}]],"length":4610,"saved":false}
{"ts":1350874992422,"patch":[[{"diffs":[[0,"    do{\n"],[1,"                        console.log(localNode);\n\n"],[0,"        "]],"start1":2892,"start2":2892,"length1":16,"length2":65}]],"length":4659,"saved":false}
{"ts":1350875051921,"patch":[[{"diffs":[[0,"{\n              "],[1,"//"],[0,"          consol"]],"start1":2898,"start2":2898,"length1":32,"length2":34}]],"length":4661,"saved":false}
{"ts":1350875061537,"patch":[[{"diffs":[[0,"do{\n"],[-1,"              // "],[0,"    "]],"start1":2896,"start2":2896,"length1":25,"length2":8}]],"length":4644,"saved":false}
{"ts":1350875062540,"patch":[[{"diffs":[[0,"    do{\n        "],[-1," "],[0,"console.log(loca"]],"start1":2892,"start2":2892,"length1":33,"length2":32}]],"length":4643,"saved":false}
{"ts":1350875370632,"patch":[[{"diffs":[[0,"ode.fn;\n"],[1,"    console.log(AStar.goalState);"],[0,"\n    whi"]],"start1":1071,"start2":1071,"length1":16,"length2":49}]],"length":4676,"saved":false}
{"ts":1350875498121,"patch":[[{"diffs":[[0,"ole.log("],[1,"JSON.stringify("],[0,"AStar.go"]],"start1":1087,"start2":1087,"length1":16,"length2":31}]],"length":4691,"saved":false}
{"ts":1350875501171,"patch":[[{"diffs":[[0,"r.goalState)"],[1,")"],[0,";\n    while("]],"start1":1114,"start2":1114,"length1":24,"length2":25}]],"length":4692,"saved":false}
{"ts":1350875562130,"patch":[[{"diffs":[[0,"Node.fn;\n   "],[1,"//"],[0," console.log"]],"start1":1070,"start2":1070,"length1":24,"length2":26}]],"length":4694,"saved":false}
{"ts":1350875603578,"patch":[[{"diffs":[[0,"              {\n"],[1,"                    console.log( RubixState.isEqual(successors[index].rubixState, Astar.goalState);\n"],[0,"                "]],"start1":3480,"start2":3480,"length1":32,"length2":132}]],"length":4794,"saved":false}
{"ts":1350875612664,"patch":[[{"diffs":[[0,"r.goalState)"],[1,")"],[0,";\n          "]],"start1":3582,"start2":3582,"length1":24,"length2":25}]],"length":4795,"saved":false}
{"ts":1350875634800,"patch":[[{"diffs":[[0,"Goal)\n        {\n"],[1,"                                console.log( RubixState.isEqual(successors[index].rubixState, Astar.goalState));\n\n"],[0,"           Rubix"]],"start1":3722,"start2":3722,"length1":32,"length2":146}]],"length":4909,"saved":false}
{"ts":1350875643004,"patch":[[{"diffs":[[0,"isEqual("],[-1,"successors[index]"],[1,"localNode"],[0,".rubixSt"]],"start1":3794,"start2":3794,"length1":33,"length2":25}]],"length":4901,"saved":false}
{"ts":1350875670330,"patch":[[{"diffs":[[0,"x].rubixState, A"],[-1,"s"],[1,"S"],[0,"tar.goalState));"]],"start1":3563,"start2":3563,"length1":33,"length2":33},{"diffs":[[0,"State, A"],[-1,"s"],[1,"S"],[0,"tar.goal"]],"start1":3817,"start2":3817,"length1":17,"length2":17}]],"length":4901,"saved":false}
{"ts":1350875702389,"patch":[[{"diffs":[[0,"    console.log("],[1,"\"in for\","],[0," RubixState.isEq"]],"start1":3512,"start2":3512,"length1":32,"length2":41}]],"length":4910,"saved":false}
{"ts":1350875730678,"patch":[[{"diffs":[[0,"in for\","],[1,"successors[index].fn,"],[0," RubixSt"]],"start1":3529,"start2":3529,"length1":16,"length2":37}]],"length":4931,"saved":false}
{"ts":1350875742780,"patch":[[{"diffs":[[0,"                "],[1,"//"],[0,"RubixNode.wipeBa"]],"start1":3630,"start2":3630,"length1":32,"length2":34}]],"length":4933,"saved":false}
{"ts":1350875768212,"patch":[[{"diffs":[[0,"\n\n          "],[1,"//"],[0," RubixNode.w"]],"start1":3874,"start2":3874,"length1":24,"length2":26}]],"length":4935,"saved":false}
{"ts":1350875787659,"patch":[[{"diffs":[[0,"fn;\n"],[-1,"   // console.log(JSON.stringify(AStar.goalState));"],[0,"\n   "]],"start1":1075,"start2":1075,"length1":59,"length2":8},{"diffs":[[0,"    "],[-1,"console.log(localNode);\n"],[0,"\n   "]],"start1":2904,"start2":2904,"length1":32,"length2":8},{"diffs":[[0,"    "],[-1," console.log(\"in for\",successors[index].fn, RubixState.isEqual(successors[index].rubixState, AStar.goalState));\n                   //"],[0,"Rubi"]],"start1":3436,"start2":3436,"length1":141,"length2":8},{"diffs":[[0,"    "],[-1,"                      console.log( RubixState.isEqual(localNode.rubixState, AStar.goalState));\n\n          //"],[0," Rub"]],"start1":3568,"start2":3568,"length1":116,"length2":8}]],"length":4619,"saved":false}
{"ts":1350875830481,"patch":[[{"diffs":[[0,"goalNode));\n"],[1,"    console.log(goalNode);\n"],[0,"    sequence"]],"start1":1883,"start2":1883,"length1":24,"length2":51}]],"length":4646,"saved":false}
{"ts":1350875852752,"patch":[[{"diffs":[[0,"                "],[1,"//"],[0,"RubixNode.wipeBa"]],"start1":3451,"start2":3451,"length1":32,"length2":34}]],"length":4648,"saved":false}
{"ts":1350875855482,"patch":[[{"diffs":[[0," {\n         "],[1,"//"],[0,"  RubixNode."]],"start1":3588,"start2":3588,"length1":24,"length2":26}]],"length":4650,"saved":false}
{"ts":1350875991025,"patch":[[{"diffs":[[0,"        "],[-1," //"],[0,"  RubixN"]],"start1":3591,"start2":3591,"length1":19,"length2":16}]],"length":4647,"saved":false}
{"ts":1350876008658,"patch":[[{"diffs":[[0,"        "],[-1,"//"],[0,"RubixNod"]],"start1":3459,"start2":3459,"length1":18,"length2":16}]],"length":4645,"saved":false}
{"ts":1350876030829,"patch":[[{"diffs":[[0," ++;\n       "],[1,"/*"],[0," if(depth =="]],"start1":1540,"start2":1540,"length1":24,"length2":26},{"diffs":[[0,"ak;   \n        }"],[1,"*/"],[0,"\n        this.fr"]],"start1":1598,"start2":1598,"length1":32,"length2":34}]],"length":4649,"saved":false}
{"contributors":[],"silentsave":false,"ts":1350876058323,"patch":[[{"diffs":[[0,"                "],[1,"//"],[0," RubixNode.wipeB"]],"start1":3454,"start2":3454,"length1":32,"length2":34}]],"length":4651,"saved":false}
{"ts":1350876081323,"patch":[[{"diffs":[[0,"\n       "],[-1,"/*"],[0," if(dept"]],"start1":1544,"start2":1544,"length1":18,"length2":16},{"diffs":[[0,"       }"],[-1,"*/"],[0,"\n       "]],"start1":1604,"start2":1604,"length1":18,"length2":16}]],"length":4647,"saved":false}
{"ts":1350876106539,"patch":[[{"diffs":[[0,"1));  \n    }"],[1,"*/"],[0,"\n    \n    co"]],"start1":858,"start2":858,"length1":24,"length2":26},{"diffs":[[0,"State));"],[-1,"*/"],[0,"\n    \n  "]],"start1":976,"start2":976,"length1":18,"length2":16}]],"length":4647,"saved":false}
{"ts":1350876152263,"patch":[[{"diffs":[[0,"    }*/\n    "],[1,"RubixState.rotate(initialState, 5, 1)"],[0,"\n    console"]],"start1":865,"start2":865,"length1":24,"length2":61}]],"length":4684,"saved":false}
{"ts":1350876153182,"patch":[[{"diffs":[[0,"e, 5, 1)"],[1,";"],[0,"\n    con"]],"start1":906,"start2":906,"length1":16,"length2":17}]],"length":4685,"saved":false}
{"ts":1350876174488,"patch":[[{"diffs":[[0,"ate,"],[1," 2, 1);\n        RubixState.rotate(initialState,"],[0," 5, 1);\n"],[1,"\n"],[0,"    "]],"start1":904,"start2":904,"length1":16,"length2":64}]],"length":4733,"saved":false}
{"ts":1350876183569,"patch":[[{"diffs":[[0,"    }*/\n"],[1,"    "],[0,"    Rubi"]],"start1":865,"start2":865,"length1":16,"length2":20},{"diffs":[[0,"te, "],[-1,"2"],[1,"5"],[0,", 1);\n"],[-1,"    "],[0,"    "]],"start1":909,"start2":909,"length1":19,"length2":15},{"diffs":[[0,"itialState, "],[-1,"5"],[1,"2"],[0,", 1);\n\n    c"]],"start1":944,"start2":944,"length1":25,"length2":25}]],"length":4733,"saved":false}
{"ts":1350876189257,"patch":[[{"diffs":[[0,"ate, 5, "],[-1,"1"],[1,"3"],[0,");\n    R"]],"start1":908,"start2":908,"length1":17,"length2":17}]],"length":4733,"saved":false}
{"ts":1350876197420,"patch":[[{"diffs":[[0,"    }*/\n"],[-1,"    "],[0,"    Rubi"]],"start1":865,"start2":865,"length1":20,"length2":16},{"diffs":[[0,"te, "],[-1,"5, 3"],[1,"2, 1"],[0,");\n"],[1,"        "],[0,"    "]],"start1":905,"start2":905,"length1":15,"length2":23},{"diffs":[[0,"te, "],[-1,"2, 1"],[1,"5, 3"],[0,");\n\n"],[1,"\n"],[0,"    "]],"start1":956,"start2":956,"length1":16,"length2":17}]],"length":4738,"saved":false}
{"ts":1350876246577,"patch":[[{"diffs":[[0,"1);\n            "],[1,"//"],[0,"RubixState.rotat"]],"start1":912,"start2":912,"length1":32,"length2":34}]],"length":4740,"saved":false}
{"ts":1350876270889,"patch":[[{"diffs":[[0,"1);\n"],[-1,"            //RubixState.rotate(initialState, 5, 3);\n"],[0,"\n\n  "]],"start1":912,"start2":912,"length1":61,"length2":8}]],"length":4687,"saved":false}
{"ts":1350876277596,"patch":[[{"diffs":[[0,"ate, 2, "],[-1,"1)"],[1,"2);\n    return"],[0,";\n\n\n    "]],"start1":904,"start2":904,"length1":18,"length2":30}]],"length":4699,"saved":false}
{"ts":1350876286442,"patch":[[{"diffs":[[0,"2);\n"],[-1,"    return;\n"],[0,"\n\n  "]],"start1":912,"start2":912,"length1":20,"length2":8},{"diffs":[[0,"tate));\n    "],[1,"    return;\n"],[0,"\n    var ini"]],"start1":1017,"start2":1017,"length1":24,"length2":36}]],"length":4699,"saved":false}
{"ts":1350876301065,"patch":[[{"diffs":[[0,"ate, 2, "],[-1,"2"],[1,"3"],[0,");\n\n\n   "]],"start1":904,"start2":904,"length1":17,"length2":17}]],"length":4699,"saved":false}
{"ts":1350876308367,"patch":[[{"diffs":[[0,"te, "],[-1,"2"],[1,"0"],[0,", 3)"]],"start1":905,"start2":905,"length1":9,"length2":9}]],"length":4699,"saved":false}
{"ts":1350876328097,"patch":[[{"diffs":[[0,"ate, 0, "],[-1,"3"],[1,"1"],[0,");\n\n\n   "]],"start1":904,"start2":904,"length1":17,"length2":17}]],"length":4699,"saved":false}
{"ts":1350876341314,"patch":[[{"diffs":[[0,"lState, "],[-1,"0"],[1,"1"],[0,", 1);\n\n\n"]],"start1":901,"start2":901,"length1":17,"length2":17}]],"length":4699,"saved":false}
{"ts":1350876364805,"patch":[[{"diffs":[[0,"lState, "],[-1,"1"],[1,"2"],[0,", 1);\n\n\n"]],"start1":901,"start2":901,"length1":17,"length2":17}]],"length":4699,"saved":false}
{"ts":1350876373579,"patch":[[{"diffs":[[0,"te, "],[-1,"2"],[1,"3"],[0,", 1)"]],"start1":905,"start2":905,"length1":9,"length2":9}]],"length":4699,"saved":false}
{"ts":1350876403737,"patch":[[{"diffs":[[0,"lState, "],[-1,"3"],[1,"4"],[0,", 1);\n\n\n"]],"start1":901,"start2":901,"length1":17,"length2":17}]],"length":4699,"saved":false}
{"ts":1350876415980,"patch":[[{"diffs":[[0,"te, "],[-1,"4"],[1,"5"],[0,", 1)"]],"start1":905,"start2":905,"length1":9,"length2":9}]],"length":4699,"saved":false}
{"ts":1350876426290,"patch":[[{"diffs":[[0,"}*/\n"],[-1,"    RubixState.rotate(initialState, 5, 1);\n"],[0,"\n\n  "]],"start1":869,"start2":869,"length1":51,"length2":8}]],"length":4656,"saved":false}
{"ts":1350876430987,"patch":[[{"diffs":[[0,"    "],[-1,"    return;\n"],[0,"\n   "]],"start1":982,"start2":982,"length1":20,"length2":8}]],"length":4644,"saved":false}
{"ts":1350876635497,"patch":[[{"diffs":[[0,"    }*/\n"],[1,"    RubixState.rotate(initialState, 4, 1);\n"],[0,"\n\n    co"]],"start1":865,"start2":865,"length1":16,"length2":59},{"diffs":[[0,"tate));\n    "],[1,"    return;\n"],[0,"\n    var ini"]],"start1":1017,"start2":1017,"length1":24,"length2":36}]],"length":4699,"saved":false}
{"ts":1350876649325,"patch":[[{"diffs":[[0," 4, 1);\n"],[1,"    RubixState.rotate(initialState, 2, 3);\n"],[0,"\n\n    co"]],"start1":908,"start2":908,"length1":16,"length2":59}]],"length":4742,"saved":false}
{"ts":1350876651968,"patch":[[{"diffs":[[0,"));\n        "],[1,"//"],[0,"return;\n\n   "]],"start1":1064,"start2":1064,"length1":24,"length2":26}]],"length":4744,"saved":false}
{"ts":1350876711394,"patch":[[{"diffs":[[0,"ole.log("],[1,"RubRubixState.toString("],[0,"goalNode"]],"start1":2000,"start2":2000,"length1":16,"length2":39},{"diffs":[[0,"ng(goalNode)"],[1,")"],[0,";\n    sequen"]],"start1":2028,"start2":2028,"length1":24,"length2":25}]],"length":4768,"saved":false}
{"ts":1350876713587,"patch":[[{"diffs":[[0,"ole.log("],[-1,"Rub"],[0,"RubixSta"]],"start1":2000,"start2":2000,"length1":19,"length2":16}]],"length":4765,"saved":false}
{"ts":1350876740200,"patch":[[{"diffs":[[0,"    }*/\n    "],[1,"//"],[0,"RubixState.r"]],"start1":865,"start2":865,"length1":24,"length2":26},{"diffs":[[0," 4, 1);\n    "],[1,"//"],[0,"RubixState.r"]],"start1":910,"start2":910,"length1":24,"length2":26}]],"length":4769,"saved":false}
{"ts":1350876758046,"patch":[[{"diffs":[[0,"    console.log("],[1,"goalNode, "],[0,"RubixState.toStr"]],"start1":1996,"start2":1996,"length1":32,"length2":42}]],"length":4779,"saved":false}
{"ts":1350876772742,"patch":[[{"diffs":[[0,"alNode, "],[1,");//"],[0,"RubixSta"]],"start1":2014,"start2":2014,"length1":16,"length2":20}]],"length":4783,"saved":false}
{"ts":1350876776487,"patch":[[{"diffs":[[0,"oalNode,"],[1,"\"\""],[0," );//Rub"]],"start1":2013,"start2":2013,"length1":16,"length2":18}]],"length":4785,"saved":false}
{"ts":1350876893673,"patch":[[{"diffs":[[0,"gth);\n\n    }"],[1,","],[0,"\n    \n    co"]],"start1":1932,"start2":1932,"length1":24,"length2":25},{"diffs":[[0,"ode,"],[-1,"\"\" );//"],[0,"Rubi"]],"start1":2018,"start2":2018,"length1":15,"length2":8}]],"length":4779,"saved":false}
{"ts":1350876902677,"patch":[[{"diffs":[[0,";\n\n    }"],[-1,","],[0,"\n    \n  "]],"start1":1936,"start2":1936,"length1":17,"length2":16},{"diffs":[[0,"goalNode"],[-1,","],[0,"RubixSta"]],"start1":2012,"start2":2012,"length1":17,"length2":16}]],"length":4777,"saved":false}
{"ts":1350876905316,"patch":[[{"diffs":[[0,"goalNode"],[1,","],[0,"RubixSta"]],"start1":2012,"start2":2012,"length1":16,"length2":17}]],"length":4778,"saved":false}
{"ts":1350876953862,"patch":[[{"diffs":[[0,"goalNode"],[1,".rubixState.cubies);//"],[0,",RubixSt"]],"start1":2012,"start2":2012,"length1":16,"length2":38}]],"length":4800,"saved":false}
{"ts":1350876985562,"patch":[[{"diffs":[[0,"isGoal ?"],[1," "],[0,"localNod"]],"start1":4086,"start2":4086,"length1":16,"length2":17},{"diffs":[[0,"ocalNode"],[1," "],[0,": null; "]],"start1":4096,"start2":4096,"length1":16,"length2":17}]],"length":4802,"saved":false}
{"ts":1350877001771,"patch":[[{"diffs":[[0,";\n    \n "],[1,"   console.log(isGoal);"],[0,"\n    ret"]],"start1":4066,"start2":4066,"length1":16,"length2":39}]],"length":4825,"saved":false}
{"ts":1350877009337,"patch":[[{"diffs":[[0,"        "],[1,"/*"],[0,"if(depth"]],"start1":1646,"start2":1646,"length1":16,"length2":18},{"diffs":[[0,"ak;   \n        }"],[1,"*/"],[0,"\n        this.fr"]],"start1":1699,"start2":1699,"length1":32,"length2":34}]],"length":4829,"saved":false}
{"ts":1350877081155,"patch":[[{"diffs":[[0,"e.cubies"],[1,", \"\\n\", AStar.goalgoalState.cubies"],[0,");//,Rub"]],"start1":2034,"start2":2034,"length1":16,"length2":50}]],"length":4863,"saved":false}
{"ts":1350877083110,"patch":[[{"diffs":[[0,", AStar."],[-1,"goal"],[0,"goalStat"]],"start1":2048,"start2":2048,"length1":20,"length2":16}]],"length":4859,"saved":false}
{"ts":1350877207923,"patch":[[{"diffs":[[0,"    "],[-1,"\n        isGoal = RubixState.isEqual(localNode.rubixState, AStar.goalState);"],[0,"\n\n  "]],"start1":3118,"start2":3118,"length1":84,"length2":8}]],"length":4783,"saved":false}
{"ts":1350877211955,"patch":[[{"diffs":[[0,"       }"],[1,"\n        isGoal = RubixState.isEqual(localNode.rubixState, AStar.goalState);"],[0,"\n\n      "]],"start1":3936,"start2":3936,"length1":16,"length2":92}]],"length":4859,"saved":false}
{"ts":1350877218939,"patch":[[{"diffs":[[0,"r isGoal"],[1," = false"],[0,";\n    va"]],"start1":3068,"start2":3068,"length1":16,"length2":24}]],"length":4867,"saved":false}
{"ts":1350877232987,"patch":[[{"diffs":[[0,"lse "],[-1,"if(!isGoal)"],[0,"\n   "]],"start1":3684,"start2":3684,"length1":19,"length2":8}]],"length":4856,"saved":false}
{"ts":1350877249996,"patch":[[{"diffs":[[0,"   else "],[1,"if(!isGoal)"],[0,"\n       "]],"start1":3680,"start2":3680,"length1":16,"length2":27}]],"length":4867,"saved":false}
{"ts":1350877263342,"patch":[[{"diffs":[[0,"else"],[-1," if(!isGoal)"],[0,"\n   "]],"start1":3683,"start2":3683,"length1":20,"length2":8}]],"length":4855,"saved":false}
{"ts":1350877268539,"patch":[[{"diffs":[[0,"e(); \n        }\n"],[1,"        \n"],[0,"        isGoal ="]],"start1":3925,"start2":3925,"length1":32,"length2":41}]],"length":4864,"saved":false}
{"ts":1350877272174,"patch":[[{"diffs":[[0,"   \n"],[-1,"    console.log(isGoal);\n"],[0,"    "]],"start1":4108,"start2":4108,"length1":33,"length2":8}]],"length":4839,"saved":false}
{"ts":1350877298021,"patch":[[{"diffs":[[0,"        "],[-1," //"],[0," RubixNo"]],"start1":3576,"start2":3576,"length1":19,"length2":16}]],"length":4836,"saved":false}
{"ts":1350877348521,"patch":[[{"diffs":[[0,"              {\n"],[1,"                    console.log(\"in here\");\n"],[0,"                "]],"start1":3551,"start2":3551,"length1":32,"length2":76}]],"length":4880,"saved":false}
{"contributors":[],"silentsave":false,"ts":1350877539298,"patch":[[{"diffs":[[0,"do{\n"],[-1,"        \n\n"],[0,"    "]],"start1":3118,"start2":3118,"length1":18,"length2":8}]],"length":4870,"saved":false}
{"ts":1350877543822,"patch":[[{"diffs":[[0,"sors(localNode);"],[-1,"\n    "],[0,"        \n       "]],"start1":3209,"start2":3209,"length1":37,"length2":32}]],"length":4865,"saved":false}
{"ts":1350877549704,"patch":[[{"diffs":[[0,"                "],[1,"  "],[0,"RubixNode.wipeBa"]],"start1":3598,"start2":3598,"length1":32,"length2":34}]],"length":4867,"saved":false}
{"ts":1350877578043,"patch":[[{"diffs":[[0,"                "],[1,"//"],[0,"RubixNode.wipeBa"]],"start1":3600,"start2":3600,"length1":32,"length2":34}]],"length":4869,"saved":false}
{"ts":1350877594001,"patch":[[{"diffs":[[0,"            "],[-1,"//"],[0,"RubixNode.wi"]],"start1":3604,"start2":3604,"length1":26,"length2":24}]],"length":4867,"saved":false}
{"contributors":[],"silentsave":false,"ts":1350878092933,"patch":[[{"diffs":[[0,"        "],[-1,"/*"],[0,"if(depth"]],"start1":1646,"start2":1646,"length1":18,"length2":16},{"diffs":[[0,"  \n        }"],[-1,"*/"],[0,"\n        thi"]],"start1":1701,"start2":1701,"length1":26,"length2":24}]],"length":4863,"saved":false}
{"ts":1350878172252,"patch":[[{"diffs":[[0,"                "],[1,"//"],[0,"RubixNode.wipeBa"]],"start1":3596,"start2":3596,"length1":32,"length2":34}]],"length":4865,"saved":false}
{"ts":1350878234560,"patch":[[{"diffs":[[0,"            "],[-1,"//"],[0,"RubixNode.wi"]],"start1":3600,"start2":3600,"length1":26,"length2":24}]],"length":4863,"saved":false}
{"ts":1350878524704,"patch":[[{"diffs":[[0,"  {\n"],[-1,"                    console.log(\"in here\");\n"],[0,"    "]],"start1":3544,"start2":3544,"length1":52,"length2":8}]],"length":4819,"saved":false}
{"contributors":[],"silentsave":false,"ts":1350879735839,"patch":[[{"diffs":[[0,"                "],[1,"//"],[0,"RubixNode.wipeBa"]],"start1":3552,"start2":3552,"length1":32,"length2":34}]],"length":4821,"saved":false}
{"ts":1350879771274,"patch":[[{"diffs":[[0,"            "],[-1,"//"],[0,"RubixNode.wi"]],"start1":3556,"start2":3556,"length1":26,"length2":24}]],"length":4819,"saved":false}
{"contributors":[],"silentsave":false,"ts":1350880247764,"patch":[[{"diffs":[[0,"h);\n"],[-1,"        console.log(RubixNode.statePool.length);\n                console.log(RubixNode.nodePool.length);\n\n"],[0,"    "]],"start1":1829,"start2":1829,"length1":114,"length2":8}]],"length":4713,"saved":false}
{"contributors":[],"silentsave":false,"ts":1350881065617,"patch":[[{"diffs":[[0,"pth ++;\n"],[1,"        \n"],[0,"        "]],"start1":1638,"start2":1638,"length1":16,"length2":25}]],"length":4722,"saved":false}
{"contributors":[],"silentsave":false,"ts":1350881154556,"patch":[[{"diffs":[[0,"));\n"],[-1,"    console.log(goalNode.rubixState.cubies, \"\\n\", AStar.goalState.cubies);//,RubixState.toString(goalNode));\n"],[0,"    "]],"start1":1895,"start2":1895,"length1":117,"length2":8}]],"length":4613,"saved":false}
{"contributors":[],"silentsave":false,"ts":1350884906592,"patch":[[{"diffs":[[0,"ll;\n    "],[-1,"/*"],[0,"\n    for"]],"start1":710,"start2":710,"length1":18,"length2":16},{"diffs":[[0,"i < "],[-1,"10"],[1,"6"],[0,"; i "]],"start1":739,"start2":739,"length1":10,"length2":9}]],"length":4610,"saved":false}
{"ts":1350884907309,"patch":[[{"diffs":[[0,"  \n    }"],[-1,"*/"],[0,"\n    //R"]],"start1":859,"start2":859,"length1":18,"length2":16}]],"length":4608,"saved":false}
{"ts":1350884920689,"patch":[[{"diffs":[[0,"));  \n    }\n"],[1,"    \n"],[0,"    //RubixS"]],"start1":856,"start2":856,"length1":24,"length2":29}]],"length":4613,"saved":false}
{"ts":1350884945543,"patch":[[{"diffs":[[0,"pth ++;\n        "],[1,"/*"],[0,"\n        if(dept"]],"start1":1638,"start2":1638,"length1":32,"length2":34},{"diffs":[[0,"ak;   \n        }"],[1,"*/"],[0,"\n        this.fr"]],"start1":1708,"start2":1708,"length1":32,"length2":34}]],"length":4617,"saved":false}
{"contributors":[],"silentsave":false,"ts":1350885702388,"patch":[[{"diffs":[[0,"  }\n"],[-1,"    \n    //RubixState.rotate(initialState, 4, 1);\n    //RubixState.rotate(initialState, 2, 3);\n"],[0,"\n\n  "]],"start1":864,"start2":864,"length1":103,"length2":8}]],"length":4522,"saved":false}
{"ts":1350885704924,"patch":[[{"diffs":[[0,"\n    }\n\n"],[-1,"\n"],[0,"    cons"]],"start1":861,"start2":861,"length1":17,"length2":16}]],"length":4521,"saved":false}
{"ts":1350885706043,"patch":[[{"diffs":[[0," 0; i < "],[-1,"6"],[1,"9"],[0,"; i ++)\n"]],"start1":735,"start2":735,"length1":17,"length2":17}]],"length":4521,"saved":false}
{"ts":1350885736527,"patch":[[{"diffs":[[0,"i < "],[-1,"9"],[1,"6"],[0,"; i "]],"start1":739,"start2":739,"length1":9,"length2":9}]],"length":4521,"saved":false}
{"ts":1350885834097,"patch":[[{"diffs":[[0,"goalNode));\n"],[1,"    console.log(goalNode.isNew);\n"],[0,"    sequence"]],"start1":1795,"start2":1795,"length1":24,"length2":57}]],"length":4554,"saved":false}
{"ts":1350885873846,"patch":[[{"diffs":[[0,"lNode.is"],[-1,"N"],[1,"n"],[0,"ew);\n   "]],"start1":1826,"start2":1826,"length1":17,"length2":17}]],"length":4554,"saved":false}
{"ts":1350886192716,"patch":[[{"diffs":[[0,"));\n"],[-1,"    console.log(goalNode.isnew);\n"],[0,"    "]],"start1":1803,"start2":1803,"length1":41,"length2":8}]],"length":4521,"saved":false}
{"ts":1350886241919,"patch":[[{"diffs":[[0,"= null;\n    "],[1,"/*"],[0,"\n    for (va"]],"start1":706,"start2":706,"length1":24,"length2":26},{"diffs":[[0,"  \n    }"],[1,"*/"],[0,"\n\n    co"]],"start1":861,"start2":861,"length1":16,"length2":18}]],"length":4525,"saved":false}
{"contributors":[],"silentsave":false,"ts":1350908446303,"patch":[[{"diffs":[[0,"\n\n    do"],[1," "],[0,"{\n      "]],"start1":2814,"start2":2814,"length1":16,"length2":17},{"diffs":[[0,"   }\n       "],[1," "],[0,"else\n       "]],"start1":3358,"start2":3358,"length1":24,"length2":25},{"diffs":[[0," else\n        {\n"],[1,"  "],[0,"          RubixN"]],"start1":3370,"start2":3370,"length1":32,"length2":34},{"diffs":[[0,".\n    if"],[1," "],[0,"(node.de"]],"start1":4237,"start2":4237,"length1":16,"length2":17}]],"length":4530,"saved":false}
{"contributors":[],"silentsave":false,"ts":1350944769841,"patch":[[{"diffs":[[0,"    "],[-1,"/*\n        if(depth === 5.5)\n        {\n            break;   \n        }*/\n        this.frontier = new PriorityMinQueue("],[1,"this.frontier = new PriorityMinQueue();\n        console.log(RubixNode.nodePool.length"],[0,");\n "]],"start1":1558,"start2":1558,"length1":126,"length2":93},{"diffs":[[0,"              {\n"],[1,"                    console.log(\"here\");\n"],[0,"                "]],"start1":3206,"start2":3206,"length1":32,"length2":73}]],"length":4538,"saved":false}
{"ts":1350944935997,"patch":[[{"diffs":[[0,"  {\n"],[-1,"                    console.log(\"here\");\n"],[0,"    "]],"start1":3218,"start2":3218,"length1":49,"length2":8}]],"length":4497,"saved":false}
{"contributors":[],"silentsave":false,"ts":1351018903557,"patch":[[{"diffs":[[1,"/* ---------------\n    iterativeAStar.js    \n    Requires - priorityQueue.js, rubixNode.js, rubixState.js\n    A script for running the IDA* algorithm described in korf's paper.\n   ----------------*/\nAStar.goalState = RubixState.createWithGoalState();\n\nfunction AStar()\n{\n    this.frontier = new PriorityMinQueue();\n}\n\n/**\n * Runs IDA* on a RubixState object supplied by the user.\n * \n * @param initialState A valid RubixState to find a solution to.\n * @return A string containing the necessary sequence of moves to achieve a goal state.\n */\nAStar.prototype.iterativeAStar = function(initialState)\n{\n    if(!initialState)\n        return \"Bad Cube\";\n    var sequence =\"\";\n    var depth = 0;\n    var goalNode = null;\n    /*\n    for (var i = 0; i < 6; i ++)\n    {\n        RubixState.rotate(initialState,Math.floor(Math.random()*6), Math.floor(Math.random()*3 + 1));  \n    }*/\n\n  //  console.log(RubixState.verifyState(initialState));\n    console.log(RubixState.toString(initialState));\n        //return;\n\n    var initialNode = new RubixNode(initialState);\n    \n    \n    depth = initialNode.fn;\n\n    while(!goalNode)\n    {\n        //TODO get Garbage collection to run here...\n        for(var index in this.record)\n        {\n            this.record.pop().parent = null;    \n        }\n        \n        if(RubixState.isEqual(initialState,AStar.goalState))\n        {\n            goalNode = initialState;\n        } \n        else\n        {\n            goalNode = this.iterativeAStarDepthLimted(new RubixNode(initialState),depth);\n        }\n        \n        depth ++;\n        this.frontier = new PriorityMinQueue();\n        console.log(RubixNode.nodePool.length);\n        \n        console.log(\"The depth steadily increased:\" + depth);\n    }\n    \n    console.log(this.pathFromNode(goalNode));\n    sequence =this.pathFromNode(goalNode);\n    \n    return sequence;\n};\n\n/**\n * @brief Performs the IDA* search using a do while loop and Priority min queue. \n * \n * Each iteration of the search checks to see if the current node f(n) is less than\n * the limit imposed by the depth. If this evaluates to true new nodes may be spawned.\n * The spawned nodes are then added to a min priority queue if their f(n) does not exceed the\n * depth. The frontier is then checked if it is empty and if not a new node is \n * pulled from the priority queue. The loop is exited if the priority queue is empty\n * or a goal state is found.\n * \n * @param currentNode The initial node containing the state to find a solution for.\n * @param depth The noninclusive maximum f(n) of a node that may be expanded.\n * \n * @return The goal node if found or null.\n */\nAStar.prototype.iterativeAStarDepthLimted = function(currentNode, depth)\n{      \n    var localNode = currentNode;\n    var isGoal = false;\n    var successors = null;\n\n    do {\n        if(localNode.fn < depth)\n        {\n            successors = RubixNode.getSuccessors(localNode);        \n            \n            for (var index = 0; index< successors.length; index++)\n            {            \n                if(successors[index].fn <= depth)\n                {\n                    this.frontier.insert(successors[index].fn, successors[index]);    \n                }\n                else\n                {\n                    RubixNode.wipeBadChain(successors[index]);   \n                }\n            }\n        }\n        else\n        {\n            RubixNode.wipeBadChain(localNode);\n        }\n        \n        if(!this.frontier.isEmpty())\n        {\n            //this.record.push(localNode);\n            localNode = null;\n            localNode = this.frontier.remove(); \n        }\n        \n        isGoal = RubixState.isEqual(localNode.rubixState, AStar.goalState);\n\n        console.log(\"popped\");\n    }while(!this.frontier.isEmpty() && !isGoal);\n    \n    return isGoal ? localNode : null;  \n};\n\n/**\n * Recursively generates a path from the goal node.\n * \n * @param node The goal node the path is reuired from.\n * @return The string containing the sequence.\n */\nAStar.prototype.pathFromNode = function(node)\n{\n    // If the depth is > 1 recursion must be done.\n    // else if the depth is 1 the action sequence is done.\n    // else the cube was already solved when it reached this search.\n    if (node.depth > 1)\n    {\n        return this.pathFromNode(node.parentNode) + \", \" + RubixNode.nodeActionToString(node);\n    }\n    else if (node.depth === 1) \n    {\n        return RubixNode.nodeActionToString(node);\n    }\n    else\n    {\n        return \"It was already solved!\";\n    }\n};\n"]],"start1":0,"start2":0,"length1":0,"length2":4499}]],"length":4499,"saved":false}
{"contributors":[],"silentsave":false,"ts":1351024015148,"patch":[[{"diffs":[[0,"log("],[-1,"this.pathFromNode(goalNode));\n    sequence =this.pathFromNode(goalNode);\n    \n    return sequence;\n};\n\n/**\n * @brief Performs the IDA* search using a do while loop and Priority min queue. \n * \n * Each iteration of the search checks to see if the current node f(n) is less than\n * the limit imposed by the depth. If this evaluates to true new nodes may be spawned.\n * The spawned nodes are then added to a min priority queue if their f(n) does not exceed the\n * depth. The frontier is then checked if it is empty and if not a new node is \n * pulled from the priority queue. The loop is exited if the priority queue is empty\n * or a goal state is found.\n * \n * @param currentNode The initial node containing the state to find a solution for.\n * @param depth The noninclusive maximum f(n) of a node that may be expanded.\n * \n * @return The goal node if found or null.\n */\nAStar.prototype.iterativeAStarDepthLimted = function(currentNode, depth)\n{      \n    var localNode = currentNode;\n    var isGoal = false;\n    var successors = null;\n\n    do {\n        if(localNode.fn < depth)\n        {\n            successors = RubixNode.getSuccessors(localNode);        \n            \n            for (var index = 0; index< successors.length; index++)\n            {            \n                if(successors[index].fn <= depth)\n                {\n                    this.frontier.insert(successors[index].fn, successors[index]);    \n                }\n                else\n                {\n                    RubixNode.wipeBadChain(successors[index]);   \n                }\n            }\n        }\n        else\n        {\n            RubixNode.wipeBadChain(localNode);\n        }\n        \n        if(!this.frontier.isEmpty())\n        {\n            //this.record.push(localNode);\n            localNode = null;\n            localNode = this.frontier.remove(); \n        }\n        \n        isGoal = RubixState.isEqual(localNode.rubixState, AStar.goalState);\n\n        console.log(\"popped\");\n    }while(!this.frontier.isEmpty() && !isGoal);\n    \n    return isGoal ? localNode : null;  \n};\n\n/**\n * Recursively generates a path from the goal node.\n * \n * @param node The goal node the path is reuired from.\n * @return The string containing the sequence.\n */\nAStar.prototype.pathFromNode = function(node)\n{\n    // If the depth is > 1 recursion must be done.\n    // else if the depth is 1 the action sequence is done.\n    // else the cube was already solved when it reached this search.\n    if (node.depth > 1)\n    {\n        return this.pathFromNode(node.parentNode) + \", \" + RubixNode.nodeActionToString(node);\n    }\n    else if (node.depth === 1) \n    {\n        return RubixNode.nodeActionToString(node);\n    }\n    else\n    {\n        return \"It was already solved!\";\n    }\n};\n/* ---------------\n    iterativeAStar.js    \n    Requires - priorityQueue.js, rubixNode.js, rubixState.js\n    A script for running the IDA* algorithm described in korf's paper.\n   ----------------*/\nAStar.goalState = RubixState.createWithGoalState();\n\nfunction AStar()\n{\n    this.frontier = new PriorityMinQueue();\n}\n\n/**\n * Runs IDA* on a RubixState object supplied by the user.\n * \n * @param initialState A valid RubixState to find a solution to.\n * @return A string containing the necessary sequence of moves to achieve a goal state.\n */\nAStar.prototype.iterativeAStar = function(initialState)\n{\n    if(!initialState)\n        return \"Bad Cube\";\n    var sequence =\"\";\n    var depth = 0;\n    var goalNode = null;\n    /*\n    for (var i = 0; i < 6; i ++)\n    {\n        RubixState.rotate(initialState,Math.floor(Math.random()*6), Math.floor(Math.random()*3 + 1));  \n    }*/\n\n    console.log(RubixState.verifyState(initialState));\n    console.log(RubixState.toString(initialState));\n        //return;\n\n    var initialNode = new RubixNode(initialState);\n    \n    \n    depth = initialNode.fn;\n\n    while(!goalNode)\n    {\n        //TODO get Garbage collection to run here...\n        for(var index in this.record)\n        {\n            this.record.pop().parent = null;    \n        }\n        \n        if(RubixState.isEqual(initialState,AStar.goalState))\n        {\n            goalNode = initialState;\n        } \n        else\n        {\n            goalNode = this.iterativeAStarDepthLimted(new RubixNode(initialState),depth);\n        }\n        \n        depth ++;\n        this.frontier = new PriorityMinQueue();\n        console.log(RubixNode.nodePool.length);\n        \n        console.log(\"The depth steadily increased:\" + depth);\n    }\n    \n    console.log("],[1,"goalNode.fn,"],[0,"this"]],"start1":1746,"start2":1746,"length1":4505,"length2":20}]],"length":4511,"saved":false}
{"contributors":[],"silentsave":false,"ts":1351024060284,"patch":[[{"diffs":[[0,"ol.length);\n"],[1,"        return;\n"],[0,"        \n   "]],"start1":1640,"start2":1640,"length1":24,"length2":40}]],"length":4527,"saved":false}
{"ts":1351024090914,"patch":[[{"diffs":[[0,"      }\n        "],[1,"console.log(localNode.fn);"],[0,"\n        if(!thi"]],"start1":3432,"start2":3432,"length1":32,"length2":58}]],"length":4553,"saved":false}
{"ts":1351024123780,"patch":[[{"diffs":[[0,"               {"],[1,"        console.log(localNode.fn,successors[index].fn);\n"],[0,"\n               "]],"start1":3235,"start2":3235,"length1":32,"length2":88}]],"length":4609,"saved":false}
{"ts":1351024351469,"patch":[[{"diffs":[[0,"o {\n"],[-1,"        if(localNode.fn < depth)\n        {\n    "],[0,"    "]],"start1":2818,"start2":2818,"length1":55,"length2":8},{"diffs":[[0,"        "],[-1,"    \n  "],[1,"\n"],[0,"        "],[-1,"  "],[0,"for (var"]],"start1":2887,"start2":2887,"length1":33,"length2":25},{"diffs":[[0,"ndex++)\n        "],[-1,"    "],[0,"{            \n  "]],"start1":2951,"start2":2951,"length1":36,"length2":32},{"diffs":[[0,"           \n"],[-1,"    "],[0,"            "]],"start1":2969,"start2":2969,"length1":28,"length2":24},{"diffs":[[0,"            "],[-1,"    {\n    "],[1,"{\n"],[0,"            "]],"start1":3027,"start2":3027,"length1":34,"length2":26},{"diffs":[[0,"            "],[-1,"   "],[-1," "],[0,"}\n"],[-1,"    "],[0,"            "]],"start1":3124,"start2":3124,"length1":34,"length2":26},{"diffs":[[0,"       else\n"],[-1,"    "],[0,"            "]],"start1":3143,"start2":3143,"length1":28,"length2":24},{"diffs":[[0,"x].fn);\n"],[-1,"\n"],[0,"        "]],"start1":3216,"start2":3216,"length1":17,"length2":16},{"diffs":[[0,"x]);   \n        "],[1,"    }\n"],[0,"        }\n      "]],"start1":3282,"start2":3282,"length1":32,"length2":38},{"diffs":[[0,"  }\n        "],[-1,"    }\n        }"],[0,"\n        els"]],"start1":3310,"start2":3310,"length1":39,"length2":24}]],"length":4516,"saved":false}
{"ts":1351024372744,"patch":[[{"diffs":[[0,"       \n        "],[-1,"else"],[1,"if(localNode.fn == depth)"],[0,"\n        {\n     "]],"start1":3315,"start2":3315,"length1":36,"length2":57}]],"length":4537,"saved":false}
{"ts":1351024375254,"patch":[[{"diffs":[[0,"ode);\n        }\n"],[1,"        \n"],[0,"        console."]],"start1":3408,"start2":3408,"length1":32,"length2":41}]],"length":4546,"saved":false}
{"ts":1351024393934,"patch":[[{"diffs":[[0,"   \n"],[-1,"        console.log(localNode.fn);\n"],[0,"    "]],"start1":3429,"start2":3429,"length1":43,"length2":8}]],"length":4511,"saved":false}
{"ts":1351024406397,"patch":[[{"diffs":[[0,"    {       "],[1,"//"],[0," console.log"]],"start1":3163,"start2":3163,"length1":24,"length2":26}]],"length":4513,"saved":false}
{"ts":1351024426353,"patch":[[{"diffs":[[0,"{       "],[-1,"//"],[0," console"]],"start1":3167,"start2":3167,"length1":18,"length2":16}]],"length":4511,"saved":false}
{"ts":1351024431960,"patch":[[{"diffs":[[0,"log("],[-1,"localNode.fn,"],[0,"succ"]],"start1":3184,"start2":3184,"length1":21,"length2":8}]],"length":4498,"saved":false}
{"ts":1351024453481,"patch":[[{"diffs":[[0,"ndex].fn"],[1," <=depth"],[0,");\n     "]],"start1":3200,"start2":3200,"length1":16,"length2":24}]],"length":4506,"saved":false}
{"ts":1351024458639,"patch":[[{"diffs":[[0,"ndex].fn"],[1,","],[0," "],[-1,"<="],[0,"depth);\n"]],"start1":3200,"start2":3200,"length1":19,"length2":18}]],"length":4505,"saved":false}
{"ts":1351024475790,"patch":[[{"diffs":[[0,"    "],[-1," console.log(successors[index].fn, depth);"],[0,"\n   "]],"start1":3171,"start2":3171,"length1":50,"length2":8}]],"length":4463,"saved":false}
{"ts":1351024506105,"patch":[[{"diffs":[[0,"   do {\n"],[1,"        if(localNode.fn < depth)\n        {\n    "],[0,"        "]],"start1":2814,"start2":2814,"length1":16,"length2":63},{"diffs":[[0,"       \n        "],[1,"  "],[-1,"\n"],[1,"  \n    "],[0,"        for (var"]],"start1":2926,"start2":2926,"length1":33,"length2":41},{"diffs":[[0,"ndex++)\n        "],[1," "],[1,"   "],[0,"{            \n  "]],"start1":3006,"start2":3006,"length1":32,"length2":36},{"diffs":[[0,"  {            \n"],[1,"    "],[0,"            if(s"]],"start1":3024,"start2":3024,"length1":32,"length2":36},{"diffs":[[0,"th)\n            "],[-1,"{\n"],[1,"    {\n   "],[0,"                "]],"start1":3086,"start2":3086,"length1":34,"length2":41},{"diffs":[[0,"                "],[1," "],[0,"this.frontier.in"]],"start1":3111,"start2":3111,"length1":32,"length2":33},{"diffs":[[0,"   \n            "],[-1,"}\n"],[1,"    }\n    "],[0,"            else"]],"start1":3191,"start2":3191,"length1":34,"length2":42},{"diffs":[[0,"        "],[-1,"{"],[1,"    { "],[0,"       "],[1,"console.log(localNode.fn);\n"],[0,"\n       "]],"start1":3238,"start2":3238,"length1":24,"length2":56},{"diffs":[[0,"index]);   \n"],[1,"                }\n"],[0,"            "]],"start1":3341,"start2":3341,"length1":24,"length2":42},{"diffs":[[0,"    "],[-1,"\n        if(localNode.fn == depth)"],[1,"else"],[0,"\n   "]],"start1":3399,"start2":3399,"length1":42,"length2":12},{"diffs":[[0,";\n        }\n"],[-1,""],[0,"        "],[1,"console.log(localNode.fn);"],[0,"\n        if("]],"start1":3463,"start2":3463,"length1":32,"length2":58}]],"length":4588,"saved":false}
{"ts":1351024510835,"patch":[[{"diffs":[[0,"de.fn);\n"],[-1,"\n"],[0,"        "]],"start1":3278,"start2":3278,"length1":17,"length2":16}]],"length":4587,"saved":false}
{"ts":1351024515787,"patch":[[{"diffs":[[0,"       {        "],[1,"\n                    "],[0,"console.log(loca"]],"start1":3243,"start2":3243,"length1":32,"length2":53}]],"length":4608,"saved":false}
{"ts":1351024536299,"patch":[[{"diffs":[[0,"  {            \n"],[1,"                console.log(localNode.fn, successors.fn);\n\n"],[0,"                "]],"start1":3024,"start2":3024,"length1":32,"length2":91},{"diffs":[[0,"   \n"],[-1,"                    console.log(localNode.fn);\n"],[0,"    "]],"start1":3315,"start2":3315,"length1":55,"length2":8}]],"length":4620,"saved":false}
{"ts":1351024553758,"patch":[[{"diffs":[[0,"        "],[-1,"return;"],[1,"if(depth == 6)\n        {\n            return;\n        }"],[0,"\n       "]],"start1":1652,"start2":1652,"length1":23,"length2":70}]],"length":4667,"saved":false}
{"ts":1351024592497,"patch":[[{"diffs":[[0,"ssors[index]"],[1,".fn"],[0,");    \n     "]],"start1":3282,"start2":3282,"length1":24,"length2":27}]],"length":4670,"saved":false}
{"ts":1351024595975,"patch":[[{"diffs":[[0,"s[index]"],[-1,".fn"],[0,");    \n "]],"start1":3286,"start2":3286,"length1":19,"length2":16}]],"length":4667,"saved":false}
{"ts":1351024601459,"patch":[[{"diffs":[[0,"ccessors"],[1,"[index"],[0,".fn);\n\n "]],"start1":3131,"start2":3131,"length1":16,"length2":22}]],"length":4673,"saved":false}
{"ts":1351024604188,"patch":[[{"diffs":[[0,"  }\n"],[-1,"        console.log(localNode.fn);\n"],[0,"    "]],"start1":3556,"start2":3556,"length1":43,"length2":8}]],"length":4638,"saved":false}
{"ts":1351024615347,"patch":[[{"diffs":[[0,"rs[index"],[1,"]"],[0,".fn);\n\n "]],"start1":3137,"start2":3137,"length1":16,"length2":17}]],"length":4639,"saved":false}
{"ts":1351024713230,"patch":[[{"diffs":[[0,"    "],[-1,"\n                console.log(localNode.fn, successors[index].fn);"],[0,"\n\n  "]],"start1":3082,"start2":3082,"length1":73,"length2":8}]],"length":4574,"saved":false}
{"ts":1351025000290,"patch":[[{"diffs":[[0,"    "],[-1,"if(depth == 6)\n        {\n            return;\n        }"],[0,"\n   "]],"start1":1656,"start2":1656,"length1":62,"length2":8}]],"length":4520,"saved":false}
{"ts":1351025019502,"patch":[[{"diffs":[[0,"ueue();\n"],[1,"        \n"],[0,"        "]],"start1":1596,"start2":1596,"length1":16,"length2":25}]],"length":4529,"saved":false}
{"ts":1351025214395,"patch":[[{"diffs":[[0,"tate);\n\n        "],[1,"//"],[0,"console.log(\"pop"]],"start1":3708,"start2":3708,"length1":32,"length2":34}]],"length":4531,"saved":false}
{"ts":1351026489600,"patch":[[{"diffs":[[0,"        "],[-1,"//"],[0,"console."]],"start1":3716,"start2":3716,"length1":18,"length2":16}]],"length":4529,"saved":false}
{"contributors":[],"silentsave":false,"ts":1351027962778,"patch":[[{"diffs":[[0,"ll;\n    "],[-1,"/*"],[0,"\n    for"]],"start1":710,"start2":710,"length1":18,"length2":16},{"diffs":[[0,"  \n    }"],[-1,"*/"],[0,"\n\n  //  "]],"start1":859,"start2":859,"length1":18,"length2":16}]],"length":4525,"saved":false}
{"ts":1351027984903,"patch":[[{"diffs":[[0,"= null;\n    "],[1,"/*"],[0,"\n    for (va"]],"start1":706,"start2":706,"length1":24,"length2":26},{"diffs":[[0,"  \n    }"],[1,"*/"],[0,"\n\n  //  "]],"start1":861,"start2":861,"length1":16,"length2":18}]],"length":4529,"saved":false}
{"ts":1351027996879,"patch":[[{"diffs":[[0,"    }*/\n"],[1," RubixState.rotate(initialState,0,1);\n  RubixState.rotate(initialState,4,1);"],[0,"\n  //  c"]],"start1":864,"start2":864,"length1":16,"length2":92}]],"length":4605,"saved":false}
{"ts":1351029201330,"patch":[[{"diffs":[[0,"        "],[-1,"    \n"],[0,"\n       "]],"start1":3105,"start2":3105,"length1":21,"length2":16}]],"length":4600,"saved":false}
{"ts":1351029217951,"patch":[[{"diffs":[[0,"State);\n\n       "],[1,"//"],[0," console.log(\"po"]],"start1":3778,"start2":3778,"length1":32,"length2":34}]],"length":4602,"saved":false}
{"ts":1351029277700,"patch":[[{"diffs":[[0,"    }*/\n"],[1,"//"],[0," RubixSt"]],"start1":864,"start2":864,"length1":16,"length2":18},{"diffs":[[0,"0,1);\n  "],[1,"//"],[0,"RubixSta"]],"start1":906,"start2":906,"length1":16,"length2":18}]],"length":4606,"saved":false}
{"ts":1351029387716,"patch":[[{"diffs":[[0,"\n\n      "],[-1," //"],[0," console"]],"start1":3789,"start2":3789,"length1":19,"length2":16}]],"length":4603,"saved":false}
{"contributors":[],"silentsave":false,"ts":1351109844625,"patch":[[{"diffs":[[0,"       \n        "],[-1,"\n"],[1,"if(!goalNode)\n    "],[0,"        console."]],"start1":1742,"start2":1742,"length1":33,"length2":50},{"diffs":[[0,"log("],[-1,"goalNode.fn,"],[0,"this"]],"start1":1861,"start2":1861,"length1":20,"length2":8}]],"length":4608,"saved":false}
{"contributors":[],"silentsave":false,"ts":1351115273301,"patch":[[{"diffs":[[0,"ode.fn;\n"],[1,"    "],[0,"\n    whi"]],"start1":1162,"start2":1162,"length1":16,"length2":20}]],"length":4612,"saved":false}
{"ts":1351115364404,"patch":[[{"diffs":[[0,"ode.fn;\n    "],[1,"console.log(initialNode.fn);"],[0,"\n    while(!"]],"start1":1162,"start2":1162,"length1":24,"length2":52}]],"length":4640,"saved":false}
{"contributors":[],"silentsave":false,"ts":1351120779476,"patch":[[{"diffs":[[0,"de.fn);\n"],[1,"    return \"\";\n"],[0,"    whil"]],"start1":1195,"start2":1195,"length1":16,"length2":31}]],"length":4655,"saved":false}
{"ts":1351120786850,"patch":[[{"diffs":[[0,"de.fn);\n"],[1,"    \n"],[0,"    retu"]],"start1":1195,"start2":1195,"length1":16,"length2":21}]],"length":4660,"saved":false}
{"ts":1351120788379,"patch":[[{"diffs":[[0,"ode.fn;\n"],[1,"    \n"],[0,"    cons"]],"start1":1162,"start2":1162,"length1":16,"length2":21}]],"length":4665,"saved":false}
{"ts":1351121038109,"patch":[[{"diffs":[[0,");\n    \n    "],[1,"//"],[0,"return \"\";\n "]],"start1":1205,"start2":1205,"length1":24,"length2":26}]],"length":4667,"saved":false}
{"ts":1351123694875,"patch":[[{"diffs":[[0,");\n    \n    "],[-1,"//"],[0,"return \"\";\n "]],"start1":1205,"start2":1205,"length1":26,"length2":24}]],"length":4665,"saved":false}
{"ts":1351128488050,"patch":[[{"diffs":[[0,"ode.fn;\n    \n   "],[1,"/*"],[0," console.log(ini"]],"start1":1162,"start2":1162,"length1":32,"length2":34},{"diffs":[[0,"turn \"\";"],[1,"*/"],[0,"\n    whi"]],"start1":1221,"start2":1221,"length1":16,"length2":18}]],"length":4669,"saved":false}
{"ts":1351137451580,"patch":[[{"diffs":[[0,"   \n"],[-1,"        console.log(RubixNode.nodePool.length);\n"],[0,"    "]],"start1":1750,"start2":1750,"length1":56,"length2":8}]],"length":4621,"saved":false}
{"ts":1351137465502,"patch":[[{"diffs":[[0,"ueue();\n        "],[-1,"\n"],[0,"        \n       "]],"start1":1737,"start2":1737,"length1":33,"length2":32}]],"length":4620,"saved":false}
{"ts":1351137467973,"patch":[[{"diffs":[[0,"();\n        "],[-1,"        "],[0,"\n        if("]],"start1":1741,"start2":1741,"length1":32,"length2":24}]],"length":4612,"saved":false}
{"contributors":[],"silentsave":false,"ts":1351137552282,"patch":[[{"diffs":[[0,"}*/\n"],[-1,"// RubixState.rotate(initialState,0,1);\n  //RubixState.rotate(initialState,4,1);\n  //  console.log(RubixState.verifyState(initialState));"],[1,"    "],[0,"\n   "]],"start1":868,"start2":868,"length1":145,"length2":12}]],"length":4479,"saved":false}
{"ts":1351137559215,"patch":[[{"diffs":[[0,"e));"],[-1,"\n        //return;"],[0,"\n\n  "]],"start1":924,"start2":924,"length1":26,"length2":8}]],"length":4461,"saved":false}
{"ts":1351137562274,"patch":[[{"diffs":[[0,"   \n"],[-1,"   /* console.log(initialNode.fn);\n    \n"],[0,"    "]],"start1":1020,"start2":1020,"length1":48,"length2":8}]],"length":4421,"saved":false}
{"ts":1351137568772,"patch":[[{"diffs":[[0,"   \n"],[-1,"    return \"\";*/\n"],[0,"    "]],"start1":1020,"start2":1020,"length1":25,"length2":8}]],"length":4404,"saved":false}
{"ts":1351137700929,"patch":[[{"diffs":[[0,"\" + depth);\n"],[1,"            \n            alert(\"trial\");\n"],[0,"    }\n    \n "]],"start1":1622,"start2":1622,"length1":24,"length2":65}]],"length":4445,"saved":false}
{"ts":1351137716044,"patch":[[{"diffs":[[0,"(!goalNode)\n"],[1,"        {\n"],[0,"            "]],"start1":1556,"start2":1556,"length1":24,"length2":34},{"diffs":[[0,"depth);\n        "],[-1,"    "],[1,"}"],[0,"\n            ale"]],"start1":1636,"start2":1636,"length1":36,"length2":33},{"diffs":[[0,"    "],[-1,"alert(\"trial\");"],[0,"\n   "]],"start1":1662,"start2":1662,"length1":23,"length2":8}]],"length":4437,"saved":false}
{"ts":1351137721643,"patch":[[{"diffs":[[0,"Node)\n        {\n"],[1,"            alert(\"The depth steadily increased:\" + depth);\n"],[0,"            cons"]],"start1":1562,"start2":1562,"length1":32,"length2":92}]],"length":4497,"saved":false}
{"ts":1351137880883,"patch":[[{"diffs":[[0,"  {\n"],[-1,"            alert(\"The depth steadily increased:\" + depth);\n"],[0,"    "]],"start1":1574,"start2":1574,"length1":68,"length2":8}]],"length":4437,"saved":false}
{"ts":1351138036182,"patch":[[{"diffs":[[0,"lNode)\n        {"],[1,"    \n            $(\"#outputDiv\").text((new AStar()).iterativeAStar(state));\n"],[0,"\n            con"]],"start1":1561,"start2":1561,"length1":32,"length2":108}]],"length":4513,"saved":false}
{"ts":1351138048337,"patch":[[{"diffs":[[0,"ext("],[-1,"(new AStar()).iterativeAStar(state)"],[1,"\"The depth steadily increased:\" + depth"],[0,");\n\n"]],"start1":1611,"start2":1611,"length1":43,"length2":47}]],"length":4517,"saved":false}
{"ts":1351138889283,"patch":[[{"diffs":[[0,"s = null"],[1,", size = 0, index = 0"],[0,";\n\n    d"]],"start1":2798,"start2":2798,"length1":16,"length2":37}]],"length":4538,"saved":false}
{"ts":1351138893058,"patch":[[{"diffs":[[0,"   for ("],[-1,"var "],[0,"index = "]],"start1":2973,"start2":2973,"length1":20,"length2":16}]],"length":4534,"saved":false}
{"ts":1351138902153,"patch":[[{"diffs":[[0,"ndex = 0"],[1,", size = successors.length"],[0,"; index<"]],"start1":2982,"start2":2982,"length1":16,"length2":42}]],"length":4560,"saved":false}
{"ts":1351138926046,"patch":[[{"diffs":[[0,"ndex = 0"],[1,", empty = false"],[0,";\n\n    d"]],"start1":2819,"start2":2819,"length1":16,"length2":31},{"diffs":[[0,"ode);\n        }\n"],[1,"        \n        \n"],[0,"        if(!this"]],"start1":3482,"start2":3482,"length1":32,"length2":50}]],"length":4593,"saved":false}
{"ts":1351139023567,"patch":[[{"diffs":[[0," = 0"],[-1,", empty = false"],[0,";\n\n "]],"start1":2823,"start2":2823,"length1":23,"length2":8}]],"length":4578,"saved":false}
{"ts":1351139216012,"patch":[[{"diffs":[[0,"quence;\n};\n\n"],[1,"AStar.prototype.iterativeAStarCallBack = function()\n{\n    \n}\n"],[0,"/**\n * @brie"]],"start1":1865,"start2":1865,"length1":24,"length2":85}]],"length":4639,"saved":false}
{"ts":1351139252676,"patch":[[{"diffs":[[0,"ueue();\n"],[1,"    this.initialNode = null;\n"],[0,"}\n\n/**\n "]],"start1":307,"start2":307,"length1":16,"length2":45}]],"length":4668,"saved":false}
{"ts":1351139281613,"patch":[[{"diffs":[[0," = null;"],[1,"'\n    this.depth = 0;"],[0,"\n}\n\n/**\n"]],"start1":335,"start2":335,"length1":16,"length2":37}]],"length":4689,"saved":false}
{"ts":1351139286179,"patch":[[{"diffs":[[0," = null;"],[-1,"'"],[0,"\n    thi"]],"start1":335,"start2":335,"length1":17,"length2":16}]],"length":4688,"saved":false}
{"ts":1351139293537,"patch":[[{"diffs":[[0," Cube\";\n"],[1,"        \n"],[0,"    var "]],"start1":689,"start2":689,"length1":16,"length2":25}]],"length":4697,"saved":false}
{"ts":1351139297408,"patch":[[{"diffs":[[0,"ll;\n"],[-1,"    /*\n    for (var i = 0; i < 6; i ++)\n    {\n        RubixState.rotate(initialState,Math.floor(Math.random()*6), Math.floor(Math.random()*3 + 1));  \n    }*/\n"],[0,"    "]],"start1":768,"start2":768,"length1":166,"length2":8}]],"length":4539,"saved":false}
{"ts":1351139303875,"patch":[[{"diffs":[[0,");\n\n    "],[-1,"var "],[1,"this."],[0,"initialN"]],"start1":826,"start2":826,"length1":20,"length2":21}]],"length":4540,"saved":false}
{"ts":1351139308494,"patch":[[{"diffs":[[0,"  \n    \n    "],[1,"this."],[0,"depth = init"]],"start1":884,"start2":884,"length1":24,"length2":29}]],"length":4545,"saved":false}
{"ts":1351139313602,"patch":[[{"diffs":[[0,"depth = "],[1,"this."],[0,"initialN"]],"start1":901,"start2":901,"length1":16,"length2":21}]],"length":4550,"saved":false}
{"ts":1351139333969,"patch":[[{"diffs":[[0,"de.fn;\n    \n"],[1,"    window.setTimeout\n    \n"],[0,"    while(!g"]],"start1":923,"start2":923,"length1":24,"length2":51}]],"length":4577,"saved":false}
{"ts":1351139359979,"patch":[[{"diffs":[[0,"tTimeout"],[1,"("],[0,"\n    \n  "]],"start1":948,"start2":948,"length1":16,"length2":17},{"diffs":[[0,"StarCall"],[-1,"B"],[1,"b"],[0,"ack = fu"]],"start1":1842,"start2":1842,"length1":17,"length2":17}]],"length":4578,"saved":false}
{"ts":1351139367833,"patch":[[{"diffs":[[0,"Timeout("],[1,"iterativeAStarCallback,1000);"],[0,"\n    \n  "]],"start1":949,"start2":949,"length1":16,"length2":45}]],"length":4607,"saved":false}
{"ts":1351139376326,"patch":[[{"diffs":[[0,"Timeout("],[1,"this."],[0,"iterativ"]],"start1":949,"start2":949,"length1":16,"length2":21}]],"length":4612,"saved":false}
{"ts":1351139379977,"patch":[[{"diffs":[[0,"{\n    \n}"],[1,";"],[0,"\n/**\n * "]],"start1":1902,"start2":1902,"length1":16,"length2":17}]],"length":4613,"saved":false}
{"ts":1351139380867,"patch":[[{"diffs":[[0,"    \n};\n"],[1,"\n"],[0,"/**\n * @"]],"start1":1904,"start2":1904,"length1":16,"length2":17}]],"length":4614,"saved":false}
{"ts":1351139406049,"patch":[[{"diffs":[[0,"le(!goalNode"],[1," && this.depth < 6"],[0,")\n    {\n    "]],"start1":1004,"start2":1004,"length1":24,"length2":42}]],"length":4632,"saved":false}
{"ts":1351139429261,"patch":[[{"diffs":[[0,"  {\n"],[-1,"        //TODO get Garbage collection to run here...\n        for(var index in this.record)\n        {\n            this.record.pop().parent = null;    \n        }\n"],[0,"    "]],"start1":1038,"start2":1038,"length1":168,"length2":8}]],"length":4472,"saved":false}
{"ts":1351139448694,"patch":[[{"diffs":[[0,"    "],[-1,"\n    while(!goalNode && this.depth < 6)\n    {\n        \n        "],[0,"if(R"]],"start1":992,"start2":992,"length1":71,"length2":8},{"diffs":[[0,"State))\n"],[-1,"    "],[0,"    {\n  "]],"start1":1041,"start2":1041,"length1":20,"length2":16},{"diffs":[[0,"))\n    {\n       "],[-1,"     "],[0,"goalNode = initi"]],"start1":1046,"start2":1046,"length1":37,"length2":32},{"diffs":[[0,"te;\n    "],[1,"} \n"],[0,"    "],[-1,"}"],[1,"\n    while(!goalNode && this.depth < 6)\n    {\n        \n   "],[0," \n      "]],"start1":1083,"start2":1083,"length1":21,"length2":81}]],"length":4460,"saved":false}
{"ts":1351139450366,"patch":[[{"diffs":[[0,",1000);\n"],[1,"    \n"],[0,"    if(R"]],"start1":984,"start2":984,"length1":16,"length2":21}]],"length":4465,"saved":false}
{"ts":1351139456706,"patch":[[{"diffs":[[0,"    "],[-1,"\n    \n        else\n        {\n            "],[0,"goal"]],"start1":1153,"start2":1153,"length1":49,"length2":8},{"diffs":[[0,"depth);\n        "],[-1,"}"],[0,"\n        \n      "]],"start1":1227,"start2":1227,"length1":33,"length2":32}]],"length":4423,"saved":false}
{"ts":1351139457758,"patch":[[{"diffs":[[0,"depth);\n        "],[-1,"\n"],[0,"        \n       "]],"start1":1227,"start2":1227,"length1":33,"length2":32}]],"length":4422,"saved":false}
{"ts":1351139459133,"patch":[[{"diffs":[[0,"pth ++;\n"],[1,"        \n"],[0,"        "]],"start1":1262,"start2":1262,"length1":16,"length2":25}]],"length":4431,"saved":false}
{"ts":1351139487526,"patch":[[{"diffs":[[0,"   \n"],[-1,"    window.setTimeout(this.iterativeAStarCallback,1000);\n"],[0,"    "]],"start1":931,"start2":931,"length1":65,"length2":8},{"diffs":[[0,"     \n    }\n"],[1,"    if(this.depth >= 6)\n    {\n            window.setTimeout(this.iterativeAStarCallback,1000);\n    \n    }\n"],[0,"    \n    con"]],"start1":1474,"start2":1474,"length1":24,"length2":130}]],"length":4480,"saved":false}
{"ts":1351139489775,"patch":[[{"diffs":[[0,"        "],[-1,"    "],[0,"window.s"]],"start1":1516,"start2":1516,"length1":20,"length2":16}]],"length":4476,"saved":false}
{"ts":1351139490954,"patch":[[{"diffs":[[0,"     \n    }\n"],[1,"    \n"],[0,"    if(this."]],"start1":1474,"start2":1474,"length1":24,"length2":29}]],"length":4481,"saved":false}
{"ts":1351139503585,"patch":[[{"diffs":[[0,")\n{\n    "],[1,"console.log(\"bam\""],[0,"\n};\n\n/**"]],"start1":1767,"start2":1767,"length1":16,"length2":33}]],"length":4498,"saved":false}
{"ts":1351139504919,"patch":[[{"diffs":[[0,"og(\"bam\""],[1,";"],[0,"\n};\n\n/**"]],"start1":1784,"start2":1784,"length1":16,"length2":17}]],"length":4499,"saved":false}
{"ts":1351139507960,"patch":[[{"diffs":[[0,"log("],[1,"("],[0,"\"bam\""],[1,")"],[0,";\n};"]],"start1":1783,"start2":1783,"length1":13,"length2":15}]],"length":4501,"saved":false}
{"ts":1351139509935,"patch":[[{"diffs":[[0,"ole.log("],[-1,"("],[0,"\"bam\");\n"]],"start1":1779,"start2":1779,"length1":17,"length2":16}]],"length":4500,"saved":false}
{"ts":1351139554412,"patch":[[{"diffs":[[0," + depth"],[1,", this.depth < 6"],[0,");\n\n    "]],"start1":1379,"start2":1379,"length1":16,"length2":32}]],"length":4516,"saved":false}
{"ts":1351139592730,"patch":[[{"diffs":[[0,"\n    } \n    "],[1,"console.log(this.depth < 6);"],[0,"\n    while(!"]],"start1":1034,"start2":1034,"length1":24,"length2":52},{"diffs":[[0,"Node && "],[-1,"this.depth < 6"],[0,")\n    {\n"]],"start1":1090,"start2":1090,"length1":30,"length2":16}]],"length":4530,"saved":false}
{"ts":1351139594558,"patch":[[{"diffs":[[0,"Node && "],[1,"this.depth < 6"],[0,")\n    {\n"]],"start1":1090,"start2":1090,"length1":16,"length2":30}]],"length":4544,"saved":false}
{"ts":1351139634798,"patch":[[{"diffs":[[0," depth, "],[1,"("],[0,"this.dep"]],"start1":1409,"start2":1409,"length1":16,"length2":17},{"diffs":[[0,"pth < 6)"],[1,")"],[0,";\n\n     "]],"start1":1425,"start2":1425,"length1":16,"length2":17}]],"length":4546,"saved":false}
{"ts":1351139663998,"patch":[[{"diffs":[[0,"Node && "],[1,"("],[0,"this.dep"]],"start1":1090,"start2":1090,"length1":16,"length2":17},{"diffs":[[0,"depth < "],[-1,"6"],[1,"7)"],[0,")\n    {\n"]],"start1":1104,"start2":1104,"length1":17,"length2":18}]],"length":4548,"saved":false}
{"ts":1351139702066,"patch":[[{"diffs":[[0,"\"bam\");\n"],[1,"    window.setTimeout(this.iterativeAStarCallback,1000);\n"],[0,"};\n\n/**\n"]],"start1":1835,"start2":1835,"length1":16,"length2":73}]],"length":4605,"saved":false}
{"ts":1351139715098,"patch":[[{"diffs":[[0,"< 6);\n  "],[1,"/*"],[0,"  while("]],"start1":1069,"start2":1069,"length1":16,"length2":18},{"diffs":[[0,"          \n    }"],[1,"*/"],[0,"\n    \n    if(thi"]],"start1":1519,"start2":1519,"length1":32,"length2":34}]],"length":4609,"saved":false}
{"ts":1351139719769,"patch":[[{"diffs":[[0,"\n    }*/"],[1,"window.setTimeout(this.iterativeAStarCallback,1000);"],[0,"\n    \n  "]],"start1":1529,"start2":1529,"length1":16,"length2":68}]],"length":4661,"saved":false}
{"ts":1351139773251,"patch":[[{"diffs":[[0,"\");\n"],[-1,"    window.setTimeout(this.iterativeAStarCallback,1000);\n"],[0,"};\n\n"]],"start1":1895,"start2":1895,"length1":65,"length2":8}]],"length":4604,"saved":false}
{"ts":1351139801388,"patch":[[{"diffs":[[0,"\"bam\");\n"],[1,"    window.setTimeout(this.iterativeAStarCallback,1000);\n"],[0,"};\n\n/**\n"]],"start1":1891,"start2":1891,"length1":16,"length2":73}]],"length":4661,"saved":false}
{"ts":1351139806155,"patch":[[{"diffs":[[0,"  \n    }\n    \n  "],[1,"/*"],[0,"  console.log(th"]],"start1":1688,"start2":1688,"length1":32,"length2":34},{"diffs":[[0,"e(goalNode);"],[1,"*/"],[0,"\n    \n    re"]],"start1":1780,"start2":1780,"length1":24,"length2":26}]],"length":4665,"saved":false}
{"ts":1351139831695,"patch":[[{"diffs":[[0,"ndow.setTimeout("],[-1,"this."],[0,"iterativeAStarCa"]],"start1":1909,"start2":1909,"length1":37,"length2":32}]],"length":4660,"saved":false}
{"ts":1351139848375,"patch":[[{"diffs":[[0,"Timeout("],[1,"this"],[0,"iterativ"]],"start1":1917,"start2":1917,"length1":16,"length2":20}]],"length":4664,"saved":false}
{"ts":1351139849273,"patch":[[{"diffs":[[0,"out(this"],[1,"."],[0,"iterativ"]],"start1":1921,"start2":1921,"length1":16,"length2":17}]],"length":4665,"saved":false}
{"ts":1351139869296,"patch":[[{"diffs":[[0,"veAStarCallback,"],[-1,"100"],[0,"0);\n    \n    if("]],"start1":1567,"start2":1567,"length1":35,"length2":32}]],"length":4662,"saved":false}
{"ts":1351139871454,"patch":[[{"diffs":[[0,"tarCallback,"],[-1,"100"],[0,"0);\n};\n\n/**\n"]],"start1":1938,"start2":1938,"length1":27,"length2":24}]],"length":4659,"saved":false}
{"ts":1351139902614,"patch":[[{"diffs":[[0,"iveAStar"],[-1,"Callback"],[0,",1000);\n"]],"start1":1659,"start2":1659,"length1":24,"length2":16}]],"length":4651,"saved":false}
{"ts":1351139907446,"patch":[[{"diffs":[[0,"\"\";\n"],[-1,"    var depth = 0;\n"],[0,"    "]],"start1":724,"start2":724,"length1":27,"length2":8}]],"length":4632,"saved":false}
{"ts":1351139913582,"patch":[[{"diffs":[[0,"ull;"],[-1,"\n    \n    console.log(RubixState.toString(initialState));"],[0,"\n\n  "]],"start1":748,"start2":748,"length1":65,"length2":8}]],"length":4575,"saved":false}
{"ts":1351139923455,"patch":[[{"diffs":[[0,"th = 0;\n"],[1,"    this.goalNode\n"],[0,"}\n\n/**\n "]],"start1":356,"start2":356,"length1":16,"length2":34}]],"length":4593,"saved":false}
{"ts":1351139925838,"patch":[[{"diffs":[[0,"goalNode"],[1,";"],[0,"\n}\n\n/**\n"]],"start1":373,"start2":373,"length1":16,"length2":17}]],"length":4594,"saved":false}
{"ts":1351139931747,"patch":[[{"diffs":[[0,"goalNode"],[1," = null"],[0,";\n}\n\n/**"]],"start1":373,"start2":373,"length1":16,"length2":23}]],"length":4601,"saved":false}
{"ts":1351139939417,"patch":[[{"diffs":[[0,"= null;\n"],[1,"    this.sequence = \"\";\n"],[0,"}\n\n/**\n "]],"start1":382,"start2":382,"length1":16,"length2":40}]],"length":4625,"saved":false}
{"ts":1351140000157,"patch":[[{"diffs":[[0,"    "],[-1,"    \n    var sequence =\"\";\n    var goalNode = null;"],[0,"\n\n  "]],"start1":747,"start2":747,"length1":59,"length2":8},{"diffs":[[0,"lState);"],[-1,"\n "],[0,"   \n    "]],"start1":796,"start2":796,"length1":18,"length2":16}]],"length":4572,"saved":false}
{"ts":1351140004781,"patch":[[{"diffs":[[0,"   {\n       "],[1,"this."],[0,"goalNode = i"]],"start1":919,"start2":919,"length1":24,"length2":29}]],"length":4577,"saved":false}
{"ts":1351140010163,"patch":[[{"diffs":[[0,"is.pathFromNode("],[1,"this."],[0,"goalNode));\n    "]],"start1":1637,"start2":1637,"length1":32,"length2":37}]],"length":4582,"saved":false}
{"ts":1351140013943,"patch":[[{"diffs":[[0,"romNode("],[1,"this."],[0,"goalNode"]],"start1":1694,"start2":1694,"length1":16,"length2":21}]],"length":4587,"saved":false}
{"ts":1351140017847,"patch":[[{"diffs":[[0,"        "],[1,"this."],[0,"depth ++"]],"start1":1153,"start2":1153,"length1":16,"length2":21}]],"length":4592,"saved":false}
{"ts":1351140021691,"patch":[[{"diffs":[[0,"        "],[1,"this."],[0,"goalNode"]],"start1":1050,"start2":1050,"length1":16,"length2":21}]],"length":4597,"saved":false}
{"ts":1351140039025,"patch":[[{"diffs":[[0,"ted("],[-1,"new RubixNode("],[1,"this."],[0,"initial"],[-1,"State)"],[1,"Node"],[0,",dep"]],"start1":1101,"start2":1101,"length1":35,"length2":24}]],"length":4586,"saved":false}
{"ts":1351140041625,"patch":[[{"diffs":[[0,"ialNode,"],[1,"this."],[0,"depth);\n"]],"start1":1114,"start2":1114,"length1":16,"length2":21}]],"length":4591,"saved":false}
{"ts":1351140068534,"patch":[[{"diffs":[[0,"sed:\" + "],[-1,"depth"],[1,"this.depth, (this.depth < 6)"],[0,");\n     "]],"start1":1421,"start2":1421,"length1":21,"length2":44}]],"length":4614,"saved":false}
{"ts":1351140073568,"patch":[[{"diffs":[[0,"    if(!"],[1,"this."],[0,"goalNode"]],"start1":1245,"start2":1245,"length1":16,"length2":21},{"diffs":[[0,"    "],[-1,"\n            $(\"#outputDiv\").text(\"The depth steadily increased:\" + depth, (this.depth < 6));"],[0,"\n\n  "]],"start1":1277,"start2":1277,"length1":101,"length2":8}]],"length":4526,"saved":false}
{"ts":1351140080376,"patch":[[{"diffs":[[0,"< 6);\n  "],[-1,"/*"],[0,"  while("]],"start1":995,"start2":995,"length1":18,"length2":16}]],"length":4524,"saved":false}
{"ts":1351140084764,"patch":[[{"diffs":[[0,"  \n    }"],[-1,"*/"],[1,"\n    "],[0,"window.s"]],"start1":1390,"start2":1390,"length1":18,"length2":21}]],"length":4527,"saved":false}
{"ts":1351140100394,"patch":[[{"diffs":[[0," while(!"],[1,"this."],[0,"goalNode"]],"start1":1004,"start2":1004,"length1":16,"length2":21}]],"length":4532,"saved":false}
{"ts":1351140125136,"patch":[[{"diffs":[[0," return "],[1,"this."],[0,"sequence"]],"start1":1673,"start2":1673,"length1":16,"length2":21}]],"length":4537,"saved":false}
{"ts":1351140169268,"patch":[[{"diffs":[[0,"log(\"bam\");\n"],[1,"    \n"],[0,"    window.s"]],"start1":1766,"start2":1766,"length1":24,"length2":29}]],"length":4542,"saved":false}
{"ts":1351140178885,"patch":[[{"diffs":[[0,"Star"],[-1,",100"],[1,"Callback,"],[0,"0);"],[-1,"\n"],[0,"    "]],"start1":1534,"start2":1534,"length1":16,"length2":20}]],"length":4546,"saved":false}
{"ts":1351140181312,"patch":[[{"diffs":[[0,"  }\n"],[-1,"    window.setTimeout(this.iterativeAStarCallback,0);\n    "],[0,"\n   "]],"start1":1400,"start2":1400,"length1":66,"length2":8}]],"length":4488,"saved":false}
{"ts":1351140318073,"patch":[[{"diffs":[[0,"\"bam\");\n    "],[1,"var self = this;'"],[0,"\n    window."]],"start1":1716,"start2":1716,"length1":24,"length2":41}]],"length":4505,"saved":false}
{"ts":1351140318983,"patch":[[{"diffs":[[0," = this;"],[-1,"'"],[0,"\n    win"]],"start1":1736,"start2":1736,"length1":17,"length2":16}]],"length":4504,"saved":false}
{"ts":1351140322370,"patch":[[{"diffs":[[0,"ndow.setTimeout("],[-1,"this"],[1,"self"],[0,".iterativeAStarC"]],"start1":1751,"start2":1751,"length1":36,"length2":36}]],"length":4504,"saved":false}
{"ts":1351140343802,"patch":[[{"diffs":[[0," >= 6)\n    {"],[1,"    \n        var self = this;\n"],[0,"\n        win"]],"start1":1422,"start2":1422,"length1":24,"length2":54}]],"length":4534,"saved":false}
{"ts":1351140349403,"patch":[[{"diffs":[[0,"Timeout("],[-1,"this"],[1,"seklf"],[0,".iterati"]],"start1":1483,"start2":1483,"length1":20,"length2":21}]],"length":4535,"saved":false}
{"ts":1351140350967,"patch":[[{"diffs":[[0,"meout(se"],[-1,"k"],[0,"lf.itera"]],"start1":1485,"start2":1485,"length1":17,"length2":16}]],"length":4534,"saved":false}
{"ts":1351140497583,"patch":[[{"diffs":[[0,"e = \"\";\n"],[1,"    this.intervalptr;\n"],[0,"}\n\n/**\n "]],"start1":406,"start2":406,"length1":16,"length2":38}]],"length":4556,"saved":false}
{"ts":1351140500861,"patch":[[{"diffs":[[0,"ervalptr"],[1," = -1"],[0,";\n}\n\n/**"]],"start1":426,"start2":426,"length1":16,"length2":21}]],"length":4561,"saved":false}
{"ts":1351140508391,"patch":[[{"diffs":[[0,"\n       "],[1," this.intervalptr ="],[0," window."]],"start1":1491,"start2":1491,"length1":16,"length2":35}]],"length":4580,"saved":false}
{"ts":1351140515491,"patch":[[{"diffs":[[0,"ptr = window.set"],[-1,"Timeout"],[1,"Interval"],[0,"(self.iterativeA"]],"start1":1513,"start2":1513,"length1":39,"length2":40}]],"length":4581,"saved":false}
{"ts":1351140523013,"patch":[[{"diffs":[[0,"\");\n"],[-1,"    var self = this;\n    window.setTimeout(self.iterativeAStarCallback,0);\n"],[0,"};\n\n"]],"start1":1797,"start2":1797,"length1":83,"length2":8}]],"length":4506,"saved":false}
{"ts":1351140583687,"patch":[[{"diffs":[[0,"\"bam\");\n"],[1,"    if(this.goalNode)\n    {\n        clearInterval    (this.intervalptr);\n    }\n"],[0,"};\n\n/**\n"]],"start1":1793,"start2":1793,"length1":16,"length2":95}]],"length":4585,"saved":false}
{"ts":1351140588023,"patch":[[{"diffs":[[0,"Interval"],[-1,"    "],[0,"(this.in"]],"start1":1842,"start2":1842,"length1":20,"length2":16}]],"length":4581,"saved":false}
{"ts":1351140593239,"patch":[[{"diffs":[[0,"depth < "],[-1,"6"],[1,"1"],[0,");\n    w"]],"start1":1016,"start2":1016,"length1":17,"length2":17}]],"length":4581,"saved":false}
{"ts":1351140596308,"patch":[[{"diffs":[[0,"h < "],[-1,"7"],[1,"1"],[0,"))\n "]],"start1":1066,"start2":1066,"length1":9,"length2":9}]],"length":4581,"saved":false}
{"ts":1351140603259,"patch":[[{"diffs":[[0,"    "],[-1,"console.log(this.depth < 1);"],[0,"\n   "]],"start1":995,"start2":995,"length1":36,"length2":8}]],"length":4553,"saved":false}
{"ts":1351140612331,"patch":[[{"diffs":[[0,"ode);*/\n    "],[1,"console.log(test);"],[0,"\n    return "]],"start1":1652,"start2":1652,"length1":24,"length2":42}]],"length":4571,"saved":false}
{"ts":1351140620965,"patch":[[{"diffs":[[0,"log(\"bam\");\n"],[1,"    \n     this.goalNode = this.iterativeAStarDepthLimted(this.initialNode,this.depth);\n     \n"],[0,"    if(this."]],"start1":1779,"start2":1779,"length1":24,"length2":117}]],"length":4664,"saved":false}
{"ts":1351140622478,"patch":[[{"diffs":[[0,");\n    \n    "],[-1," "],[0,"this.goalNod"]],"start1":1788,"start2":1788,"length1":25,"length2":24}]],"length":4663,"saved":false}
{"ts":1351140630635,"patch":[[{"diffs":[[0,"e,this.depth"],[-1,");"],[1,"++);\n    "],[0,"\n     \n    i"]],"start1":1862,"start2":1862,"length1":26,"length2":33}]],"length":4670,"saved":false}
{"ts":1351140701359,"patch":[[{"diffs":[[0,"goalNode)\n    {\n"],[1,"            $(\"#outputDiv\").text(this.pathFromNode(this.goalNode));\n\n"],[0,"        clearInt"]],"start1":1902,"start2":1902,"length1":32,"length2":101}]],"length":4739,"saved":false}
{"ts":1351140712027,"patch":[[{"diffs":[[0,"        "],[-1,"    "],[0,"$(\"#outp"]],"start1":1918,"start2":1918,"length1":20,"length2":16},{"diffs":[[0,";\n    }\n"],[1,"    else\n    {\n        \n    }\n"],[0,"};\n\n/**\n"]],"start1":2022,"start2":2022,"length1":16,"length2":46}]],"length":4765,"saved":false}
{"ts":1351140738855,"patch":[[{"diffs":[[0,"  {\n        "],[1,"$(\"#outputDiv\").text(\"Presently exploring depth \" + this.depth + \".\");\n"],[0,"\n    }\n};\n\n/"]],"start1":2041,"start2":2041,"length1":24,"length2":95}]],"length":4836,"saved":false}
{"ts":1351140740377,"patch":[[{"diffs":[[0,"+ \".\");\n"],[-1,"\n"],[0,"    }\n};"]],"start1":2116,"start2":2116,"length1":17,"length2":16}]],"length":4835,"saved":false}
{"ts":1351140748527,"patch":[[{"diffs":[[0,")\n{\n"],[-1,"    console.log(\"bam\");\n"],[0,"    "]],"start1":1763,"start2":1763,"length1":32,"length2":8}]],"length":4811,"saved":false}
{"ts":1351140776267,"patch":[[{"diffs":[[0," if("],[1,"!"],[0,"this."],[-1,"depth >= 6"],[1,"goalNode"],[0,")\n  "]],"start1":1407,"start2":1407,"length1":23,"length2":22}]],"length":4810,"saved":false}
{"ts":1351140784052,"patch":[[{"diffs":[[0,"\n    } \n    "],[1,"/*"],[0,"\n    while(!"]],"start1":987,"start2":987,"length1":24,"length2":26},{"diffs":[[0," \n    }\n"],[1,"*/"],[0,"\n    if("]],"start1":1397,"start2":1397,"length1":16,"length2":18}]],"length":4814,"saved":false}
{"ts":1351140794814,"patch":[[{"diffs":[[0,"alNode);"],[-1,"*/"],[0,"\n    con"]],"start1":1652,"start2":1652,"length1":18,"length2":16},{"diffs":[[0,"equence;"],[1,"*/"],[0,"\n};\n\nASt"]],"start1":1701,"start2":1701,"length1":16,"length2":18}]],"length":4814,"saved":false}
{"ts":1351140848518,"patch":[[{"diffs":[[0,"nterval("],[1,"function(){"],[0,"self.ite"]],"start1":1505,"start2":1505,"length1":16,"length2":27},{"diffs":[[0,"Callback"],[1,"();}"],[0,",0);    "]],"start1":1543,"start2":1543,"length1":16,"length2":20}]],"length":4829,"saved":false}
{"ts":1351140883258,"patch":[[{"diffs":[[0,"ion()\n{\n    "],[1,"console.log(\"exploring depth \" + this.depth);"],[0,"\n    this.go"]],"start1":1777,"start2":1777,"length1":24,"length2":69}]],"length":4874,"saved":false}
{"ts":1351141079405,"patch":[[{"diffs":[[0,"Node.fn;"],[-1,"\n"],[0,"    \n   "]],"start1":869,"start2":869,"length1":17,"length2":16},{"diffs":[[0,"    "],[-1,"/*\n    while(!this.goalNode && (this.depth < 1))\n    {\n        this.goalNode = this.iterativeAStarDepthLimted(this.initialNode,this.depth);\n                \n        this.depth ++;\n        \n        this.frontier = new PriorityMinQueue();\n        \n        if(!this.goalNode)\n        {    \n\n            console.log(\"The depth steadily increased:\" + this.depth, (this.depth < 6));\n        }\n            \n    }\n*/"],[0,"\n   "]],"start1":994,"start2":994,"length1":416,"length2":8},{"diffs":[[0,"  }\n"],[-1,"    \n  /*  console.log(this.pathFromNode(this.goalNode));\n    sequence =this.pathFromNode(this.goalNode);\n    console.log(test);\n    return this.sequence;*/\n"],[0,"};\n\n"]],"start1":1157,"start2":1157,"length1":165,"length2":8}]],"length":4308,"saved":false}
{"ts":1351141083491,"patch":[[{"diffs":[[0,"ack();},"],[1,"10"],[0,"0);    \n"]],"start1":1139,"start2":1139,"length1":16,"length2":18}]],"length":4310,"saved":false}
{"ts":1351141093655,"patch":[[{"diffs":[[0,";    \n    }\n"],[1,"    else{\n        \n    }\n"],[0,"};\n\nAStar.pr"]],"start1":1151,"start2":1151,"length1":24,"length2":49}]],"length":4335,"saved":false}
{"ts":1351141094955,"patch":[[{"diffs":[[0,"    else"],[1,"\n    "],[0,"{\n      "]],"start1":1163,"start2":1163,"length1":16,"length2":21}]],"length":4340,"saved":false}
{"ts":1351141100810,"patch":[[{"diffs":[[0,"  {\n        "],[1,"    "],[0,"\n    }\n};\n\nA"]],"start1":1174,"start2":1174,"length1":24,"length2":28}]],"length":4344,"saved":false}
{"ts":1351141116675,"patch":[[{"diffs":[[0,"            "],[1,"       $(\"#outputDiv\").text(this.pathFromNode(this.goalNode));\n "],[0,"\n    }\n};\n\nA"]],"start1":1178,"start2":1178,"length1":24,"length2":88}]],"length":4408,"saved":false}
{"ts":1351141119416,"patch":[[{"diffs":[[0," else\n    {\n"],[-1,"           "],[0,"        $(\"#"]],"start1":1166,"start2":1166,"length1":35,"length2":24}]],"length":4397,"saved":false}
{"ts":1351141120380,"patch":[[{"diffs":[[0,"lNode));"],[-1,"\n"],[0," \n    }\n"]],"start1":1233,"start2":1233,"length1":17,"length2":16}]],"length":4396,"saved":false}
{"ts":1351141177023,"patch":[[{"diffs":[[0,"();},100"],[1,"0"],[0,");    \n "]],"start1":1142,"start2":1142,"length1":16,"length2":17}]],"length":4397,"saved":false}
{"ts":1351141341766,"patch":[[{"diffs":[[0,"();\n"],[-1,"    this.initialNode = null;\n    this.depth = 0;\n    this.goalNode = null;\n    this.sequence = \"\";\n    this.intervalptr = -1;\n"],[0,"}\n\n/"]],"start1":311,"start2":311,"length1":134,"length2":8},{"diffs":[[0,"    "],[-1,"\n\n    this.initialNode = new RubixNode(initialState);"],[1,"var sequence =\"\";\n    var depth = 0;\n    var goalNode = null;\n    /*\n    for (var i = 0; i < 6; i ++)\n "],[0,"   "],[1,"{"],[0,"\n    "],[-1,"\n"],[0,"    "],[-1,"this.depth = this.initialNode.fn;    \n    \n    if"],[1,"RubixState.rotate(initialState,Math.floor(Math.random()*6), Math.floor(Math.random()*3 + 1));  \n    }*/\n    \n    console.log"],[0,"(Rub"]],"start1":648,"start2":648,"length1":123,"length2":248},{"diffs":[[0,"ixState."],[-1,"isEqual"],[1,"toString"],[0,"(initial"]],"start1":896,"start2":896,"length1":23,"length2":24},{"diffs":[[0,"tate"],[-1,",AStar.goalState))\n    {\n       this.goalNode = "],[1,"));\n\n    var initialNode = new RubixNode("],[0,"init"]],"start1":921,"start2":921,"length1":56,"length2":49},{"diffs":[[0,"tate"],[1,")"],[0,";\n    "],[-1,"} "],[0,"\n   "]],"start1":974,"start2":974,"length1":16,"length2":15},{"diffs":[[0,"   \n    "],[-1,"if(!this."],[1,"depth = initialNode.fn;\n    \n    while(!"],[0,"goalNode"]],"start1":987,"start2":987,"length1":25,"length2":56},{"diffs":[[0,"   {"],[1,"\n  "],[0,"    "],[-1,"\n        var self = this;\n"],[1,"  //TODO get Garbage collection to run here...\n        for(var index in this.record)\n        {"],[0,"\n   "]],"start1":1046,"start2":1046,"length1":38,"length2":109},{"diffs":[[0,"    "],[1,"    "],[0,"this."],[-1,"intervalptr = window.setInterval(function(){self.iterativeAStarCallback();},1000)"],[1,"record.pop().parent = null"],[0,";   "]],"start1":1156,"start2":1156,"length1":94,"length2":43},{"diffs":[[0,"   \n    "],[1,"    "],[0,"}\n    "],[-1,"else\n"],[0,"    "],[-1,"{"],[0,"\n       "]],"start1":1197,"start2":1197,"length1":32,"length2":30},{"diffs":[[0,"    "],[-1,"$(\"#outputDiv\").text(this.pathFromNode(this.goalNode)); \n    }\n};\n\nAStar.prototype.iterativeAStarCallback = function()\n{\n    console.log(\"exploring depth \" + this.depth);\n    this.goalNode = this.iterativeAStarDepthLimted(this.initialNode,this."],[1,"if(RubixState.isEqual(initialState,AStar.goalState))\n        {\n            goalNode = initialState;\n        } \n        else\n        {\n            goalNode = this.iterativeAStarDepthLimted(new RubixNode(initialState),depth);\n        }\n        \n        "],[0,"depth"],[1," "],[0,"++"],[-1,")"],[0,";\n    "],[-1,"\n     \n    if(this."],[1,"    this.frontier = new PriorityMinQueue();\n        \n        if(!"],[0,"goal"]],"start1":1224,"start2":1224,"length1":285,"length2":338},{"diffs":[[0,"alNode)\n    "],[-1,"{\n"],[1,"    {    \n "],[0,"        "],[1,"   "],[0,"$(\"#outputDi"]],"start1":1560,"start2":1560,"length1":34,"length2":46},{"diffs":[[0,"ext("],[-1,"this.pathFromNode(this.goalNode));\n\n        clearInterval(this.intervalptr"],[1,"\"The depth steadily increased:\" + depth);\n\n            console.log(\"The depth steadily increased:\" + depth"],[0,");\n    "],[1,"    "],[0,"}\n    "],[-1,"else"],[1,"        "],[0,"\n    "],[-1,"{"],[1,"}"],[0,"\n    "],[1,"\n"],[0,"    "],[-1,"$(\"#outputDiv\").text(\"Presently exploring depth \" + this.depth + \".\");\n    }"],[1,"console.log(this.pathFromNode(goalNode));\n    sequence =this.pathFromNode(goalNode);\n    \n    return sequence;"],[0,"\n};\n"]],"start1":1611,"start2":1611,"length1":190,"length2":265}]],"length":4578,"saved":false}
{"contributors":[],"silentsave":false,"ts":1351142161173,"patch":[[{"diffs":[[0,"ode.fn;\n    "],[1,"console.log(depth.fn);"],[0,"\n    while(!"]],"start1":1011,"start2":1011,"length1":24,"length2":46}]],"length":4600,"saved":false}
{"ts":1351142203150,"patch":[[{"diffs":[[0,"og(depth"],[-1,".fn"],[0,");\n    w"]],"start1":1032,"start2":1032,"length1":19,"length2":16}]],"length":4597,"saved":false}
{"contributors":[],"silentsave":false,"ts":1351180628051,"patch":[[{"diffs":[[0,"quence;\n};\n\n"],[1,"Astar.iterativeAstarCallBack()\n{\n    \n}\n\n"],[0,"/**\n * @brie"]],"start1":1884,"start2":1884,"length1":24,"length2":65}]],"length":4638,"saved":false}
{"ts":1351180637880,"patch":[[{"diffs":[[0,"e;\n};\n\nA"],[-1,"s"],[1,"S"],[0,"tar.iter"]],"start1":1889,"start2":1889,"length1":17,"length2":17},{"diffs":[[0,"CallBack"],[1," =function"],[0,"()\n{\n   "]],"start1":1916,"start2":1916,"length1":16,"length2":26}]],"length":4648,"saved":false}
{"ts":1351180651165,"patch":[[{"diffs":[[0,"\n\nAStar."],[1,"prototype."],[0,"iterativ"]],"start1":1894,"start2":1894,"length1":16,"length2":26},{"diffs":[[0,"iveA"],[-1,"s"],[1,"S"],[0,"tarCall"],[-1,"B"],[1,"b"],[0,"ack"],[1,"()"],[0," =fu"]],"start1":1918,"start2":1918,"length1":20,"length2":22}]],"length":4660,"saved":false}
{"ts":1351180656530,"patch":[[{"diffs":[[0,"back() ="],[1," "],[0,"function"]],"start1":1930,"start2":1930,"length1":16,"length2":17}]],"length":4661,"saved":false}
{"ts":1351180669004,"patch":[[{"diffs":[[0,"ueue();\n"],[1,"    this.goalNode = null;\n    \n"],[0,"}\n\n/**\n "]],"start1":307,"start2":307,"length1":16,"length2":47}]],"length":4692,"saved":false}
{"ts":1351180693330,"patch":[[{"diffs":[[0,"= null;\n    "],[1,"this.depth = 0;\n    this.initialNode = null"],[0,"\n}\n\n/**\n * R"]],"start1":333,"start2":333,"length1":24,"length2":67}]],"length":4735,"saved":false}
{"ts":1351180694326,"patch":[[{"diffs":[[0,"e = null"],[1,";"],[0,"\n}\n\n/**\n"]],"start1":380,"start2":380,"length1":16,"length2":17}]],"length":4736,"saved":false}
{"ts":1351180739790,"patch":[[{"diffs":[[0,")\n{\n    "],[1,"var self = this\n    setTimeout(function() {\n        self.iterativeAStarDepthLimted\n    }, 0);"],[0,"\n}\n\n/**\n"]],"start1":2023,"start2":2023,"length1":16,"length2":109}]],"length":4829,"saved":false}
{"ts":1351180741094,"patch":[[{"diffs":[[0,"thLimted"],[1,"()"],[0,"\n    }, "]],"start1":2105,"start2":2105,"length1":16,"length2":18}]],"length":4831,"saved":false}
{"ts":1351180743481,"patch":[[{"diffs":[[0,"Limted()"],[1,";"],[0,"\n    }, "]],"start1":2107,"start2":2107,"length1":16,"length2":17}]],"length":4832,"saved":false}
{"ts":1351180746585,"patch":[[{"diffs":[[0,"f = this"],[1,";"],[0,"\n    set"]],"start1":2038,"start2":2038,"length1":16,"length2":17}]],"length":4833,"saved":false}
{"ts":1351180747649,"patch":[[{"diffs":[[0,"= this;\n"],[1,"    \n"],[0,"    setT"]],"start1":2040,"start2":2040,"length1":16,"length2":21}]],"length":4838,"saved":false}
{"ts":1351180758915,"patch":[[{"diffs":[[0,"Callback"],[-1,"()"],[0," = funct"]],"start1":2001,"start2":2001,"length1":18,"length2":16}]],"length":4836,"saved":false}
{"ts":1351180774395,"patch":[[{"diffs":[[0,"unction("],[1,"startNode, depth"],[0,")\n{\n    "]],"start1":2013,"start2":2013,"length1":16,"length2":32}]],"length":4852,"saved":false}
{"ts":1351180787938,"patch":[[{"diffs":[[0,"goalNode);\n    \n"],[1,"    \n    \n"],[0,"    return seque"]],"start1":1930,"start2":1930,"length1":32,"length2":42},{"diffs":[[0,"}, 0);\n}"],[1,";"],[0,"\n\n/**\n *"]],"start1":2151,"start2":2151,"length1":16,"length2":17}]],"length":4863,"saved":false}
{"ts":1351180793221,"patch":[[{"diffs":[[0,");\n    \n    "],[1,"setTimeout(function() {\n        self.iterativeAStarDepthLimted();\n    }, 0);"],[0,"\n    \n    re"]],"start1":1938,"start2":1938,"length1":24,"length2":100}]],"length":4939,"saved":false}
{"ts":1351180796993,"patch":[[{"diffs":[[0,"erativeAStar"],[-1,"DepthLimted"],[1,"Callback"],[0,"();\n    }, 0"]],"start1":1989,"start2":1989,"length1":35,"length2":32}]],"length":4936,"saved":false}
{"ts":1351180813771,"patch":[[{"diffs":[[0,"hLimted("],[1,"startNode,depth"],[0,");\n    }"]],"start1":2209,"start2":2209,"length1":16,"length2":31}]],"length":4951,"saved":false}
{"ts":1351180817229,"patch":[[{"diffs":[[0,"rtNode,depth"],[1," + 1"],[0,");\n    }, 0)"]],"start1":2220,"start2":2220,"length1":24,"length2":28}]],"length":4955,"saved":false}
{"contributors":[],"silentsave":false,"ts":1351180841711,"patch":[[{"diffs":[[0,"n(startNode,"],[1," goalNode,"],[0," depth)\n{\n  "]],"start1":2102,"start2":2102,"length1":24,"length2":34},{"diffs":[[0," this;\n    \n"],[1,"    if(\n"],[0,"    setTimeo"]],"start1":2148,"start2":2148,"length1":24,"length2":32}]],"length":4973,"saved":false}
{"ts":1351180845260,"patch":[[{"diffs":[[0,"\n    if("],[1,"!goalNode)"],[0,"\n    set"]],"start1":2159,"start2":2159,"length1":16,"length2":26}]],"length":4983,"saved":false}
{"ts":1351180856573,"patch":[[{"diffs":[[0,"(!goalNode)\n"],[1,"    {\n    "],[0,"    setTimeo"]],"start1":2166,"start2":2166,"length1":24,"length2":34},{"diffs":[[0,"ut(function() {\n"],[1,"    "],[0,"        self.ite"]],"start1":2200,"start2":2200,"length1":32,"length2":36},{"diffs":[[0,"h + 1);\n"],[1,"    "],[0,"    }, 0"]],"start1":2273,"start2":2273,"length1":16,"length2":20},{"diffs":[[0," }, 0);\n"],[1,"    }\n"],[0,"};\n\n/**\n"]],"start1":2288,"start2":2288,"length1":16,"length2":22}]],"length":5007,"saved":false}
{"ts":1351180864014,"patch":[[{"diffs":[[0,";\n    }\n"],[1,"    else\n    {\n        \n    }\n"],[0,"};\n\n/**\n"]],"start1":2294,"start2":2294,"length1":16,"length2":46}]],"length":5037,"saved":false}
{"ts":1351180865871,"patch":[[{"diffs":[[0,"  {\n        "],[1,"    "],[0,"\n    }\n};\n\n/"]],"start1":2313,"start2":2313,"length1":24,"length2":28}]],"length":5041,"saved":false}
{"ts":1351180871842,"patch":[[{"diffs":[[0,"\n   "],[-1," var self = this;"],[0,"\n   "]],"start1":2133,"start2":2133,"length1":25,"length2":8},{"diffs":[[0,"goalNode)\n    {\n"],[1,"         var self = this;\n"],[0,"        setTimeo"]],"start1":2151,"start2":2151,"length1":32,"length2":58}]],"length":5050,"saved":false}
{"ts":1351180873190,"patch":[[{"diffs":[[0,"        "],[-1," "],[0,"var self"]],"start1":2167,"start2":2167,"length1":17,"length2":16},{"diffs":[[0,"= this;\n"],[1,"         \n"],[0,"        "]],"start1":2184,"start2":2184,"length1":16,"length2":26}]],"length":5059,"saved":false}
{"ts":1351180876470,"patch":[[{"diffs":[[0,"    \n    if("],[-1,"!"],[0,"goalNode)\n  "]],"start1":2138,"start2":2138,"length1":25,"length2":24}]],"length":5058,"saved":false}
{"ts":1351180882472,"patch":[[{"diffs":[[0,"\n       "],[1,"\n    }\n    else\n    {\n        "],[0," var sel"]],"start1":2165,"start2":2165,"length1":16,"length2":46},{"diffs":[[0," 0);"],[-1,"\n    }\n    else\n    {\n           "],[0," \n  "]],"start1":2338,"start2":2338,"length1":41,"length2":8}]],"length":5055,"saved":false}
{"ts":1351180889536,"patch":[[{"diffs":[[0,"   \n"],[-1,"    console.log(this.pathFromNode(goalNode));\n"],[0,"    "]],"start1":1848,"start2":1848,"length1":54,"length2":8},{"diffs":[[0,"   {\n       "],[1," console.log(this.pathFromNode(goalNode));\n"],[0,"\n    }\n    e"]],"start1":2115,"start2":2115,"length1":24,"length2":67}]],"length":5052,"saved":false}
{"ts":1351180898697,"patch":[[{"diffs":[[0,"lNode);\n    "],[1,"var self = this;"],[0,"\n    setTime"]],"start1":1887,"start2":1887,"length1":24,"length2":40}]],"length":5068,"saved":false}
{"ts":1351180904749,"patch":[[{"diffs":[[0,"elf = this;\n"],[1,"    \n"],[0,"    setTimeo"]],"start1":1904,"start2":1904,"length1":24,"length2":29}]],"length":5073,"saved":false}
{"ts":1351180918286,"patch":[[{"diffs":[[0,"imeout(function("],[1,"startNode, depth"],[0,") {\n            "]],"start1":2261,"start2":2261,"length1":32,"length2":48}]],"length":5089,"saved":false}
{"ts":1351180930483,"patch":[[{"diffs":[[0,"ion("],[-1,"startNode, depth"],[0,") {\n"]],"start1":2273,"start2":2273,"length1":24,"length2":8}]],"length":5073,"saved":false}
{"ts":1351180948084,"patch":[[{"diffs":[[0,"allback("],[1,"initialNode, depth"],[0,");\n    }"]],"start1":1977,"start2":1977,"length1":16,"length2":34}]],"length":5091,"saved":false}
{"ts":1351180952863,"patch":[[{"diffs":[[0,"initialNode,"],[1," goalNode,"],[0," depth);\n   "]],"start1":1985,"start2":1985,"length1":24,"length2":34}]],"length":5101,"saved":false}
{"ts":1351180968735,"patch":[[{"diffs":[[0,"else\n    {\n "],[1,"       $(\"#outputDiv\").text(\"The depth steadily increased:\" + depth);\n\n"],[0,"        var "]],"start1":2230,"start2":2230,"length1":24,"length2":95}]],"length":5172,"saved":false}
{"ts":1351180985630,"patch":[[{"diffs":[[0,"xt(\""],[-1,"The depth steadily increased:"],[1,"Finished processing"],[0,"\" + "]],"start1":2267,"start2":2267,"length1":37,"length2":27}]],"length":5162,"saved":false}
{"ts":1351180987278,"patch":[[{"diffs":[[0,"     }, "],[1,"1"],[0,"0); \n   "]],"start1":2438,"start2":2438,"length1":16,"length2":17}]],"length":5163,"saved":false}
{"ts":1351180990040,"patch":[[{"diffs":[[0,"   }, 10"],[1,"0"],[0,"); \n    "]],"start1":2440,"start2":2440,"length1":16,"length2":17}]],"length":5164,"saved":false}
{"ts":1351181005972,"patch":[[{"diffs":[[0,"goalNode)\n    {\n"],[1,"        $(\"#outputDiv\").text(\"Solution is: \" + depth);\n\n"],[0,"        console."]],"start1":2153,"start2":2153,"length1":32,"length2":88}]],"length":5220,"saved":false}
{"ts":1351181012264,"patch":[[{"diffs":[[0,"\" + "],[-1,"depth);\n\n        console.log("],[0,"this"]],"start1":2212,"start2":2212,"length1":37,"length2":8},{"diffs":[[0,"oalNode)"],[1,");\n\n        console.log("],[0,");\n\n    "]],"start1":2235,"start2":2235,"length1":16,"length2":40}]],"length":5215,"saved":false}
{"ts":1351181015879,"patch":[[{"diffs":[[0,"));\n"],[-1,"\n        console.log();\n\n"],[0,"    "]],"start1":2242,"start2":2242,"length1":33,"length2":8}]],"length":5190,"saved":false}
{"ts":1351181035365,"patch":[[{"diffs":[[0,"= null;\n"],[1,"    this.blockAdditionalSearches = true;\n"],[0,"}\n\n/**\n "]],"start1":382,"start2":382,"length1":16,"length2":57},{"diffs":[[0,"epth)\n{\n"],[-1,"   \n    \n"],[0,"    if(g"]],"start1":2170,"start2":2170,"length1":25,"length2":16}]],"length":5222,"saved":false}
{"ts":1351181049770,"patch":[[{"diffs":[[0,"e(goalNode);"],[1,"'\n    \n    if(!this.blockAdditionalSearches)\n    {"],[0,"\n    var sel"]],"start1":1923,"start2":1923,"length1":24,"length2":74}]],"length":5272,"saved":false}
{"ts":1351181053074,"patch":[[{"diffs":[[0," }, 0);\n    "],[1,"}"],[0,"\n    return "]],"start1":2110,"start2":2110,"length1":24,"length2":25}]],"length":5273,"saved":false}
{"ts":1351181059398,"patch":[[{"diffs":[[0,"   \n"],[-1,"    sequence =this.pathFromNode(goalNode);'\n"],[0,"    "]],"start1":1889,"start2":1889,"length1":52,"length2":8},{"diffs":[[0,"ches)\n    {\n"],[1,"    "],[0,"    var self"]],"start1":1930,"start2":1930,"length1":24,"length2":28},{"diffs":[[0,"= this;\n    "],[-1,"\n"],[1,"    \n    "],[0,"    setTimeo"]],"start1":1959,"start2":1959,"length1":25,"length2":33},{"diffs":[[0,"ut(function() {\n"],[1,"    "],[0,"        self.ite"]],"start1":1992,"start2":1992,"length1":32,"length2":36},{"diffs":[[0,"de, depth);\n"],[1,"    "],[0,"    }, 0);\n "]],"start1":2067,"start2":2067,"length1":24,"length2":28}]],"length":5249,"saved":false}
{"ts":1351181062934,"patch":[[{"diffs":[[0,"  }\n"],[-1,"    return sequence;\n"],[0,"};\n\n"]],"start1":2096,"start2":2096,"length1":29,"length2":8}]],"length":5228,"saved":false}
{"ts":1351181070686,"patch":[[{"diffs":[[0,"Searches)\n    {\n"],[1,"        this.blockAdditionalSearches = true\n"],[0,"        var self"]],"start1":1926,"start2":1926,"length1":32,"length2":76}]],"length":5272,"saved":false}
{"ts":1351181071743,"patch":[[{"diffs":[[0,"s = true"],[1,";"],[0,"\n       "]],"start1":1977,"start2":1977,"length1":16,"length2":17}]],"length":5273,"saved":false}
{"ts":1351181077387,"patch":[[{"diffs":[[0,", 0);\n    }\n"],[1,"    eelse{\n        \n    }\n"],[0,"};\n\nAStar.pr"]],"start1":2133,"start2":2133,"length1":24,"length2":50}]],"length":5299,"saved":false}
{"ts":1351181096805,"patch":[[{"diffs":[[0,"se{\n        "],[1,"alert(\"A search is already executing!);   "],[0,"\n    }\n};\n\nA"]],"start1":2152,"start2":2152,"length1":24,"length2":66}]],"length":5341,"saved":false}
{"ts":1351181098756,"patch":[[{"diffs":[[0,"ecuting!"],[1,"\""],[0,");   \n  "]],"start1":2193,"start2":2193,"length1":16,"length2":17}]],"length":5342,"saved":false}
{"ts":1351181100695,"patch":[[{"diffs":[[0,"  }\n    "],[-1,"e"],[0,"else{\n  "]],"start1":2141,"start2":2141,"length1":17,"length2":16}]],"length":5341,"saved":false}
{"ts":1351181111246,"patch":[[{"diffs":[[0,"Node));\n"],[1,"        this.blockAdditionalSearches = false;\n"],[0,"    }\n  "]],"start1":2389,"start2":2389,"length1":16,"length2":62}]],"length":5387,"saved":false}
{"ts":1351181135898,"patch":[[{"diffs":[[0,"   \n"],[-1,"        if(RubixState.isEqual(initialState,AStar.goalState))\n        {\n            goalNode = initialState;\n        } "],[0,"\n   "]],"start1":1351,"start2":1351,"length1":126,"length2":8},{"diffs":[[0," }\n    \n    "],[1,"if(RubixState.isEqual(initialState,AStar.goalState))\n    {\n        goalNode = initialState;\n    } "],[0,"\n    if(!thi"]],"start1":1767,"start2":1767,"length1":24,"length2":122}]],"length":5367,"saved":false}
{"ts":1351181142084,"patch":[[{"diffs":[[0,"}\n    \n "],[1,"\n    if(!this.blockAdditionalSearches)\n    {\n         "],[0,"   if(Ru"]],"start1":1768,"start2":1768,"length1":16,"length2":70},{"diffs":[[0,"   }"],[-1," "],[0,"\n    "],[-1,"if(!this.blockAdditionalSearches)\n"],[0,"    "],[-1,"{"],[0,"\n   "]],"start1":1926,"start2":1926,"length1":53,"length2":17}]],"length":5385,"saved":false}
{"ts":1351181147816,"patch":[[{"diffs":[[0,"        "],[-1,"    "],[0,"if(Rubix"]],"start1":1821,"start2":1821,"length1":20,"length2":16},{"diffs":[[0,"State))\n    "],[-1,"{\n"],[1,"    {\n    "],[0,"        goal"]],"start1":1874,"start2":1874,"length1":26,"length2":34},{"diffs":[[0,"lState;\n"],[1,"    "],[0,"    }\n  "]],"start1":1921,"start2":1921,"length1":16,"length2":20}]],"length":5393,"saved":false}
{"ts":1351181174998,"patch":[[{"diffs":[[0,";\n  "],[-1,"  console.log(depth);\n    while(!goalNode)\n    {\n        //TODO get Garbage collection to run here...\n        for(var index in this.record)\n        {\n            this.record.pop().parent = null;    \n        }\n        \n\n        else\n        {\n            goalNode = this.iterativeAStarDepthLimted(new RubixNode(initialState),depth);\n        }\n        \n        depth ++;\n        this.frontier = new PriorityMinQueue();\n        \n        if(!goalNode)\n        {    \n            $(\"#outputDiv\").text(\"The depth steadily increased:\" + depth);\n\n            console.log(\"The depth steadily increased:\" + depth);\n        }\n            \n    }\n    "],[0,"\n \n "]],"start1":1133,"start2":1133,"length1":645,"length2":8}]],"length":4756,"saved":false}
{"ts":1351181189152,"patch":[[{"diffs":[[0,"alState));\n\n"],[1,"\n \n    if(!this.blockAdditionalSearches)\n    {\n        \n    "],[0,"    var init"]],"start1":1034,"start2":1034,"length1":24,"length2":84},{"diffs":[[0,";\n    \n    \n"],[1,"    "],[0,"    depth = "]],"start1":1155,"start2":1155,"length1":24,"length2":28},{"diffs":[[0,"\n  \n"],[-1," \n    if(!this.blockAdditionalSearches)\n    {\n"],[0,"    "]],"start1":1198,"start2":1198,"length1":54,"length2":8}]],"length":4774,"saved":false}
{"ts":1351181191636,"patch":[[{"diffs":[[0,"        "],[1,"var "],[0,"depth = "]],"start1":1167,"start2":1167,"length1":16,"length2":20}]],"length":4778,"saved":false}
{"ts":1351181208898,"patch":[[{"diffs":[[0,"\n   "],[-1," var goalNode = null;"],[0,"\n   "]],"start1":804,"start2":804,"length1":29,"length2":8},{"diffs":[[0,")\n    {\n        "],[1,"var goalNode = null;"],[0,"\n        var ini"]],"start1":1064,"start2":1064,"length1":32,"length2":52}]],"length":4777,"saved":false}
{"ts":1351181216156,"patch":[[{"diffs":[[0,"e\";\n"],[-1,"    var sequence =\"\";\n    var depth = 0;\n   \n    /*\n    for (var i = 0; i < 6; i ++)\n    {\n        RubixState.rotate(initialState,Math.floor(Math.random()*6), Math.floor(Math.random()*3 + 1));  \n    }*/\n    \n    console.log(RubixState.toString(initialState));\n\n"],[0,"\n \n "]],"start1":760,"start2":760,"length1":269,"length2":8}]],"length":4516,"saved":false}
{"ts":1351181227728,"patch":[[{"diffs":[[0,"Searches)\n    {\n"],[1,"        if(!initialState)\n            \n        \n"],[0,"        var goal"]],"start1":795,"start2":795,"length1":32,"length2":80}]],"length":4564,"saved":false}
{"ts":1351181248738,"patch":[[{"diffs":[[0,"te)\n            "],[1,"alert(\"Poorly formatted cube, please check console.\");"],[0,"\n        \n      "]],"start1":833,"start2":833,"length1":32,"length2":86}]],"length":4618,"saved":false}
{"ts":1351181254087,"patch":[[{"diffs":[[0,"lState);"],[-1,"\n"],[0,"    "],[-1,"\n"],[0,"    \n   "]],"start1":988,"start2":988,"length1":22,"length2":20}]],"length":4616,"saved":false}
{"ts":1351181257913,"patch":[[{"diffs":[[0,"e.fn;\n  "],[1,"      "],[0,"\n       "]],"start1":1035,"start2":1035,"length1":16,"length2":22}]],"length":4622,"saved":false}
{"ts":1351181262994,"patch":[[{"diffs":[[0,"= true;\n"],[1,"        \n"],[0,"        "]],"start1":1214,"start2":1214,"length1":16,"length2":25}]],"length":4631,"saved":false}
{"ts":1351181305310,"patch":[[{"diffs":[[0,"rches = "],[-1,"tru"],[1,"fals"],[0,"e;\n}\n\n/*"]],"start1":417,"start2":417,"length1":19,"length2":20}]],"length":4632,"saved":false}
{"ts":1351181325431,"patch":[[{"diffs":[[0,"();\n"],[-1,"    this.goalNode = null;\n    this.depth = 0;\n    this.initialNode = null;\n"],[0,"    "]],"start1":311,"start2":311,"length1":83,"length2":8}]],"length":4557,"saved":false}
{"ts":1351181339104,"patch":[[{"diffs":[[0,")\n{\n"],[-1,"    if(!initialState)\n        return \"Bad Cube\";\n\n \n"],[0,"    "]],"start1":637,"start2":637,"length1":60,"length2":8}]],"length":4505,"saved":false}
{"ts":1351181359755,"patch":[[{"diffs":[[0,"Searches)\n    {\n"],[1,"        // Check the state before continuing.\n"],[0,"        if(!init"]],"start1":669,"start2":669,"length1":32,"length2":78}]],"length":4551,"saved":false}
{"ts":1351181369427,"patch":[[{"diffs":[[0,"le.\");\n        \n"],[1,"        // Declare necessary values.\n"],[0,"        var goal"]],"start1":817,"start2":817,"length1":32,"length2":69}]],"length":4588,"saved":false}
{"ts":1351181400798,"patch":[[{"diffs":[[0,"  var goalNode ="],[1," RubixState.isEqual(initialState,AStar.goalState) ? initialState:"],[0," null;\n        v"]],"start1":876,"start2":876,"length1":32,"length2":97},{"diffs":[[0,"    "],[-1,"if(RubixState.isEqual(initialState,AStar.goalState)"],[1,"// If we have a \n        if("],[0,")\n  "]],"start1":1076,"start2":1076,"length1":59,"length2":36}]],"length":4630,"saved":false}
{"ts":1351181408919,"patch":[[{"diffs":[[0,"tate: null;\n"],[1,"        \n"],[0,"        var "]],"start1":952,"start2":952,"length1":24,"length2":33},{"diffs":[[0,"   \n"],[-1,"        // If we have a \n        if()\n        {\n            goalNode = initialState;\n        }\n"],[0,"    "]],"start1":1077,"start2":1077,"length1":103,"length2":8}]],"length":4544,"saved":false}
{"ts":1351181409983,"patch":[[{"diffs":[[0,"State);        \n"],[1,"        \n"],[0,"        var dept"]],"start1":1020,"start2":1020,"length1":32,"length2":41}]],"length":4553,"saved":false}
{"ts":1351181430951,"patch":[[{"diffs":[[0,"       \n        "],[1,"// Prevent too many searches from running at one time."],[0,"\n        this.bl"]],"start1":1082,"start2":1082,"length1":32,"length2":86}]],"length":4607,"saved":false}
{"ts":1351181439901,"patch":[[{"diffs":[[0,"le.\");\n        \n"],[1,"                // Prevent too many searches from running at one time.\n        this.blockAdditionalSearches = true;\n        \n"],[0,"        // Decla"]],"start1":817,"start2":817,"length1":32,"length2":157},{"diffs":[[0,"   \n"],[-1,"        // Prevent too many searches from running at one time.\n        this.blockAdditionalSearches = true;"],[0,"\n   "]],"start1":1211,"start2":1211,"length1":115,"length2":8}]],"length":4625,"saved":false}
{"ts":1351181441323,"patch":[[{"diffs":[[0,");\n        \n"],[-1,"        "],[0,"        // P"]],"start1":821,"start2":821,"length1":32,"length2":24}]],"length":4617,"saved":false}
{"ts":1351181445361,"patch":[[{"diffs":[[0,"        "],[-1,"\n\n        "],[0,"\n       "]],"start1":1198,"start2":1198,"length1":26,"length2":16}]],"length":4607,"saved":false}
{"ts":1351181454795,"patch":[[{"diffs":[[0,"y values"],[1," to send to the timeoutfunction"],[0,".\n      "]],"start1":977,"start2":977,"length1":16,"length2":47}]],"length":4638,"saved":false}
{"ts":1351181457252,"patch":[[{"diffs":[[0," timeout"],[1," "],[0,"function"]],"start1":1000,"start2":1000,"length1":16,"length2":17}]],"length":4639,"saved":false}
{"ts":1351181489652,"patch":[[{"diffs":[[0,"lState)\n"],[1,"        {\n            return;\n"],[0,"        "]],"start1":749,"start2":749,"length1":16,"length2":46},{"diffs":[[0,"console.\");\n"],[1,"        }\n"],[0,"        \n   "]],"start1":842,"start2":842,"length1":24,"length2":34}]],"length":4679,"saved":false}
{"ts":1351181496863,"patch":[[{"diffs":[[0,"  {\n"],[-1,"            return;\n"],[0,"    "]],"start1":763,"start2":763,"length1":28,"length2":8},{"diffs":[[0,"console.\");\n"],[1,"            return;\n"],[0,"        }\n  "]],"start1":822,"start2":822,"length1":24,"length2":44}]],"length":4679,"saved":false}
{"ts":1351181552065,"patch":[[{"diffs":[[0," \n    }\n};\n\n"],[1,"\nAStar.prototype.iterativeAStarDepthLimted = function(startNode, depth)\n{\n}\n\n"],[0,"/**\n * @brie"]],"start1":1966,"start2":1966,"length1":24,"length2":101}]],"length":4756,"saved":false}
{"ts":1351181553170,"patch":[[{"diffs":[[0,"pth)\n{\n}"],[1,";"],[0,"\n\n/**\n *"]],"start1":2045,"start2":2045,"length1":16,"length2":17}]],"length":4757,"saved":false}
{"ts":1351181564210,"patch":[[{"diffs":[[0,"epth)\n{\n"],[1,"    var localNode = startNode;\n"],[0,"};\n\n/**\n"]],"start1":2044,"start2":2044,"length1":16,"length2":47}]],"length":4788,"saved":false}
{"ts":1351181574425,"patch":[[{"diffs":[[0,"rtNode;\n"],[1,"    \n    var isGoal = false;\n    var successors = null, size = 0, index = 0;\n"],[0,"};\n\n/**\n"]],"start1":2075,"start2":2075,"length1":16,"length2":93}]],"length":4865,"saved":false}
{"ts":1351181586328,"patch":[[{"diffs":[[0,"ex = 0;\n"],[1,"    if(localNode.fn < depth)\n        {\n            successors = RubixNode.getSuccessors(localNode);        \n            \n            for (index = 0, size = successors.length; index< successors.length; index++)\n            {        \n                if(successors[index].fn <= depth)\n                {\n                    this.frontier.insert(successors[index].fn, successors[index]);    \n                }\n                else\n                {        \n                    RubixNode.wipeBadChain(successors[index]);   \n                }\n            }\n        }\n        else\n        {\n            RubixNode.wipeBadChain(localNode);\n        }\n"],[0,"};\n\n/**\n"]],"start1":2152,"start2":2152,"length1":16,"length2":656}]],"length":5505,"saved":false}
{"ts":1351181589133,"patch":[[{"diffs":[[0,"ex = 0;\n"],[1,"    \n"],[0,"    if(l"]],"start1":2152,"start2":2152,"length1":16,"length2":21}]],"length":5510,"saved":false}
{"ts":1351181641012,"patch":[[{"diffs":[[0,"AStarDepthLimted"],[1,"Entry"],[0," = function(star"]],"start1":2004,"start2":2004,"length1":32,"length2":37},{"diffs":[[0,";\n        }\n"],[1,"        \n          if(!this.frontier.isEmpty())\n        {\n            //this.record.push(localNode);\n            localNode = null;\n            localNode = this.frontier.remove(); \n        }\n        \n        isGoal = RubixState.isEqual(localNode.rubixState, AStar.goalState);\n\n       console.log(\"popped\");\n    }while(!this.frontier.isEmpty() && !isGoal);\n"],[0,"};\n\n/**\n * @"]],"start1":2798,"start2":2798,"length1":24,"length2":379}]],"length":5870,"saved":false}
{"ts":1351181644531,"patch":[[{"diffs":[[0,"thLimted"],[1,"Entry"],[0,"(startNo"]],"start1":1919,"start2":1919,"length1":16,"length2":21}]],"length":5875,"saved":false}
{"ts":1351181677538,"patch":[[{"diffs":[[0,"    \n    if("],[-1,"local"],[1,"start"],[0,"Node.fn < de"]],"start1":2170,"start2":2170,"length1":29,"length2":29}]],"length":5875,"saved":false}
{"ts":1351181683281,"patch":[[{"diffs":[[0,"e.getSuccessors("],[-1,"local"],[1,"start"],[0,"Node);        \n "]],"start1":2247,"start2":2247,"length1":37,"length2":37}]],"length":5875,"saved":false}
{"ts":1351181689276,"patch":[[{"diffs":[[0,"ode.fn < depth)\n"],[-1,"    "],[0,"    {\n          "]],"start1":2188,"start2":2188,"length1":36,"length2":32},{"diffs":[[0,"            "],[-1,"successors ="],[0," RubixNode.g"]],"start1":2210,"start2":2210,"length1":36,"length2":24}]],"length":5859,"saved":false}
{"ts":1351181692463,"patch":[[{"diffs":[[0,")\n    {\n        "],[-1,"     "],[0,"RubixNode.getSuc"]],"start1":2202,"start2":2202,"length1":37,"length2":32}]],"length":5854,"saved":false}
{"ts":1351181703806,"patch":[[{"diffs":[[0,")\n    {\n        "],[1,"for(var index in "],[0,"RubixNode.getSuc"]],"start1":2202,"start2":2202,"length1":32,"length2":49},{"diffs":[[0,"s(startNode)"],[1,")"],[0,";        \n  "]],"start1":2257,"start2":2257,"length1":24,"length2":25}]],"length":5872,"saved":false}
{"ts":1351181724196,"patch":[[{"diffs":[[0," false;\n"],[1,"    this.index = 0;\n    this.size = 0;\n\n"],[0,"}\n\n/**\n "]],"start1":349,"start2":349,"length1":16,"length2":56}]],"length":5912,"saved":false}
{"ts":1351181734269,"patch":[[{"diffs":[[0,"    for("],[-1,"var "],[1,"this."],[0,"index in"]],"start1":2254,"start2":2254,"length1":20,"length2":21}]],"length":5913,"saved":false}
{"ts":1351181784898,"patch":[[{"diffs":[[0,"    "],[-1,"for(this.index in"],[1,"this.successors = RubixNode.getSuccessors(startNode);\n        for(this.index = 0,  in \n        this.successors ="],[0," Rub"]],"start1":2254,"start2":2254,"length1":25,"length2":120},{"diffs":[[0,"artNode)"],[1,";"],[0,");      "]],"start1":2397,"start2":2397,"length1":16,"length2":17}]],"length":6009,"saved":false}
{"ts":1351181789461,"patch":[[{"diffs":[[0," in "],[-1,"\n        this.successors = RubixNode.getSuccessors(startNode);"],[0,");  "]],"start1":2340,"start2":2340,"length1":70,"length2":8}]],"length":5947,"saved":false}
{"ts":1351181800251,"patch":[[{"diffs":[[0,"ize = 0;"],[1,"\n    this.successors;"],[0,"\n\n}\n\n/**"]],"start1":387,"start2":387,"length1":16,"length2":37}]],"length":5968,"saved":false}
{"ts":1351181804433,"patch":[[{"diffs":[[0,"ccessors"],[1," = []"],[0,";\n\n}\n\n/*"]],"start1":407,"start2":407,"length1":16,"length2":21}]],"length":5973,"saved":false}
{"ts":1351181816761,"patch":[[{"diffs":[[0,"e);\n"],[-1,"        for(this.index = 0,  in );        \n"],[0,"    "]],"start1":2334,"start2":2334,"length1":51,"length2":8}]],"length":5930,"saved":false}
{"ts":1351181828961,"patch":[[{"diffs":[[0,"       \n        "],[-1,"    "],[0,"for (index = 0, "]],"start1":2343,"start2":2343,"length1":36,"length2":32},{"diffs":[[0,"ndex++)\n        "],[-1,"    "],[0,"{        \n      "]],"start1":2428,"start2":2428,"length1":36,"length2":32},{"diffs":[[0,"      {        \n"],[-1,"    "],[0,"            if(s"]],"start1":2438,"start2":2438,"length1":36,"length2":32},{"diffs":[[0,"            "],[-1,"  "],[-1,"  {\n    "],[1,"{\n"],[0,"            "]],"start1":2500,"start2":2500,"length1":34,"length2":26},{"diffs":[[0,"            "],[-1,"    }\n   "],[1,"}\n"],[0,"            "]],"start1":2597,"start2":2597,"length1":33,"length2":26},{"diffs":[[0,"            "],[-1," "],[0,"else\n"],[-1,"    "],[0,"            "]],"start1":2611,"start2":2611,"length1":34,"length2":29},{"diffs":[[0,"      {        \n"],[-1,"    "],[0,"                "]],"start1":2634,"start2":2634,"length1":36,"length2":32},{"diffs":[[0,"x]);   \n"],[-1,"                }\n"],[0,"        "]],"start1":2704,"start2":2704,"length1":34,"length2":16},{"diffs":[[0,"          }\n    "],[-1,""],[0,""],[1,"    }\n"],[0,"    }\n        el"]],"start1":2714,"start2":2714,"length1":32,"length2":38}]],"length":5882,"saved":false}
{"ts":1351181830197,"patch":[[{"diffs":[[0,"    }\n    }\n"],[-1,"    "],[0,"    else\n   "]],"start1":2730,"start2":2730,"length1":28,"length2":24},{"diffs":[[0,"\n    }\n    else\n"],[-1,"    "],[0,"    {\n          "]],"start1":2735,"start2":2735,"length1":36,"length2":32}]],"length":5874,"saved":false}
{"ts":1351181831302,"patch":[[{"diffs":[[0,"e\n    {\n        "],[-1,"    "],[0,"RubixNode.wipeBa"]],"start1":2749,"start2":2749,"length1":36,"length2":32},{"diffs":[[0,"ain(localNode);\n"],[-1,"    "],[0,"    }\n        \n "]],"start1":2784,"start2":2784,"length1":36,"length2":32}]],"length":5866,"saved":false}
{"ts":1351181839848,"patch":[[{"diffs":[[0,"  \n        for ("],[1,"this."],[0,"index = 0, size "]],"start1":2348,"start2":2348,"length1":32,"length2":37}]],"length":5871,"saved":false}
{"ts":1351181842381,"patch":[[{"diffs":[[0,"this.index = 0, "],[1,"this."],[0,"size = successor"]],"start1":2364,"start2":2364,"length1":32,"length2":37}]],"length":5876,"saved":false}
{"ts":1351181845556,"patch":[[{"diffs":[[0,"this.size = "],[1,"this."],[0,"successors.l"]],"start1":2380,"start2":2380,"length1":24,"length2":29}]],"length":5881,"saved":false}
{"ts":1351181849304,"patch":[[{"diffs":[[0,"cessors.length; "],[1,"this."],[0,"index< successor"]],"start1":2400,"start2":2400,"length1":32,"length2":37}]],"length":5886,"saved":false}
{"ts":1351181851872,"patch":[[{"diffs":[[0,"this.index< "],[1,"this."],[0,"successors.l"]],"start1":2416,"start2":2416,"length1":24,"length2":29}]],"length":5891,"saved":false}
{"ts":1351181856347,"patch":[[{"diffs":[[0,"cessors.length; "],[1,"this."],[0,"index++)\n       "]],"start1":2436,"start2":2436,"length1":32,"length2":37}]],"length":5896,"saved":false}
{"ts":1351181859940,"patch":[[{"diffs":[[0,"\n            if("],[1,"this."],[0,"successors[index"]],"start1":2483,"start2":2483,"length1":32,"length2":37}]],"length":5901,"saved":false}
{"ts":1351181863158,"patch":[[{"diffs":[[0,"this.successors["],[1,"this."],[0,"index].fn <= dep"]],"start1":2499,"start2":2499,"length1":32,"length2":37}]],"length":5906,"saved":false}
{"ts":1351181870411,"patch":[[{"diffs":[[0,"frontier.insert("],[1,"this."],[0,"successors[index"]],"start1":2575,"start2":2575,"length1":32,"length2":37}]],"length":5911,"saved":false}
{"ts":1351181874041,"patch":[[{"diffs":[[0,"sors[index].fn, "],[1,"this."],[0,"successors[index"]],"start1":2602,"start2":2602,"length1":32,"length2":37}]],"length":5916,"saved":false}
{"ts":1351181878713,"patch":[[{"diffs":[[0,"   \n"],[-1,"    var isGoal = false;\n    var successors = null, size = 0, index = 0;\n    \n"],[0,"    "]],"start1":2160,"start2":2160,"length1":85,"length2":8}]],"length":5839,"saved":false}
{"ts":1351181882444,"patch":[[{"diffs":[[0,"this.successors["],[1,"this."],[0,"index]);    \n   "]],"start1":2541,"start2":2541,"length1":32,"length2":37}]],"length":5844,"saved":false}
{"ts":1351181885765,"patch":[[{"diffs":[[0,"this.successors["],[1,"this."],[0,"index].fn, this."]],"start1":2514,"start2":2514,"length1":32,"length2":37}]],"length":5849,"saved":false}
{"ts":1351181894042,"patch":[[{"diffs":[[0,"ode.wipeBadChain"],[-1,"("],[1,"0(this."],[0,"successors[index"]],"start1":2655,"start2":2655,"length1":33,"length2":39}]],"length":5855,"saved":false}
{"ts":1351181896991,"patch":[[{"diffs":[[0,"this.successors["],[1,"this."],[0,"index]);   \n    "]],"start1":2673,"start2":2673,"length1":32,"length2":37}]],"length":5860,"saved":false}
{"ts":1351181902630,"patch":[[{"diffs":[[0,"BadChain"],[-1,"0"],[0,"(this.su"]],"start1":2663,"start2":2663,"length1":17,"length2":16}]],"length":5859,"saved":false}
{"ts":1351181910040,"patch":[[{"diffs":[[0,"de.wipeBadChain("],[-1,"local"],[1,"start"],[0,"Node);\n    }\n   "]],"start1":2765,"start2":2765,"length1":37,"length2":37}]],"length":5859,"saved":false}
{"ts":1351181922296,"patch":[[{"diffs":[[0," }\n        \n"],[-1,"      "],[0,"    if(!this"]],"start1":2796,"start2":2796,"length1":30,"length2":24},{"diffs":[[0,"())\n    "],[-1,"    {\n   "],[1,"{\n"],[0,"        "],[-1," "],[0,"//this.r"]],"start1":2837,"start2":2837,"length1":34,"length2":26},{"diffs":[[0,"lNode);\n        "],[-1,"    "],[0,"localNode = null"]],"start1":2878,"start2":2878,"length1":36,"length2":32},{"diffs":[[0,"= null;\n        "],[-1,"  "],[-1,"  "],[0,"localNode = this"]],"start1":2904,"start2":2904,"length1":36,"length2":32},{"diffs":[[0,"tier.remove(); \n"],[-1,"    "],[0,"    }\n        \n "]],"start1":2941,"start2":2941,"length1":36,"length2":32}]],"length":5833,"saved":false}
{"ts":1351181934429,"patch":[[{"diffs":[[0,");\n\n"],[-1,"       console.log(\"popped\");\n"],[0,"    "]],"start1":3045,"start2":3045,"length1":38,"length2":8}]],"length":5803,"saved":false}
{"ts":1351181939189,"patch":[[{"diffs":[[0,"  {\n"],[-1,"        //this.record.push(localNode);\n"],[0,"    "]],"start1":2843,"start2":2843,"length1":47,"length2":8}]],"length":5764,"saved":false}
{"ts":1351181983246,"patch":[[{"diffs":[[0,"er.isEmpty()"],[1,",RubixState.isEqual(localNode.rubixState, AStar.goalState)"],[0,")\n    {\n    "]],"start1":2827,"start2":2827,"length1":24,"length2":82},{"diffs":[[0,"ull;\n       "],[-1," localNode ="],[0," this.fronti"]],"start1":2926,"start2":2926,"length1":36,"length2":24},{"diffs":[[0,"l = "],[-1,"RubixState.isEqual(localNode.rubixState, AStar.goalState)"],[0,";\n\n "]],"start1":2992,"start2":2992,"length1":65,"length2":8}]],"length":5753,"saved":false}
{"ts":1351181991039,"patch":[[{"diffs":[[0,"sEmpty()"],[-1,","],[1," && "],[0,"RubixSta"]],"start1":2831,"start2":2831,"length1":17,"length2":20}]],"length":5756,"saved":false}
{"ts":1351181998194,"patch":[[{"diffs":[[0,"ty() && "],[1,"!"],[0,"RubixSta"]],"start1":2835,"start2":2835,"length1":16,"length2":17}]],"length":5757,"saved":false}
{"ts":1351182013177,"patch":[[{"diffs":[[0,"rs = [];"],[1,"\n    this.isGoal =false;"],[0,"\n\n}\n\n/**"]],"start1":413,"start2":413,"length1":16,"length2":40}]],"length":5781,"saved":false}
{"ts":1351182016647,"patch":[[{"diffs":[[0,"isGoal ="],[1," "],[0,"false;\n\n"]],"start1":431,"start2":431,"length1":16,"length2":17}]],"length":5782,"saved":false}
{"ts":1351182029295,"patch":[[{"diffs":[[0,"    "],[-1,"    "],[0,"\n    "],[-1,"if(!"],[0,"this."],[-1,"frontier.isEmpty() && !"],[0,"Rubi"]],"start1":2824,"start2":2824,"length1":49,"length2":18},{"diffs":[[0,"alState)"],[1,";\n    if(!this.frontier.isEmpty() && !"],[0,")\n    {\n"]],"start1":2887,"start2":2887,"length1":16,"length2":54}]],"length":5789,"saved":false}
{"ts":1351182034305,"patch":[[{"diffs":[[0,"   this."],[1,"isGoal = "],[0,"RubixSta"]],"start1":2830,"start2":2830,"length1":16,"length2":25}]],"length":5798,"saved":false}
{"ts":1351182035460,"patch":[[{"diffs":[[0,"goalState);\n"],[1,"    \n"],[0,"    if(!this"]],"start1":2894,"start2":2894,"length1":24,"length2":29}]],"length":5803,"saved":false}
{"ts":1351182046129,"patch":[[{"diffs":[[0,"Empty() "],[-1,"&& !"],[0,")\n    {\n"]],"start1":2935,"start2":2935,"length1":20,"length2":16}]],"length":5799,"saved":false}
{"ts":1351182047326,"patch":[[{"diffs":[[0,"sEmpty()"],[-1," "],[0,")\n    {\n"]],"start1":2934,"start2":2934,"length1":17,"length2":16}]],"length":5798,"saved":false}
{"ts":1351182056955,"patch":[[{"diffs":[[0,"tate);\n    \n"],[1,"    if(this.isGoal)\n    {\n    }\n"],[0,"    if(!this"]],"start1":2899,"start2":2899,"length1":24,"length2":56}]],"length":5830,"saved":false}
{"ts":1351182072006,"patch":[[{"diffs":[[0,"ixState.isEqual("],[-1,"local"],[1,"start"],[0,"Node.rubixState,"]],"start1":2850,"start2":2850,"length1":37,"length2":37},{"diffs":[[0,"Goal)\n    {\n"],[1,"        var self = this;\n         \n        setTimeout(function() {\n            self.iterativeAStarDepthLimtedEntry(startNode,depth + 1);\n        }, 100); \n"],[0,"    }\n    if"]],"start1":2925,"start2":2925,"length1":24,"length2":179}]],"length":5985,"saved":false}
{"ts":1351182075392,"patch":[[{"diffs":[[0,"h)\n{"],[-1,"\n    var localNode = startNode;\n"],[0,"    "]],"start1":2148,"start2":2148,"length1":40,"length2":8}]],"length":5953,"saved":false}
{"ts":1351182081348,"patch":[[{"diffs":[[0," = function("],[-1,"startN"],[1,"n"],[0,"ode, depth)\n"]],"start1":2121,"start2":2121,"length1":30,"length2":25}]],"length":5948,"saved":false}
{"ts":1351182089967,"patch":[[{"diffs":[[0,"\n    if("],[-1,"startN"],[1,"n"],[0,"ode.fn <"]],"start1":2151,"start2":2151,"length1":22,"length2":17},{"diffs":[[0,"cessors("],[-1,"startN"],[1,"n"],[0,"ode);\n  "]],"start1":2224,"start2":2224,"length1":22,"length2":17},{"diffs":[[0,"adChain("],[-1,"startN"],[1,"n"],[0,"ode);\n  "]],"start1":2751,"start2":2751,"length1":22,"length2":17},{"diffs":[[0,"isEqual("],[-1,"startN"],[1,"n"],[0,"ode.rubi"]],"start1":2806,"start2":2806,"length1":22,"length2":17},{"diffs":[[0,"epthLimtedEntry("],[-1,"startN"],[1,"n"],[0,"ode,depth + 1);\n"]],"start1":2979,"start2":2979,"length1":38,"length2":33}]],"length":5923,"saved":false}
{"ts":1351182091424,"patch":[[{"diffs":[[0,"dEntry(node,"],[1," "],[0,"depth + 1);\n"]],"start1":2988,"start2":2988,"length1":24,"length2":25}]],"length":5924,"saved":false}
{"ts":1351182096652,"patch":[[{"diffs":[[0,"00); \n    }\n"],[1,"    \n"],[0,"    if(!this"]],"start1":3025,"start2":3025,"length1":24,"length2":29}]],"length":5929,"saved":false}
{"ts":1351182104098,"patch":[[{"diffs":[[0,"e(); \n    }\n"],[1,"    else\n    {\n        \n    }\n"],[0,"        \n   "]],"start1":3134,"start2":3134,"length1":24,"length2":54}]],"length":5959,"saved":false}
{"ts":1351182114396,"patch":[[{"diffs":[[0,"  {\n        "],[1,"var self = this;\n         \n        setTimeout(function() {\n            self.iterativeAStarDepthLimtedEntry(node, depth + 1);\n        }, 100); "],[0,"\n    }\n     "]],"start1":3157,"start2":3157,"length1":24,"length2":166}]],"length":6101,"saved":false}
{"ts":1351182117481,"patch":[[{"diffs":[[0,"ntry(node, depth"],[-1," + 1"],[0,");\n        }, 10"]],"start1":3271,"start2":3271,"length1":36,"length2":32}]],"length":6097,"saved":false}
{"ts":1351182121196,"patch":[[{"diffs":[[0,"imtedEntry(n"],[-1,"ode"],[1,"ull"],[0,", depth);\n  "]],"start1":3265,"start2":3265,"length1":27,"length2":27}]],"length":6097,"saved":false}
{"ts":1351182126113,"patch":[[{"diffs":[[0,"(node, depth"],[-1," + 1"],[0,");\n        }"]],"start1":2994,"start2":2994,"length1":28,"length2":24}]],"length":6093,"saved":false}
{"ts":1351182129875,"patch":[[{"diffs":[[0,"  }\n"],[-1,"        \n        isGoal = ;\n\n    }while(!this.frontier.isEmpty() && !isGoal);\n"],[0,"};\n\n"]],"start1":3306,"start2":3306,"length1":86,"length2":8}]],"length":6015,"saved":false}
{"ts":1351182152218,"patch":[[{"diffs":[[0," false;\n"],[-1,"\n"],[0,"}\n\n/**\n "]],"start1":439,"start2":439,"length1":17,"length2":16}]],"length":6014,"saved":false}
{"ts":1351182161383,"patch":[[{"diffs":[[0,"thLimted"],[-1,"Entry"],[0,"(null, d"]],"start1":3257,"start2":3257,"length1":21,"length2":16}]],"length":6009,"saved":false}
{"ts":1351182164931,"patch":[[{"diffs":[[0,"thLimted"],[-1,"Entry"],[0,"(node, d"]],"start1":2980,"start2":2980,"length1":21,"length2":16}]],"length":6004,"saved":false}
{"ts":1351182172042,"patch":[[{"diffs":[[0,".remove(); \n"],[1,"        \n        var self = this;\n         \n        setTimeout(function() {\n            self.iterativeAStarDepthLimted(null, depth);\n        }, 100); \n"],[0,"    }\n    el"]],"start1":3118,"start2":3118,"length1":24,"length2":175}]],"length":6155,"saved":false}
{"ts":1351182204929,"patch":[[{"diffs":[[0,"        "],[-1,"var self = this;"],[0,"\n       "]],"start1":3302,"start2":3302,"length1":32,"length2":16}]],"length":6139,"saved":false}
{"ts":1351182208472,"patch":[[{"diffs":[[0,"epth)\n{    \n"],[1,"    var self = this;\n    \n"],[0,"    if(node."]],"start1":2139,"start2":2139,"length1":24,"length2":50}]],"length":6165,"saved":false}
{"ts":1351182214809,"patch":[[{"diffs":[[0,"se\n    {"],[-1,"\n        \n"],[1," "],[0,"        "]],"start1":3319,"start2":3319,"length1":26,"length2":17}]],"length":6156,"saved":false}
{"ts":1351182224596,"patch":[[{"diffs":[[0,"   \n"],[-1,"        var self = this;\n         \n"],[0,"    "]],"start1":3161,"start2":3161,"length1":43,"length2":8}]],"length":6121,"saved":false}
{"ts":1351182228571,"patch":[[{"diffs":[[0,"  {\n"],[-1,"        var self = this;\n         \n"],[0,"    "]],"start1":2901,"start2":2901,"length1":43,"length2":8}]],"length":6086,"saved":false}
{"ts":1351182258201,"patch":[[{"diffs":[[0,"ion("],[-1,"startNode, goalN"],[1,"n"],[0,"ode,"]],"start1":1645,"start2":1645,"length1":24,"length2":9}]],"length":6071,"saved":false}
{"ts":1351182262503,"patch":[[{"diffs":[[0,"\n    if("],[-1,"goalN"],[1,"n"],[0,"ode)\n   "]],"start1":1663,"start2":1663,"length1":21,"length2":17},{"diffs":[[0,"romNode("],[-1,"goalN"],[1,"n"],[0,"ode));\n "]],"start1":1740,"start2":1740,"length1":21,"length2":17}]],"length":6063,"saved":false}
{"ts":1351182266937,"patch":[[{"diffs":[[0,"edEntry("],[1,"self."],[0,"startNod"]],"start1":1992,"start2":1992,"length1":16,"length2":21}]],"length":6068,"saved":false}
{"ts":1351182281245,"patch":[[{"diffs":[[0,"    "],[-1,"var initial"],[1,"this.start"],[0,"Node"]],"start1":1256,"start2":1256,"length1":19,"length2":18}]],"length":6067,"saved":false}
{"ts":1351182291570,"patch":[[{"diffs":[[0," false;\n"],[1,"    this.startNode = null\n"],[0,"}\n\n/**\n "]],"start1":439,"start2":439,"length1":16,"length2":42}]],"length":6093,"saved":false}
{"ts":1351182292709,"patch":[[{"diffs":[[0,"e = null"],[1,";"],[0,"\n}\n\n/**\n"]],"start1":464,"start2":464,"length1":16,"length2":17}]],"length":6094,"saved":false}
{"ts":1351182307105,"patch":[[{"diffs":[[0,"ack("],[-1,"initialNode, "],[0,"goal"]],"start1":1497,"start2":1497,"length1":21,"length2":8}]],"length":6081,"saved":false}
{"ts":1351182312499,"patch":[[{"diffs":[[0,"depth = "],[-1,"initial"],[1,"this.start"],[0,"Node.fn;"]],"start1":1362,"start2":1362,"length1":23,"length2":26}]],"length":6084,"saved":false}
{"ts":1351182328427,"patch":[[{"diffs":[[0,"  }\n"],[-1,"    "],[0,"\n    "],[-1,"this.isGoal = "],[1,"if("],[0,"Rubi"]],"start1":2791,"start2":2791,"length1":31,"length2":16},{"diffs":[[0,"ate)"],[-1,";\n    \n    if(this.isGoal"],[0,")\n  "]],"start1":2851,"start2":2851,"length1":33,"length2":8}]],"length":6044,"saved":false}
{"ts":1351182332365,"patch":[[{"diffs":[[0,"[];\n"],[-1,"    this.isGoal = false;\n"],[0,"    "]],"start1":418,"start2":418,"length1":33,"length2":8}]],"length":6019,"saved":false}
{"ts":1351182345635,"patch":[[{"diffs":[[0,"        "],[-1,"this.frontier.remove()"],[0,"; \n     "]],"start1":3021,"start2":3021,"length1":38,"length2":16},{"diffs":[[0,"StarDepthLimted("],[-1,"null"],[1,"this.frontier.remove()"],[0,", depth);\n      "]],"start1":3100,"start2":3100,"length1":36,"length2":54}]],"length":6015,"saved":false}
{"ts":1351182348895,"patch":[[{"diffs":[[0,"  {\n"],[-1,"        localNode = null;\n        ; \n"],[0,"    "]],"start1":2991,"start2":2991,"length1":45,"length2":8}]],"length":5978,"saved":false}
{"ts":1351182350088,"patch":[[{"diffs":[[0,"isEmpty())\n    {"],[-1,"\n"],[0,"        \n       "]],"start1":2978,"start2":2978,"length1":33,"length2":32}]],"length":5977,"saved":false}
{"ts":1351182366837,"patch":[[{"diffs":[[0,"iveAStar"],[-1,"DepthLimted"],[1,"Callback"],[0,"(null, d"]],"start1":3214,"start2":3214,"length1":27,"length2":24}]],"length":5974,"saved":false}
{"ts":1351182367980,"patch":[[{"diffs":[[0,"iveAStar"],[-1,"DepthLimted"],[1,"Callback"],[0,"(node, d"]],"start1":2893,"start2":2893,"length1":27,"length2":24}]],"length":5971,"saved":false}
{"ts":1351182374771,"patch":[[{"diffs":[[0,"pthLimte"],[-1,"dEntry"],[0,"(self.st"]],"start1":1976,"start2":1976,"length1":22,"length2":16}]],"length":5965,"saved":false}
{"ts":1351182377898,"patch":[[{"diffs":[[0,"mted"],[-1,"Entry"],[0," = f"]],"start1":2078,"start2":2078,"length1":13,"length2":8}]],"length":5960,"saved":false}
{"ts":1351182385582,"patch":[[{"diffs":[[0,"r null.\n */\n"],[1," /*\n"],[0,"AStar.protot"]],"start1":4013,"start2":4013,"length1":24,"length2":28},{"diffs":[[0,"ll;  \n};"],[1,"*/"],[0,"\n\n/**\n *"]],"start1":5270,"start2":5270,"length1":16,"length2":18}]],"length":5966,"saved":false}
{"ts":1351182416615,"patch":[[{"diffs":[[0,"pthLimte"],[1,"d"],[0,"(self.st"]],"start1":1976,"start2":1976,"length1":16,"length2":17}]],"length":5967,"saved":false}
{"ts":1351182433032,"patch":[[{"diffs":[[0,"hLimted("],[-1,"this"],[1,"self"],[0,".frontie"]],"start1":3057,"start2":3057,"length1":20,"length2":20}]],"length":5967,"saved":false}
{"ts":1351182556619,"patch":[[{"diffs":[[0,");\n        }, 10"],[-1,"0"],[0,"); \n    }\n    el"]],"start1":3094,"start2":3094,"length1":33,"length2":32}]],"length":5966,"saved":false}
{"ts":1351182558920,"patch":[[{"diffs":[[0,"    }, 1"],[-1,"0"],[1,"1"],[0,"); \n    "]],"start1":3101,"start2":3101,"length1":17,"length2":17}]],"length":5966,"saved":false}
{"ts":1351182560068,"patch":[[{"diffs":[[0,"     }, "],[-1,"1"],[0,"1); \n   "]],"start1":3100,"start2":3100,"length1":17,"length2":16}]],"length":5965,"saved":false}
{"ts":1351182597625,"patch":[[{"diffs":[[0,")\n    {        \n"],[1,"        console.log(\"isEmpty\");\n"],[0,"        setTimeo"]],"start1":2974,"start2":2974,"length1":32,"length2":64}]],"length":5997,"saved":false}
{"ts":1351182613040,"patch":[[{"diffs":[[0,"\n    if("],[1,"node.RubixState && "],[0,"RubixSta"]],"start1":2760,"start2":2760,"length1":16,"length2":35}]],"length":6016,"saved":false}
{"ts":1351182649990,"patch":[[{"diffs":[[0,"ocessing"],[1,": "],[0,"\" + dept"]],"start1":1855,"start2":1855,"length1":16,"length2":18}]],"length":6018,"saved":false}
{"ts":1351182689727,"patch":[[{"diffs":[[0,"     }, "],[-1,"1"],[1,"0"],[0,"); \n    "]],"start1":3153,"start2":3153,"length1":17,"length2":17}]],"length":6018,"saved":false}
{"ts":1351182706135,"patch":[[{"diffs":[[0,"   \n"],[-1,"        console.log(\"isEmpty\");\n"],[0,"    "]],"start1":3007,"start2":3007,"length1":40,"length2":8}]],"length":5986,"saved":false}
{"ts":1351182710318,"patch":[[{"diffs":[[0," if("],[-1,"node.RubixState && "],[0,"Rubi"]],"start1":2766,"start2":2766,"length1":27,"length2":8}]],"length":5967,"saved":false}
{"ts":1351182722862,"patch":[[{"diffs":[[0,"hain(node);\n"],[1,"        \n        console.log(node.rubixState);\n"],[0,"    }\n\n    i"]],"start1":2744,"start2":2744,"length1":24,"length2":71}]],"length":6014,"saved":false}
{"ts":1351182755772,"patch":[[{"diffs":[[0,"else"],[-1,"\n    {\n        RubixNode.wipeBadChain(node);\n        \n        console.log(node.rubixState);\n    }\n\n  "],[0,"  if"]],"start1":2707,"start2":2707,"length1":109,"length2":8},{"diffs":[[0,"00); \n    }\n"],[1,"    else\n    {\n        RubixNode.wipeBadChain(node);\n        \n        console.log(node.rubixState);\n    }\n\n   \n"],[0,"    \n    if("]],"start1":2874,"start2":2874,"length1":24,"length2":135}]],"length":6024,"saved":false}
{"ts":1351182759263,"patch":[[{"diffs":[[0,"   else "],[-1," "],[0,"if(Rubix"]],"start1":2704,"start2":2704,"length1":17,"length2":16}]],"length":6023,"saved":false}
{"ts":1351182770741,"patch":[[{"diffs":[[0,"  }\n    "],[-1,"else "],[0,"if(Rubix"]],"start1":2699,"start2":2699,"length1":21,"length2":16}]],"length":6018,"saved":false}
{"ts":1351182778287,"patch":[[{"diffs":[[0,"s;\n    \n    "],[1,"if(RubixState.isEqual(node.rubixState, AStar.goalState))\n    {\n        setTimeout(function() {\n            self.iterativeAStarCallback(node, depth);\n        }, 100); \n    }\n    \n    else "],[0,"if(node.fn <"]],"start1":2134,"start2":2134,"length1":24,"length2":211},{"diffs":[[0,"    "],[-1,"if(RubixState.isEqual(node.rubixState, AStar.goalState))\n    {\n        setTimeout(function() {\n            self.iterativeAStarCallback(node, depth);\n        }, 100); \n    }"],[0,"\n   "]],"start1":2890,"start2":2890,"length1":180,"length2":8}]],"length":6033,"saved":false}
{"ts":1351182779443,"patch":[[{"diffs":[[0,"100); \n    }"],[-1,"\n"],[0,"    \n    els"]],"start1":2306,"start2":2306,"length1":25,"length2":24}]],"length":6032,"saved":false}
{"ts":1351182782662,"patch":[[{"diffs":[[0,"}\n    }\n"],[-1,"    \n"],[0,"    else"]],"start1":2881,"start2":2881,"length1":21,"length2":16}]],"length":6027,"saved":false}
{"ts":1351182802685,"patch":[[{"diffs":[[0,"  }, 100); \n"],[1,"        return;\n"],[0,"    }    \n  "]],"start1":2301,"start2":2301,"length1":24,"length2":40}]],"length":6043,"saved":false}
{"ts":1351182838306,"patch":[[{"diffs":[[0,"e);\n"],[-1,"        \n        console.log(node.rubixState);\n"],[0,"    "]],"start1":2954,"start2":2954,"length1":55,"length2":8}]],"length":5996,"saved":false}
{"ts":1351183143847,"patch":[[{"diffs":[[0,");\n        }, 10"],[-1,"0"],[0,"); \n        retu"]],"start1":2292,"start2":2292,"length1":33,"length2":32}]],"length":5995,"saved":false}
{"ts":1351183146677,"patch":[[{"diffs":[[0,");\n        }, 10"],[-1,"0"],[0,"); \n    }\n};\n\n/*"]],"start1":3257,"start2":3257,"length1":33,"length2":32}]],"length":5994,"saved":false}
{"ts":1351183159161,"patch":[[{"diffs":[[0,"    }, 0); \n"],[1,"        console.log(\"popped\");\n"],[0,"    }\n    el"]],"start1":3131,"start2":3131,"length1":24,"length2":55}]],"length":6025,"saved":false}
{"ts":1351183326830,"patch":[[{"diffs":[[0," + depth"],[1," + \"</br>Now Processing: \" + (depth + 1)"],[0,");\n\n    "]],"start1":1866,"start2":1866,"length1":16,"length2":56}]],"length":6065,"saved":false}
{"ts":1351183332690,"patch":[[{"diffs":[[0,"     }, "],[1,"1"],[0,"0); \n   "]],"start1":3170,"start2":3170,"length1":16,"length2":17}]],"length":6066,"saved":false}
{"ts":1351183359100,"patch":[[{"diffs":[[0," + \""],[-1,"</br>"],[1,"  "],[0,"Now "]],"start1":1874,"start2":1874,"length1":13,"length2":10}]],"length":6063,"saved":false}
{"ts":1351183448059,"patch":[[{"diffs":[[0,"th);\n        }, "],[-1,"1"],[0,"0); \n        con"]],"start1":3159,"start2":3159,"length1":33,"length2":32}]],"length":6062,"saved":false}
{"ts":1351183498203,"patch":[[{"diffs":[[0,"= null;\n"],[1,"    this.intervalPtr = null;\n"],[0,"}\n\n/**\n "]],"start1":441,"start2":441,"length1":16,"length2":45}]],"length":6091,"saved":false}
{"contributors":["jfdbear1@gmail.com"],"silentsave":false,"ts":1351188464121,"patch":[[{"diffs":[[0,"State();"],[1,"\nAStar.loopsBeforeCallback = 5000;"],[0,"\n\nfuncti"]],"start1":242,"start2":242,"length1":16,"length2":50},{"diffs":[[0," + 1));\n"],[-1,""],[0,""],[1,"        console.log(\"new level\");"],[0,"\n       "]],"start1":1969,"start2":1969,"length1":16,"length2":49},{"diffs":[[0,"  }, 100"],[-1,""],[0,""],[1," * depth"],[0,"); \n    "]],"start1":2154,"start2":2154,"length1":16,"length2":24},{"diffs":[[0," this;\n    \n"],[1,"    for(var tempIndex = 0; tempIndex < AStar.loopsBeforeCallback; tempIndex ++)\n    {\n    "],[0,"    if(Rubix"]],"start1":2271,"start2":2271,"length1":24,"length2":114},{"diffs":[[0,"e))\n    "],[-1,"{\n"],[1,"    {\n   "],[0,"        "],[1," "],[0,"setTimeo"]],"start1":2430,"start2":2430,"length1":26,"length2":34},{"diffs":[[0,"ut(function() {\n"],[1,"    "],[0,"            self"]],"start1":2464,"start2":2464,"length1":32,"length2":36},{"diffs":[[0,"h);\n        "],[1,"    "],[0,"},"],[-1," 1"],[0,"0); \n"],[1,"    "],[0,"        retu"]],"start1":2534,"start2":2534,"length1":33,"length2":39},{"diffs":[[0,"    "],[1," "],[1,"   "],[0,"}    \n"],[1,"    "],[0,"    "]],"start1":2577,"start2":2577,"length1":14,"length2":22},{"diffs":[[0," depth)\n    "],[-1,"{\n"],[1,"    {\n    "],[0,"        this"]],"start1":2616,"start2":2616,"length1":26,"length2":34},{"diffs":[[0,"e);\n            "],[1," "],[-1,"\n"],[1,"   \n    "],[0,"        for (thi"]],"start1":2691,"start2":2691,"length1":33,"length2":41},{"diffs":[[0,"ndex++)\n        "],[1,"    "],[0,"{        \n      "]],"start1":2823,"start2":2823,"length1":32,"length2":36},{"diffs":[[0,"      {        \n"],[1,"    "],[0,"            if(t"]],"start1":2837,"start2":2837,"length1":32,"length2":36},{"diffs":[[0,"th)\n            "],[1,"  "],[-1,"{\n"],[1,"  {\n    "],[0,"                "]],"start1":2909,"start2":2909,"length1":34,"length2":42},{"diffs":[[0,"   \n            "],[-1,"}\n"],[1,"    }\n    "],[0,"            else"]],"start1":3034,"start2":3034,"length1":34,"length2":42},{"diffs":[[0,"lse\n            "],[1,"  "],[1,"  "],[0,"{        \n      "]],"start1":3073,"start2":3073,"length1":32,"length2":36},{"diffs":[[0,"      {        \n"],[1,"    "],[0,"                "]],"start1":3087,"start2":3087,"length1":32,"length2":36},{"diffs":[[0,"   \n            "],[1,"    "],[0,"}\n        }\n    "]],"start1":3175,"start2":3175,"length1":32,"length2":36},{"diffs":[[0,"    "],[1," "],[1,"   }\n        "],[0,"}\n    "],[-1,"}\n"],[0,"    "]],"start1":3201,"start2":3201,"length1":16,"length2":28},{"diffs":[[0,"       else\n    "],[1," "],[-1,"{\n"],[1,"   {\n    "],[0,"        RubixNod"]],"start1":3222,"start2":3222,"length1":34,"length2":42},{"diffs":[[0,"e);\n"],[1,"        }   \n        \n        if(!this.frontier.isEmpty())\n        {        \n            node = self.frontier.remove();\n            \n        }\n        else\n        {          \n            setTimeout(function() {\n                self.iterativeAStarCallback(null, depth);\n            }, 1000); \n            return;\n        }\n"],[0,"    }"],[-1,"\n\n   "],[0,"\n   "]],"start1":3282,"start2":3282,"length1":18,"length2":336},{"diffs":[[0,"y())\n    {  "],[-1,"      "],[0,""],[1,""],[0,"\n        set"]],"start1":3648,"start2":3648,"length1":30,"length2":24},{"diffs":[[0,"); \n"],[-1,"        console.log(\"popped\");\n"],[0,"    "]],"start1":3780,"start2":3780,"length1":39,"length2":8},{"diffs":[[0,"   }, 10"],[1,"00"],[0,"); \n"],[1,"        return;\n"],[0,"    }\n};"]],"start1":3906,"start2":3906,"length1":20,"length2":38}]],"length":6653,"saved":false}
{"ts":1351188519048,"patch":[[{"diffs":[[0,"k = "],[-1,"5"],[1,"10"],[0,"000;"]],"start1":275,"start2":275,"length1":9,"length2":10}]],"length":6654,"saved":false}
{"ts":1351188576660,"patch":[[{"diffs":[[0,", 100 * "],[1,"depth*"],[0,"depth); "]],"start1":2158,"start2":2158,"length1":16,"length2":22}]],"length":6660,"saved":false}
{"ts":1351188709919,"patch":[[{"diffs":[[0,"ut(function() {\n"],[1,"            self.frontier = new PriorityMinQueue();\n"],[0,"            self"]],"start1":2063,"start2":2063,"length1":32,"length2":84}]],"length":6712,"saved":false}
{"ts":1351188776549,"patch":[[{"diffs":[[0,"0 * "],[-1,"depth*"],[1,"Math.exp(2,"],[0,"dept"]],"start1":2214,"start2":2214,"length1":14,"length2":19}]],"length":6717,"saved":false}
{"ts":1351188779436,"patch":[[{"diffs":[[0,"2,depth)"],[1,")"],[0,"; \n    }"]],"start1":2227,"start2":2227,"length1":16,"length2":17}]],"length":6718,"saved":false}
{"ts":1351188897693,"patch":[[{"diffs":[[0,"            "],[1,"console.loG("],[0,"self.frontie"]],"start1":2079,"start2":2079,"length1":24,"length2":36},{"diffs":[[0,"oG(self.frontier"],[1,")"],[0," = new PriorityM"]],"start1":2100,"start2":2100,"length1":32,"length2":33}]],"length":6731,"saved":false}
{"ts":1351188901410,"patch":[[{"diffs":[[0,"er) "],[-1,"= new PriorityMinQueue();"],[0,"\n   "]],"start1":2114,"start2":2114,"length1":33,"length2":8}]],"length":6706,"saved":false}
{"ts":1351188903687,"patch":[[{"diffs":[[0,"rontier)"],[-1," "],[1,";"],[0,"\n       "]],"start1":2109,"start2":2109,"length1":17,"length2":17}]],"length":6706,"saved":false}
{"ts":1351188920837,"patch":[[{"diffs":[[0," 10000;\n"],[1,"AStar.self = null;"],[0,"\nfunctio"]],"start1":278,"start2":278,"length1":16,"length2":34}]],"length":6724,"saved":false}
{"ts":1351188927876,"patch":[[{"diffs":[[0,"       \n        "],[-1,"var "],[1,"AStar."],[0,"self = this;\n   "]],"start1":1447,"start2":1447,"length1":36,"length2":38}]],"length":6726,"saved":false}
{"ts":1351188930791,"patch":[[{"diffs":[[0,") {\n            "],[1,"AStar."],[0,"self.iterativeAS"]],"start1":1519,"start2":1519,"length1":32,"length2":38}]],"length":6732,"saved":false}
{"ts":1351188932993,"patch":[[{"diffs":[[0,"r);\n            "],[1,"AStar."],[0,"self.iterativeAS"]],"start1":2141,"start2":2141,"length1":32,"length2":38}]],"length":6738,"saved":false}
{"ts":1351188935236,"patch":[[{"diffs":[[0,"\");\n"],[-1,"        var self = this;\n"],[0,"    "]],"start1":2034,"start2":2034,"length1":33,"length2":8}]],"length":6713,"saved":false}
{"ts":1351188941003,"patch":[[{"diffs":[[0,"                "],[1,"AStar."],[0,"self.iterativeAS"]],"start1":2540,"start2":2540,"length1":32,"length2":38}]],"length":6719,"saved":false}
{"ts":1351188947237,"patch":[[{"diffs":[[0,"    "],[-1,"  setTimeout(function() {\n                AStar.self.iterativeAStarCallback(node, depth);\n            },0); "],[0,"\n   "]],"start1":2510,"start2":2510,"length1":116,"length2":8}]],"length":6611,"saved":false}
{"ts":1351188949679,"patch":[[{"diffs":[[0,"      {\n"],[-1,"          \n"],[0,"        "]],"start1":2496,"start2":2496,"length1":27,"length2":16}]],"length":6600,"saved":false}
{"ts":1351188977771,"patch":[[{"diffs":[[0,"  }\n};\n\n"],[1,"AStar.goalTimeout setTimeout(function() {\n                AStar.self.iterativeAStarCallback(node, depth);\n            },0); "],[0,"\nAStar.p"]],"start1":2236,"start2":2236,"length1":16,"length2":140},{"diffs":[[0,"ate))\n        {\n"],[1,"             setTimeout(function() {\n                AStar.self.iterativeAStarCallback(node, depth);\n            },0); \n"],[0,"            retu"]],"start1":2612,"start2":2612,"length1":32,"length2":152}]],"length":6844,"saved":false}
{"ts":1351188987456,"patch":[[{"diffs":[[0,"Timeout "],[-1,"setTimeout("],[1,"= "],[0,"function"]],"start1":2254,"start2":2254,"length1":27,"length2":18},{"diffs":[[0,"out = function()"],[-1," "],[0,"{\n              "]],"start1":2258,"start2":2258,"length1":33,"length2":32}]],"length":6834,"saved":false}
{"ts":1351188990176,"patch":[[{"diffs":[[0,"       }"],[-1,",0)"],[0,"; \nAStar"]],"start1":2345,"start2":2345,"length1":19,"length2":16}]],"length":6831,"saved":false}
{"ts":1351188996838,"patch":[[{"diffs":[[0,"tar."],[-1,"self.iterativeAStarCallback(node, depth)"],[1,"goalTimeout"],[0,";\n  "]],"start1":2670,"start2":2670,"length1":48,"length2":19}]],"length":6802,"saved":false}
{"ts":1351189010689,"patch":[[{"diffs":[[0,"se\n        {"],[-1,"          "],[1,"AStar.self"],[0,"\n           "]],"start1":3588,"start2":3588,"length1":34,"length2":34}]],"length":6802,"saved":false}
{"contributors":["jfdbear1@gmail.com"],"silentsave":false,"ts":1351192961737,"patch":[[{"diffs":[[0,"k = 1000"],[-1,"0"],[0,""],[1,""],[0,";\nAStar."]],"start1":275,"start2":275,"length1":17,"length2":16},{"diffs":[[0,"ll;\n"],[-1,"    this.intervalPtr = null;\n"],[0,"}\n\n/"]],"start1":497,"start2":497,"length1":37,"length2":8},{"diffs":[[0,"));\n"],[-1,"        console.log(\"new level\");\n"],[0,"    "]],"start1":1970,"start2":1970,"length1":42,"length2":8},{"diffs":[[0,") {\n"],[-1,"            console.loG(self.frontier);\n"],[0,"    "]],"start1":2012,"start2":2012,"length1":48,"length2":8},{"diffs":[[0,"DepthLimted("],[1,"AStar."],[0,"self.startNo"]],"start1":2053,"start2":2053,"length1":24,"length2":30},{"diffs":[[0,"tar."],[-1,"goalTimeout = function(){\n                "],[1,"prototype.iterativeAStarDepthLimted = function(node, depth)\n{    \n    var localNode = node;\n    node = null;\n    var endSearch = function(){"],[0,"ASta"]],"start1":2148,"start2":2148,"length1":50,"length2":148},{"diffs":[[0,"allback("],[-1,"n"],[1,"localN"],[0,"ode, dep"]],"start1":2318,"start2":2318,"length1":17,"length2":22},{"diffs":[[0,"th);"],[-1,"\n            }; \nAStar.prototype.iterativeAStarDepthLimted = function(node"],[1," }; \n    var continueSearch = function() {AStar.self.iterativeAStarDepthLimted(AStar.self.frontier.remove()"],[0,", depth)"],[-1,"\n{"],[1,";};"],[0,"    "]],"start1":2340,"start2":2340,"length1":92,"length2":126},{"diffs":[[0,"    "],[-1,"var self = this;"],[0,"\n   "]],"start1":2467,"start2":2467,"length1":24,"length2":8},{"diffs":[[0,"isEqual("],[-1,"n"],[1,"localN"],[0,"ode.rubi"]],"start1":2585,"start2":2585,"length1":17,"length2":22},{"diffs":[[0,"  {\n            "],[-1," "],[0,"setTimeout(funct"]],"start1":2639,"start2":2639,"length1":33,"length2":32},{"diffs":[[0,"out("],[-1,"function() {\n                AStar.goalTimeout;\n            }"],[1,"endSearch"],[0,",0);"]],"start1":2662,"start2":2662,"length1":69,"length2":17},{"diffs":[[0,"else if("],[-1,"n"],[1,"localN"],[0,"ode.fn <"]],"start1":2723,"start2":2723,"length1":17,"length2":22},{"diffs":[[0,"cessors("],[-1,"n"],[1,"localN"],[0,"ode);\n  "]],"start1":2809,"start2":2809,"length1":17,"length2":22},{"diffs":[[0,"              }\n"],[1,"                this.successors[this.index] = null;\n"],[0,"            }\n  "]],"start1":3315,"start2":3315,"length1":32,"length2":84},{"diffs":[[0,"adChain("],[-1,"n"],[1,"localN"],[0,"ode);\n  "]],"start1":3457,"start2":3457,"length1":17,"length2":22},{"diffs":[[0,"        "],[-1,"node = "],[1,"localNode = null;\n            localNode = AStar."],[0,"self.fro"]],"start1":3558,"start2":3558,"length1":23,"length2":64},{"diffs":[[0,"emove();"],[-1,"\n  "],[0,"    "],[-1,"      "],[1,"\n"],[0,"\n       "]],"start1":3629,"start2":3629,"length1":29,"length2":21},{"diffs":[[0,"   {"],[-1,"AStar.self\n            setTimeout(function() {\n                self.iterativeAStarCallback(null, depth);\n            }, 1000); \n            return;\n        }\n    }\n    \n    if(!this.frontier.isEmpty())\n    {  \n        setTimeout(function() {\n            self.iterativeAStarDepthLimted(self.frontier.remove(), depth);\n        }, 0); \n    }\n    else\n    {          \n        setTimeout(function() {\n            self.iterativeAStarCallback(null, depth);\n        }"],[1,"          \n            localNode = null;\n            setTimeout(endSearch, 1000); \n            return;\n        }\n    }\n    \n    if(!this.frontier.isEmpty())\n    {  \n        setTimeout(continueSearch, 0); \n        localNode = null;\n        node = null;\n    }\n    else\n    {          \n        localNode = null;\n        setTimeout(endSearch"],[0,", 10"]],"start1":3671,"start2":3671,"length1":467,"length2":345},{"diffs":[[0,"\n */"],[-1,"\n /*\nAStar.prototype.iterativeAStarDepthLimted = function(currentNode, depth)\n{      \n    var localNode = currentNode;\n    var isGoal = false;\n    var successors = null, size = 0, index = 0;\n\n    do {\n        if(localNode.fn < depth)\n        {\n            successors = RubixNode.getSuccessors(localNode);        \n            \n            for (index = 0, size = successors.length; index< successors.length; index++)\n            {        \n                if(successors[index].fn <= depth)\n                {\n                    this.frontier.insert(successors[index].fn, successors[index]);    \n                }\n                else\n                {        \n                    RubixNode.wipeBadChain(successors[index]);   \n                }\n            }\n        }\n        else\n        {\n            RubixNode.wipeBadChain(localNode);\n        }\n        \n        \n        if(!this.frontier.isEmpty())\n        {\n            //this.record.push(localNode);\n            localNode = null;\n            localNode = this.frontier.remove(); \n        }\n        \n        isGoal = RubixState.isEqual(localNode.rubixState, AStar.goalState);\n\n       console.log(\"popped\");\n    }while(!this.frontier.isEmpty() && !isGoal);\n    \n    return isGoal ? localNode : null;  \n};*/"],[0,"\n\n/*"]],"start1":4809,"start2":4809,"length1":1264,"length2":8}]],"length":5499,"saved":false}
{"contributors":["jfdbear1@gmail.com"],"silentsave":false,"ts":1351199462482,"patch":[[{"diffs":[[0,"k = 1000"],[-1,""],[0,""],[1,"0"],[0,";\nAStar."]],"start1":275,"start2":275,"length1":16,"length2":17},{"diffs":[[0,"= null;\n"],[1,"\n"],[0,"function"]],"start1":297,"start2":297,"length1":16,"length2":17},{"diffs":[[0,"     }\n        \n"],[1,"        for (var i = 0; i < 10; i ++)\n        {\n            RubixState.rotate(initialState,Math.floor(Math.random()*6), Math.floor(Math.random()*3 + 1));  \n        }\n        console.log(RubixState.toString(initialState));\n        \n"],[0,"        // Preve"]],"start1":1003,"start2":1003,"length1":32,"length2":263},{"diffs":[[0,"out(function() {"],[-1,""],[0,""],[1,"            "],[0,"\n            ASt"]],"start1":2232,"start2":2232,"length1":32,"length2":44},{"diffs":[[0,"= node;\n    "],[-1,"n"],[1,"var tempN"],[0,"ode = null;\n"]],"start1":2481,"start2":2481,"length1":25,"length2":33},{"diffs":[[0,"    "],[-1,"this.successors = RubixNode.getSuccessors(localNode);"],[1,"localNode.rc++;\n            \n            for(var i = 0; i < 6; i++)"],[0,"\n   "]],"start1":3024,"start2":3024,"length1":61,"length2":75},{"diffs":[[0,"    "],[1,"  {\n"],[0,"      "],[-1,"\n            for (this.index = 0, this.size = this.successors.length; this.index< this.successors.length; this.index"],[1,"          /* \n                 * Do the face culling. Prevent redundant face rotations with the first condition.\n                 * The second condition prevents duplicate states from arising due to rotating\n                 * opposing faces.\n                 */\n                if(localNode.nodeAction && (i === localNode.nodeAction >> 4 ||\n                    (i > 2  && RubixNode.faceCulling[(localNode.nodeAction >> 4)] == i)))\n                {\n                    continue;\n                }\n                \n                for(var j = 1; j < 4; j"],[0,"++)\n"]],"start1":3102,"start2":3102,"length1":130,"length2":572},{"diffs":[[0,"            "],[-1,"{"],[0,"    "],[1,"{\n"],[0,"    "],[-1,"\n"],[0,"            "]],"start1":3674,"start2":3674,"length1":34,"length2":34},{"diffs":[[0,"    "],[-1,"if(this.successors[this.index]"],[1,"tempNode = new RubixNode(RubixState.copy(localNode.rubixState), \n                        localNode, i, j);\n                        \n                    if(tempNode"],[0,".fn <="],[-1," "],[0,"dept"]],"start1":3708,"start2":3708,"length1":45,"length2":177},{"diffs":[[0,"                "],[-1,"{\n"],[1,"    {\n    "],[0,"                "]],"start1":3888,"start2":3888,"length1":34,"length2":42},{"diffs":[[0,"rt(t"],[-1,"his.successors[this.index].fn, this.successors[this.index]"],[1,"empNode.fn, tempNode"],[0,");"],[1,"\n"],[0,"    "],[-1,"\n"],[0,"    "]],"start1":3952,"start2":3952,"length1":73,"length2":35},{"diffs":[[0,"                "],[1,"   "],[1," "],[0,"else\n           "]],"start1":4001,"start2":4001,"length1":32,"length2":36},{"diffs":[[0,"            "],[-1,"{"],[0,"    "],[1,"{\n"],[0,"    "],[-1,"\n"],[0,"            "]],"start1":4030,"start2":4030,"length1":34,"length2":34},{"diffs":[[0,"in(t"],[-1,"his.successors[this.index]);   \n                }\n                this.successors[this.index] = null"],[1,"empNode);\n                    }                    \n                }   \n            }  \n            \n            if(--localNode.rc === 0 )\n            {\n                RubixNode.wipeBadChain(localNode)"],[0,";\n  "]],"start1":4092,"start2":4092,"length1":108,"length2":211},{"diffs":[[0,";\n            }\n"],[1,"            \n"],[0,"        }\n      "]],"start1":4299,"start2":4299,"length1":32,"length2":45},{"diffs":[[0,"Search, "],[-1,""],[0,""],[1,"10"],[0,"0); \n   "]],"start1":4798,"start2":4798,"length1":16,"length2":18}]],"length":6432,"saved":false}
{"ts":1351199514203,"patch":[[{"diffs":[[0,"      }\n        "],[1,"/*"],[0,"\n        for (va"]],"start1":1002,"start2":1002,"length1":32,"length2":34},{"diffs":[[0,"1));  \n        }"],[1,"*/\n        \n        RubixState.rotate(initialState,0,1);\n        "],[0,"\n        console"]],"start1":1170,"start2":1170,"length1":32,"length2":97}]],"length":6499,"saved":false}
{"ts":1351199550227,"patch":[[{"diffs":[[0,"State,0,1);\n"],[1,"                RubixState.rotate(initialState,1,1);\n\n        RubixState.rotate(initialState,2,1);\n\n        RubixState.rotate(initialState,3,1);\n        RubixState.rotate(initialState,4,1);\n        RubixState.rotate(initialState,5,1);\n        RubixState.rotate(initialState,6,1);\n        RubixState.rotate(initialState,0,2);\n        RubixState.rotate(initialState,1,2);\n        RubixState.rotate(initialState,2,2);\n        RubixState.rotate(initialState,3,2);\n\n"],[0,"        \n   "]],"start1":1231,"start2":1231,"length1":24,"length2":485}]],"length":6960,"saved":false}
{"ts":1351199555839,"patch":[[{"diffs":[[0,"e,0,1);\n"],[-1,"        "],[0,"        "]],"start1":1235,"start2":1235,"length1":24,"length2":16},{"diffs":[[0,"State,1,1);\n"],[-1,"\n"],[0,"        Rubi"]],"start1":1276,"start2":1276,"length1":25,"length2":24},{"diffs":[[0,"e,2,1);\n"],[-1,"\n"],[0,"        "]],"start1":1325,"start2":1325,"length1":17,"length2":16}]],"length":6950,"saved":false}
{"contributors":[],"silentsave":false,"ts":1351199649886,"patch":[[{"diffs":[[0,"ate,"],[-1,"6"],[1,"0"],[0,",1);\n"],[-1,"        RubixState.rotate(initialState,0,2);\n"],[0,"    "]],"start1":1503,"start2":1503,"length1":59,"length2":14},{"diffs":[[0,"te,3,2);"],[1,"\n        RubixState.rotate(initialState,4,2);"],[0,"\n\n      "]],"start1":1639,"start2":1639,"length1":16,"length2":61}]],"length":6950,"saved":false}
{"ts":1351205282750,"patch":[[{"diffs":[[0,"back = 1"],[-1,"0"],[1,"5"],[0,"000;\nASt"]],"start1":272,"start2":272,"length1":17,"length2":17},{"diffs":[[0,"}*/\n"],[-1,"        \n        RubixState.rotate(initialState,0,1);\n        RubixState.rotate(initialState,1,1);\n        RubixState.rotate(initialState,2,1);\n        RubixState.rotate(initialState,3,1);\n        RubixState.rotate(initialState,4,1);\n        RubixState.rotate(initialState,5,1);\n        RubixState.rotate(initialState,0,1);\n        RubixState.rotate(initialState,1,2);\n        RubixState.rotate(initialState,2,2);\n        RubixState.rotate(initialState,3,2);\n        RubixState.rotate(initialState,4,2);"],[0,"\n\n  "]],"start1":1185,"start2":1185,"length1":511,"length2":8}]],"length":6447,"saved":false}
{"ts":1351205304222,"patch":[[{"diffs":[[0,"Search, "],[-1,"1"],[1,"5"],[0,"00); \n  "]],"start1":4813,"start2":4813,"length1":17,"length2":17}]],"length":6447,"saved":false}
{"ts":1351205342746,"patch":[[{"diffs":[[0,"+ 1));\n         "],[1,"console.log(\"Finished processing: \" + depth + \"  Now Processing: \" + (depth + 1));"],[0,"\n        setTime"]],"start1":2215,"start2":2215,"length1":32,"length2":114}]],"length":6529,"saved":false}
