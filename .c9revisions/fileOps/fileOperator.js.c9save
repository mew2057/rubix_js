{"ts":1349395480701,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1349395495657,"patch":[[{"diffs":[[1,"function FileAnalyzer()\n{\n    \n}"]],"start1":0,"start2":0,"length1":0,"length2":32}]],"length":32,"saved":false}
{"ts":1349395517091,"patch":[[{"diffs":[[0,"{\n    \n}"],[1,"\n\nFileAnalyzer.run()\n{\n    \n}"]],"start1":24,"start2":24,"length1":8,"length2":37}]],"length":61,"saved":false}
{"ts":1349395518215,"patch":[[{"diffs":[[0,"r.run()\n{\n    \n}"],[1,";"]],"start1":45,"start2":45,"length1":16,"length2":17}]],"length":62,"saved":false}
{"contributors":[],"silentsave":false,"ts":1349710270694,"patch":[[{"diffs":[[-1,"function FileAnalyzer()\n{\n    "],[1,"/*  ---------------\n    fileOperator.js\n    A collection of operations that make use of the HTML5 file api. This contains\n    convenience functions to handle file io on a browser.\n    \n    ----------------------------------------------------------------------------\n    10-4-12:\n        Updated By: John Dunham\n        Notes: Created the file and class. Opted for a psuedo singleton, as \n            there should really only be one of these per window.\n    ---------------\n */\nfunction FileOperator()\n{\n    this.text = \"\";\n    this.toWrite = \"\";\n    this.downloadURL = \"\";\n}\n\nFileOperator.operator = null;\n\nFileOperator.init = function()\n{\n    FileOperator.operator = new FileOperator();\n\n    window.requestFileSystem  = window.requestFileSystem || window.webkitRequestFileSystem;\n       \n    window.addEventListener(\"drop\",FileOperator.operator.drop);\n    window.addEventListener(\"dragEnter\",FileOperator.operator.nullEffects);    \n};\n\nFileOperator.prototype.nullEffects = function(e)\n{\n    e.stopPropagation();\n    e.preventDefault();"],[0,"\n}"],[1,";"],[0,"\n\nFile"],[-1,"Analyzer.run()\n{\n    \n};"],[1,"Operator.prototype.drop = function(e)\n{\n    e.stopPropagation();\n    e.preventDefault();\n    \n    console.log(e.dataTransfer.files[0]);\n    var reader = new FileReader();\n    \n    reader.onload = function(e)\n    {\n        console.log(e.target.result);\n        FileOperator.operator.processFileText(e.target.result.toString());\n    };\n    \n    reader.readAsText(e.dataTransfer.files[0]);\n};\n\nFileOperator.prototype.processFileText = function(input)\n{\n    this.text = input.replace(/\\s/g,'');\n    \n    //This code needs to go somewhere else --John\n    var faces = [];\n\n    // Iterate over the input string to organize our data.\n    for(var index = 0, line= \" \",length = this.text.length / 9; index <length; index++)\n    {\n        line = this.text.substring(index*9,index*9 + 9);\n        \n        // Switch on indices in a manner befitting of a boss.\n        switch(index)\n        {\n            case 1:\n                faces.push(line.substring(0,3));\n                faces.push(line.substring(3,6));\n                faces.push(line.substring(6,9));\n                break;\n            case 2 :\n            case 3 :\n                faces[1] += line.substring(0,3);\n                faces[2] += line.substring(0,3);\n                faces[3] += line.substring(0,3);\n                break;\n            default:\n                faces.push(line);\n                break;\n        }        \n    }\n    \n    FileOperator.presentForDownload(\"This is some dummy data.\");\n};\n\nfunction generalErrorHandler(e)\n{\n    console.log(\"Error\" + e);\n}\n\nFileOperator.presentForDownload = function(data)\n{\n    FileOperator.operator.toWrite = data;\n    // Initialize the sandboxed file system \n    // I allocated 10 MB, but I don't think we'll need that much (will refine)\n    window.requestFileSystem(window.TEMPORARY, 10*1024*1024 , FileOperator.operator.writeAndPresent, generalErrorHandler);\n};\n\nFileOperator.prototype.writeAndPresent = function(fs)\n{\n    fs.root.getFile('rubixOutput.txt',{create: true}, function(file){\n        FileOperator.operator.downloadURL = file.toURL();\n        \n        file.createWriter(function(fileWriter){\n            fileWriter.onwriteend = function(e){\n              console.log(\"File Write Complete: \" + e.toString());\n\n            // Presents the file created for downloading.\n            $('<a id=\"dl\" href=\"' + FileOperator.operator.downloadURL + \n                '\" download=\"rubixOutput.txt\">RECIEVE YOUR '+\n                'BIRTHRIGHT!</a>').prependTo(\"body\");\n            };\n            \n            fileWriter.onerror = function(e){\n              console.log(\"File Write Failed: \" + e.toString());\n            };\n            \n            var blob = new Blob([FileOperator.operator.toWrite], \n                {type: 'text/plain'});\n            \n            fileWriter.write(blob);\n        },generalErrorHandler);\n        \n    },generalErrorHandler);\n};\n"]],"start1":0,"start2":0,"length1":62,"length2":3912}]],"length":3912,"saved":false}
{"ts":1349710301929,"patch":[[{"diffs":[[0,"e = data"],[1,".toString()"],[0,";\n    //"]],"start1":2653,"start2":2653,"length1":16,"length2":27}]],"length":3923,"saved":false}
{"ts":1349710332101,"patch":[[{"diffs":[[0,"ion(data"],[1,", functionCallback"],[0,")\n{\n    "]],"start1":2609,"start2":2609,"length1":16,"length2":34}]],"length":3941,"saved":false}
{"ts":1349710339224,"patch":[[{"diffs":[[0,"Callback)\n{\n"],[1,"    if(functionCallback)\n    \n"],[0,"    FileOper"]],"start1":2627,"start2":2627,"length1":24,"length2":54}]],"length":3971,"saved":false}
{"ts":1349710340165,"patch":[[{"diffs":[[0,"llback)\n    "],[1,"{\n        "],[0,"\n    FileOpe"]],"start1":2656,"start2":2656,"length1":24,"length2":34}]],"length":3981,"saved":false}
{"ts":1349710340976,"patch":[[{"diffs":[[0," {\n        \n"],[1,"        \n"],[0,"    FileOper"]],"start1":2667,"start2":2667,"length1":24,"length2":33}]],"length":3990,"saved":false}
{"ts":1349710341810,"patch":[[{"diffs":[[0,"       \n    "],[-1,"    "],[1,"}"],[0,"\n    FileOpe"]],"start1":2671,"start2":2671,"length1":28,"length2":25}]],"length":3987,"saved":false}
{"ts":1349710360256,"patch":[[{"diffs":[[0,")\n    {\n        "],[1,"FileOperator.operator.toWrite = data.functionCallback();\n   "],[0,"\n    }\n    FileO"]],"start1":2662,"start2":2662,"length1":32,"length2":92}]],"length":4047,"saved":false}
{"ts":1349710376687,"patch":[[{"diffs":[[0,"k();\n   "],[1," }"],[0,"\n    "],[-1,"}\n"],[1,"else\n    {\n    "],[0,"    File"]],"start1":2730,"start2":2730,"length1":23,"length2":38},{"diffs":[[0,"toString();\n"],[1,"    }\n"],[0,"    // Initi"]],"start1":2801,"start2":2801,"length1":24,"length2":30}]],"length":4068,"saved":false}
{"ts":1349710377451,"patch":[[{"diffs":[[0,"ng();\n    }\n"],[1,"    \n"],[0,"    // Initi"]],"start1":2807,"start2":2807,"length1":24,"length2":29}]],"length":4073,"saved":false}
{"contributors":[],"silentsave":false,"ts":1349930327880,"patch":[[{"diffs":[[0," \n    }\n    "],[1,"RubixState.initWithArray(faces);"],[0,"\n    FileOpe"]],"start1":2421,"start2":2421,"length1":24,"length2":56}]],"length":4105,"saved":false}
{"ts":1349930343705,"patch":[[{"diffs":[[0,"init"],[-1,"With"],[1,"From"],[0,"Arra"]],"start1":2444,"start2":2444,"length1":12,"length2":12}]],"length":4105,"saved":false}
{"ts":1349930459437,"patch":[[{"diffs":[[0,"     \n    }\n"],[1,"    for(var face in faces)\n    {\n        \n    }\n    \n"],[0,"    RubixSta"]],"start1":2417,"start2":2417,"length1":24,"length2":77}]],"length":4158,"saved":false}
{"ts":1349930615288,"patch":[[{"diffs":[[0,")\n    {\n        "],[1,"faces[face] = faces[face].split('');"],[0,"\n    }\n    \n    "]],"start1":2454,"start2":2454,"length1":32,"length2":68}]],"length":4194,"saved":false}
{"ts":1349930617840,"patch":[[{"diffs":[[0,"     \n    }\n"],[1,"    \n"],[0,"    for(var "]],"start1":2417,"start2":2417,"length1":24,"length2":29}]],"length":4199,"saved":false}
{"ts":1349930698168,"patch":[[{"diffs":[[0," line.substring("],[-1,"0,3"],[1,"3,6"],[0,");\n             "]],"start1":2233,"start2":2233,"length1":35,"length2":35},{"diffs":[[0," line.substring("],[-1,"0,3"],[1,"6,9"],[0,");\n             "]],"start1":2282,"start2":2282,"length1":35,"length2":35}]],"length":4199,"saved":false}
