{"ts":1350089723423,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"/* ----------\r\n   rubixCube.js\r\n   \r\n   Represents the Rubik's cube as a JavaScript object.\r\n   ---------- */\r\n\r\n\r\n$(document).ready(function() {\r\n    var rubix = RubixState.initWithGoalState();\r\n\tconsole.log(rubix.toString());\r\n\trubix.rotate(RubixState.faces.top, 1);\r\n\trubix.rotate(RubixState.faces.right, 1);\r\n\tconsole.log(rubix.toString());\r\n});\r\n\r\n\r\n/**\r\n * A full representation of a single Rubik's cube state.\r\n * @return a default Rubik's state (i.e. an array of 20 undefined cubies)\r\n */\r\nfunction RubixState()\r\n{\r\n\tthis.cubies = new Array(20);\r\n}\r\n\r\n/**\r\n * Rotates the cube 1 to 3 rotations in the clockwise direction given the face.\r\n * @param {number} face the face of the cube to rotate\r\n * @param {number} rotations the number of rotations\r\n */\r\nRubixState.prototype.rotate = function(face, rotations)\r\n{\r\n\tvar indicies = RubixState.sideLookUpTable[face];\r\n    \r\n    var tempCubies = new Array(), newIndex, index;\r\n    \r\n    for (index = 0; index < indicies.length; index++)\r\n    {\r\n    \ttempCubies[indicies[index]] = this.cubies[indicies[index]];\r\n    \ttempCubies[indicies[index]].rotate(face, rotations);\r\n    }\r\n    \r\n    for (index = 0; index < indicies.length; index++)\r\n    {\r\n    \tnewIndex = (index + (2 * rotations)) % 8;\r\n    \tthis.cubies[indicies[newIndex]] = tempCubies[indicies[index]];\r\n    }\r\n};\r\n\r\n/**\r\n * Converts this cube to a formatted string. \r\n * @return the cube represented as a string\r\n */\r\nRubixState.prototype.toString = function()\r\n{\r\n\t// Back\r\n\trubixStr = \"   \" + this.cubies[0].getColor(RubixState.faces.back) + this.cubies[1].getColor(RubixState.faces.back) + this.cubies[2].getColor(RubixState.faces.back) + \"\\n\" +\r\n\t           \"   \" + this.cubies[3].getColor(RubixState.faces.back) + RubixState.colors.red + this.cubies[4].getColor(RubixState.faces.back) + \"\\n\" +\r\n\t           \"   \" + this.cubies[5].getColor(RubixState.faces.back) + this.cubies[6].getColor(RubixState.faces.back) + this.cubies[7].getColor(RubixState.faces.back) + \"\\n\" +\r\n\t// Left Top Right, 1st row\r\n\t           this.cubies[0].getColor(RubixState.faces.left) + this.cubies[3].getColor(RubixState.faces.left) + this.cubies[5].getColor(RubixState.faces.left) + \r\n\t           this.cubies[5].getColor(RubixState.faces.top) + this.cubies[6].getColor(RubixState.faces.top) + this.cubies[7].getColor(RubixState.faces.top) + \r\n\t           this.cubies[7].getColor(RubixState.faces.right) + this.cubies[4].getColor(RubixState.faces.right) + this.cubies[2].getColor(RubixState.faces.right) + \"\\n\" +\r\n\t// Left Top Right, 2nd row\r\n\t           this.cubies[8].getColor(RubixState.faces.left) + RubixState.colors.green + this.cubies[9].getColor(RubixState.faces.left) + \r\n\t           this.cubies[9].getColor(RubixState.faces.top) + RubixState.colors.yellow + this.cubies[10].getColor(RubixState.faces.top) + \r\n\t           this.cubies[10].getColor(RubixState.faces.right) + RubixState.colors.blue + this.cubies[11].getColor(RubixState.faces.right) + \"\\n\" +\r\n\t// Left Top Right, 3rd row\r\n\t           this.cubies[17].getColor(RubixState.faces.left) + this.cubies[15].getColor(RubixState.faces.left) + this.cubies[12].getColor(RubixState.faces.left) + \r\n\t           this.cubies[12].getColor(RubixState.faces.top) + this.cubies[13].getColor(RubixState.faces.top) + this.cubies[14].getColor(RubixState.faces.top) + \r\n\t           this.cubies[14].getColor(RubixState.faces.right) + this.cubies[16].getColor(RubixState.faces.right) + this.cubies[19].getColor(RubixState.faces.right) + \"\\n\" +\r\n\t// Front\r\n\t           \"   \" + this.cubies[12].getColor(RubixState.faces.front) + this.cubies[13].getColor(RubixState.faces.front) + this.cubies[14].getColor(RubixState.faces.front) + \"\\n\" +\r\n\t           \"   \" + this.cubies[15].getColor(RubixState.faces.front) + RubixState.colors.orange + this.cubies[16].getColor(RubixState.faces.front) + \"\\n\" +\r\n\t           \"   \" + this.cubies[17].getColor(RubixState.faces.front) + this.cubies[18].getColor(RubixState.faces.front) + this.cubies[19].getColor(RubixState.faces.front) + \"\\n\" +\r\n\t// Bottom\r\n\t           \"   \" + this.cubies[17].getColor(RubixState.faces.bottom) + this.cubies[18].getColor(RubixState.faces.bottom) + this.cubies[19].getColor(RubixState.faces.bottom) + \"\\n\" +\r\n\t           \"   \" + this.cubies[8].getColor(RubixState.faces.bottom) + RubixState.colors.white + this.cubies[11].getColor(RubixState.faces.bottom) + \"\\n\" +\r\n\t           \"   \" + this.cubies[0].getColor(RubixState.faces.bottom) + this.cubies[1].getColor(RubixState.faces.bottom) + this.cubies[2].getColor(RubixState.faces.bottom);  \r\n\t           \r\n\treturn rubixStr;        \r\n};\r\n\r\n/**\r\n * Returns a new Rubik's cube state set up as the goal state.\r\n * @return a new Rubik's cube state set up as the goal state\r\n */\r\nRubixState.initWithGoalState = function()\r\n{\r\n\tvar goalState = new RubixState();\r\n\t\r\n\tgoalState.cubies = [\r\n\t\t// In order according to the representation below.\r\n\t\tCubie.create(RubixState.colors.red, RubixState.colors.white, RubixState.colors.green),\r\n\t\tCubie.create(RubixState.colors.red, RubixState.colors.white),\r\n\t\tCubie.create(RubixState.colors.red, RubixState.colors.white, RubixState.colors.blue),\r\n\t\tCubie.create(RubixState.colors.red, RubixState.colors.green),\r\n\t\tCubie.create(RubixState.colors.red, RubixState.colors.blue),\r\n\t\tCubie.create(RubixState.colors.red, RubixState.colors.yellow, RubixState.colors.green),\r\n\t\tCubie.create(RubixState.colors.red, RubixState.colors.yellow),\r\n\t\tCubie.create(RubixState.colors.red, RubixState.colors.yellow, RubixState.colors.blue),\r\n\t\tCubie.create(RubixState.colors.white, RubixState.colors.green),\r\n\t\tCubie.create(RubixState.colors.yellow, RubixState.colors.green),\r\n\t\tCubie.create(RubixState.colors.yellow, RubixState.colors.blue),\r\n\t\tCubie.create(RubixState.colors.white, RubixState.colors.blue),\r\n\t\tCubie.create(RubixState.colors.yellow, RubixState.colors.orange, RubixState.colors.green),\r\n\t\tCubie.create(RubixState.colors.yellow, RubixState.colors.orange),\r\n\t\tCubie.create(RubixState.colors.yellow, RubixState.colors.orange, RubixState.colors.blue),\r\n\t\tCubie.create(RubixState.colors.orange, RubixState.colors.green),\r\n\t\tCubie.create(RubixState.colors.orange, RubixState.colors.blue),\r\n\t\tCubie.create(RubixState.colors.white, RubixState.colors.orange, RubixState.colors.green),\r\n\t\tCubie.create(RubixState.colors.white, RubixState.colors.orange),\r\n\t\tCubie.create(RubixState.colors.white, RubixState.colors.orange, RubixState.colors.blue),\r\n\t];\r\n\t\r\n\treturn goalState;\r\n};\r\n\r\n/**\r\n * The cube's colors. \r\n */\r\nRubixState.colors = {\r\n\tred : \"R\",\r\n\tgreen : \"G\",\r\n\tyellow : \"Y\",\r\n\tblue : \"B\",\r\n\torange : \"O\",\r\n\twhite : \"W\"\r\n};\r\n\r\n/**\r\n * The cube's faces. Do not change; they must match the rotation map below for cubie face rotations.\r\n */\r\nRubixState.faces = {\r\n\tback : 0,\r\n\tleft : 1,\r\n\ttop : 2,\r\n\tright : 3,\r\n\tfront : 4,\r\n\tbottom : 5\r\n};\r\n\r\n/**\r\n * This sets up the indicies in reference to a clockwise pattern. \r\n * \r\n *           00 01 02\r\n *           03 Re 04\r\n *           05 06 07\r\n * \r\n * 00 03 05  05 06 07  07 04 02\r\n * 08 Gr 09  09 Ye 10  10 Bl 11\r\n * 17 15 12  12 13 14  14 16 19\r\n * \r\n *           12 13 14\r\n *           15 Or 16\r\n *           17 18 19\r\n * \r\n *           17 18 19\r\n *           08 Wh 11\r\n *           00 01 02\r\n */\r\nRubixState.sideLookUpTable = [\r\n    [ 7, 6, 5, 3, 0, 1, 2, 4], // red, back\r\n    [ 5, 9,12,15,17, 8, 0, 3], // green, left\r\n    [ 5, 6, 7,10,14,13,12, 9], // yellow, top\r\n    [14,10, 7, 4, 2,11,19,16], // blue, right\r\n    [12,13,14,16,19,18,17,15], // orange, front\r\n    [17,18,19,11, 2, 1, 0, 8]  // white, bottom\r\n];\r\n\r\n\r\n/**\r\n * Defines a new cubie.\r\n * @param {Object} faces an array of 2 or 3 cubie faces (depending on if it's a side or corner)\r\n */\r\nfunction Cubie(faces)\r\n{\r\n\t// The cubie's faces (2 for sides, 3 for corners)\r\n\tthis.faces = faces.slice(0); // Copy array\r\n}\r\n\r\n/**\r\n * Rotates the cubie 1 to 3 rotations in the clockwise direction given the face.\r\n * @param {number} face the face of the cube to rotate\r\n * @param {number} rotations the number of rotations\r\n */\r\nCubie.prototype.rotate = function(face, rotations)\r\n{\r\n\tfor (index in this.faces)\r\n\t{\r\n\t\tif (this.faces[index].face === face)\r\n\t\t\tcontinue;\r\n\t\t\r\n\t\tthis.faces[index].rotate(face, rotations)\r\n\t}\r\n}\r\n\r\n/**\r\n * Returns the color on the given face of this cubie. \r\n * @param {number} face the specified face\r\n */\r\nCubie.prototype.getColor = function(face)\r\n{\r\n\tfor (i in this.faces)\r\n\t{\r\n\t\tif (this.faces[i].face === face)\r\n\t\t\treturn this.faces[i].color;\r\n\t}\r\n};\r\n\r\n/**\r\n * Returns true if the cubie is valid. (Not sure if this will be useful...)\r\n * @return true if the cubie is valid, false otherwise. \r\n */\r\nCubie.prototype.isValid = function() \r\n{\r\n\t// Check if all sides are different colors\r\n\tif (this.isSide())\r\n\t{\r\n\t\tif (this.faces[0].color == this.faces[1].color)\r\n\t\t\treturn false;\r\n\t}\r\n\telse if (this.isCorner())\r\n\t{\r\n\t\tif (this.faces[0].color == this.faces[1].color ||\r\n\t\t\tthis.faces[1].color == this.faces[2].color ||\r\n\t\t\tthis.faces[0].color == this.faces[2].color)\r\n\t\t\treturn false;\r\n\t}\r\n\t\r\n\treturn false;\r\n};\r\n\r\n/**\r\n * Returns true if the cubie is a side cube.\r\n * @return true if the cubie is a side, false otherwise. \r\n */\r\nCubie.prototype.isSide = function()\r\n{\r\n\treturn this.colors.length == 2;\r\n};\r\n\r\n/**\r\n * Returns true if the cubie is a corner cube.\r\n * @return true if the cubie is a corner, false otherwise. \r\n */\r\nCubie.prototype.isCorner = function()\r\n{\r\n\treturn this.colors.length == 3;\r\n};\r\n\r\n/**\r\n * Creates a new cubie given 2 or 3 colors and faces.\r\n * @param {number} color1 the color of the first face.\r\n * @param {number} color2 the color of the second face.\r\n * @param {number} color3 the color of the third face (optional if a side cubie).\r\n * @param {number} face1 the direction of the first face (optional if assuming goal state).\r\n * @param {number} face2 the direction of the second face (optional if assuming goal state).\r\n * @param {number} face3 the direction of the third face (optional if assuming goal state).\r\n * @return a new Cubie.\r\n */\r\nCubie.create = function(color1, color2, color3, face1, face2, face3)\r\n{\r\n\tface1 = face1 == null ? Cubie.defaultFace(color1) : face1;\r\n\tface2 = face2 == null ? Cubie.defaultFace(color2) : face2;\r\n\t\r\n\t// A side\r\n\tif (color3 == null)\r\n\t{\t\t\r\n\t\treturn new Cubie([new CubieFace(color1, face1),\r\n\t\t                  new CubieFace(color2, face2)]);\r\n\t}\r\n\t\r\n\t// A corner\r\n\tface3 = face3 == null ? Cubie.defaultFace(color3) : face3;\r\n\t\r\n\treturn new Cubie([new CubieFace(color1, face1),\r\n\t\t              new CubieFace(color2, face2),\r\n\t\t              new CubieFace(color3, face3)]);\r\n}\r\n\r\n/**\r\n * Returns the default face of the given color ( assumes the cube is in the goal state). \r\n * @param {number} color the specified color\r\n * @return the default face\r\n */\r\nCubie.defaultFace = function(color)\r\n{\r\n\tswitch (color)\r\n\t{\r\n\t\tcase RubixState.colors.yellow:\r\n\t\t\treturn RubixState.faces.top;\r\n\t\tcase RubixState.colors.red:\r\n\t\t\treturn RubixState.faces.back;\r\n\t\tcase RubixState.colors.white:\r\n\t\t\treturn RubixState.faces.bottom;\r\n\t\tcase RubixState.colors.orange:\r\n\t\t\treturn RubixState.faces.front;\r\n\t\tcase RubixState.colors.green:\r\n\t\t\treturn RubixState.faces.left;\r\n\t\tcase RubixState.colors.blue:\r\n\t\t\treturn RubixState.faces.right;\r\n\t\tdefault:\r\n\t\t\treturn undefined;\r\n\t}\r\n}\r\n\r\n/**\r\n * Defines a cubie face. \r\n * @param {number} color the cubie face's color.\r\n * @param {number} face the cubie face's direction.\r\n * @return a new cubie face.\r\n */\r\nfunction CubieFace(color, face)\r\n{\r\n\tthis.color = color;\r\n\tthis.face = face;\r\n}\r\n\r\n/**\r\n * Rotates the cubie face 1 to 3 rotations in the clockwise direction given the face.\r\n * Rotating the cubie face only means redefining its face direction depending on the rotation.\r\n * @param {number} face the face of the cube to rotate (not the cubie face's face)\r\n * @param {number} rotations the number of rotations\r\n */\r\nCubieFace.prototype.rotate = function(face, rotations)\r\n{\r\n\tthis.face = CubieFace.newFaceMap[face][this.face][rotations];\r\n};\r\n\r\n/**\r\n * Given the cube's rotating face, a cubie face's current face, and 1 to 3 rotations, this map\r\n * defines the new face for a cubie face. \r\n * \r\n * Usage: CubieFace.newFaceMap[rotating face][current cubie face's face][number of rotations]\r\n * \r\n * There's probably a better way to do this...\r\n */\r\nCubieFace.newFaceMap = {\r\n\t0 : {\r\n\t\t1 : {\r\n\t\t\t1 : 5,\r\n\t\t\t2 : 3,\r\n\t\t\t3 : 2\r\n\t\t},\r\n\t\t2 : {\r\n\t\t\t1 : 1,\r\n\t\t\t2 : 5,\r\n\t\t\t3 : 3\r\n\t\t},\r\n\t\t3 : {\r\n\t\t\t1 : 2,\r\n\t\t\t2 : 1,\r\n\t\t\t3 : 5\r\n\t\t},\r\n\t\t5 : {\r\n\t\t\t1 : 1,\r\n\t\t\t2 : 2,\r\n\t\t\t3 : 3\r\n\t\t}\r\n\t},\r\n\t1 : {\r\n\t\t0 : {\r\n\t\t\t1 : 2,\r\n\t\t\t2 : 4,\r\n\t\t\t3 : 5\r\n\t\t},\r\n\t\t2 : {\r\n\t\t\t1 : 4,\r\n\t\t\t2 : 5,\r\n\t\t\t3 : 0\r\n\t\t},\r\n\t\t4 : {\r\n\t\t\t1 : 5,\r\n\t\t\t2 : 0,\r\n\t\t\t3 : 2\r\n\t\t},\r\n\t\t5 : {\r\n\t\t\t1 : 0,\r\n\t\t\t2 : 2,\r\n\t\t\t3 : 4\r\n\t\t}\r\n\t},\r\n\t2 : {\r\n\t\t0 : {\r\n\t\t\t1 : 3,\r\n\t\t\t2 : 4,\r\n\t\t\t3 : 1\r\n\t\t},\r\n\t\t1 : {\r\n\t\t\t1 : 0,\r\n\t\t\t2 : 3,\r\n\t\t\t3 : 4\r\n\t\t},\r\n\t\t3 : {\r\n\t\t\t1 : 4,\r\n\t\t\t2 : 1,\r\n\t\t\t3 : 0\r\n\t\t},\r\n\t\t4 : {\r\n\t\t\t1 : 1,\r\n\t\t\t2 : 0,\r\n\t\t\t3 : 3\r\n\t\t}\r\n\t},\r\n\t3 : {\r\n\t\t0 : {\r\n\t\t\t1 : 5,\r\n\t\t\t2 : 4,\r\n\t\t\t3 : 2\r\n\t\t},\r\n\t\t2 : {\r\n\t\t\t1 : 0,\r\n\t\t\t2 : 5,\r\n\t\t\t3 : 4\r\n\t\t},\r\n\t\t4 : {\r\n\t\t\t1 : 2,\r\n\t\t\t2 : 0,\r\n\t\t\t3 : 5\r\n\t\t},\r\n\t\t5 : {\r\n\t\t\t1 : 4,\r\n\t\t\t2 : 2,\r\n\t\t\t3 : 0\r\n\t\t}\r\n\t},\r\n\t4 : {\r\n\t\t1 : {\r\n\t\t\t1 : 2,\r\n\t\t\t2 : 3,\r\n\t\t\t3 : 5\r\n\t\t},\r\n\t\t2 : {\r\n\t\t\t1 : 3,\r\n\t\t\t2 : 5,\r\n\t\t\t3 : 1\r\n\t\t},\r\n\t\t3 : {\r\n\t\t\t1 : 5,\r\n\t\t\t2 : 1,\r\n\t\t\t3 : 2\r\n\t\t},\r\n\t\t5 : {\r\n\t\t\t1 : 1,\r\n\t\t\t2 : 2,\r\n\t\t\t3 : 3\r\n\t\t}\r\n\t},\r\n\t5 : {\r\n\t\t0 : {\r\n\t\t\t1 : 1,\r\n\t\t\t2 : 4,\r\n\t\t\t3 : 3\r\n\t\t},\r\n\t\t1 : {\r\n\t\t\t1 : 4,\r\n\t\t\t2 : 3,\r\n\t\t\t3 : 0\r\n\t\t},\r\n\t\t3 : {\r\n\t\t\t1 : 0,\r\n\t\t\t2 : 1,\r\n\t\t\t3 : 4\r\n\t\t},\r\n\t\t4 : {\r\n\t\t\t1 : 3,\r\n\t\t\t2 : 0,\r\n\t\t\t3 : 1\r\n\t\t}\r\n\t}\r\n};\r\n"]],"start1":0,"start2":0,"length1":0,"length2":13497}]],"length":13497}
{"contributors":[],"silentsave":false,"ts":1350089933571,"patch":[[{"diffs":[[0,"alState();\r\n"],[-1,"\t"],[1,"    "],[0,"console.log("]],"start1":184,"start2":184,"length1":25,"length2":28},{"diffs":[[0,"String());\r\n"],[-1,"\t"],[1,"    "],[0,"rubix.rotate"]],"start1":220,"start2":220,"length1":25,"length2":28},{"diffs":[[0,");\r\n"],[-1,"\trubix.rotate(RubixState.faces.right, 1);\r\n\t"],[1,"    "],[0,"cons"]],"start1":272,"start2":272,"length1":52,"length2":12},{"diffs":[[0,"State()\r\n{\r\n"],[-1,"\t"],[1,"    "],[0,"this.cubies "]],"start1":478,"start2":478,"length1":25,"length2":28},{"diffs":[[0,"ations)\r\n{\r\n"],[-1,"\t"],[1,"    "],[0,"var indicies"]],"start1":778,"start2":778,"length1":25,"length2":28},{"diffs":[[0,"\n    {\r\n    "],[-1,"\t"],[1,"    "],[0,"tempCubies[i"]],"start1":962,"start2":962,"length1":25,"length2":28},{"diffs":[[0,"];\r\n    "],[-1,"\t"],[1,"    "],[0,"tempCubi"]],"start1":1035,"start2":1035,"length1":17,"length2":20},{"diffs":[[0," {\r\n    "],[-1,"\t"],[1,"    "],[0,"newIndex"]],"start1":1172,"start2":1172,"length1":17,"length2":20},{"diffs":[[0,"8;\r\n    "],[1," "],[-1,"\t"],[1,"   "],[0,"this.cub"]],"start1":1223,"start2":1223,"length1":17,"length2":20},{"diffs":[[0,"n()\r\n{\r\n"],[-1,"\t"],[1,"    "],[0,"// Back\r"]],"start1":1453,"start2":1453,"length1":17,"length2":20},{"diffs":[[0,"/ Back\r\n"],[-1,"\t"],[1,"    var "],[0,"rubixStr"]],"start1":1466,"start2":1466,"length1":17,"length2":24},{"diffs":[[0,"back) + \"\\n\" +\r\n"],[-1,"\t"],[1,"        "],[0,"           \"   \""]],"start1":1640,"start2":1640,"length1":33,"length2":40},{"diffs":[[0,"back) + \"\\n\" +\r\n"],[-1,"\t"],[1,"        "],[0,"           \"   \""]],"start1":1797,"start2":1797,"length1":33,"length2":40},{"diffs":[[0,"back) + \"\\n\" +\r\n"],[-1,"\t"],[1,"    "],[0,"// Left Top Righ"]],"start1":1979,"start2":1979,"length1":33,"length2":36},{"diffs":[[0,"t, 1st row\r\n"],[-1,"\t"],[1,"        "],[0,"           t"]],"start1":2015,"start2":2015,"length1":25,"length2":32},{"diffs":[[0,"faces.left) + \r\n"],[-1,"\t"],[1,"   "],[0,"           this."]],"start1":2179,"start2":2179,"length1":33,"length2":35},{"diffs":[[0,"\r\n              "],[1,"     "],[0,"this.cubies[5].g"]],"start1":2193,"start2":2193,"length1":32,"length2":37},{"diffs":[[0,".faces.top) + \r\n"],[-1,"\t"],[1,"        "],[0,"           this."]],"start1":2344,"start2":2344,"length1":33,"length2":40},{"diffs":[[0,"ight) + \"\\n\" +\r\n"],[-1,"\t"],[1,"    "],[0,"// Left Top Righ"]],"start1":2521,"start2":2521,"length1":33,"length2":36},{"diffs":[[0,"t, 2nd row\r\n"],[-1,"\t"],[1,"        "],[0,"           t"]],"start1":2557,"start2":2557,"length1":25,"length2":32},{"diffs":[[0,"faces.left) + \r\n"],[-1,"\t"],[1,"        "],[0,"           this."]],"start1":2698,"start2":2698,"length1":33,"length2":40},{"diffs":[[0,".faces.top) + \r\n"],[-1,"\t"],[0,"           this."]],"start1":2843,"start2":2843,"length1":33,"length2":32},{"diffs":[[0," + \r\n           "],[1,"        "],[0,"this.cubies[10]."]],"start1":2854,"start2":2854,"length1":32,"length2":40},{"diffs":[[0,"\"\\n\" +\r\n"],[-1,"\t"],[1,"    "],[0,"// Left "]],"start1":3005,"start2":3005,"length1":17,"length2":20},{"diffs":[[0,"rd row\r\n"],[-1,"\t"],[1," "],[0,"        "]],"start1":3037,"start2":3037,"length1":17,"length2":17},{"diffs":[[0,"ow\r\n            "],[1,"       "],[0,"this.cubies[17]."]],"start1":3041,"start2":3041,"length1":32,"length2":39},{"diffs":[[0,"s.left) + \r\n"],[-1,"\t"],[1,"        "],[0,"           t"]],"start1":3204,"start2":3204,"length1":25,"length2":32},{"diffs":[[0,"op) + \r\n"],[-1,"\t"],[1,"        "],[0,"        "]],"start1":3376,"start2":3376,"length1":17,"length2":24},{"diffs":[[0,"\"\\n\" +\r\n"],[-1,"\t"],[1,"    "],[0,"// Front"]],"start1":3556,"start2":3556,"length1":17,"length2":20},{"diffs":[[0," Front\r\n"],[-1,"\t"],[0,"        "]],"start1":3570,"start2":3570,"length1":17,"length2":16},{"diffs":[[0,"ont\r\n           "],[1,"        "],[0,"\"   \" + this.cub"]],"start1":3573,"start2":3573,"length1":32,"length2":40},{"diffs":[[0,"ront) + \"\\n\" +\r\n"],[-1,"\t"],[1,"        "],[0,"           \"   \""]],"start1":3750,"start2":3750,"length1":33,"length2":40},{"diffs":[[0,"ront) + \"\\n\" +\r\n"],[-1,"\t"],[1,"        "],[0,"           \"   \""]],"start1":3914,"start2":3914,"length1":33,"length2":40},{"diffs":[[0,"\"\\n\" +\r\n"],[-1,"\t"],[1,"    "],[0,"// Botto"]],"start1":4110,"start2":4110,"length1":17,"length2":20},{"diffs":[[0,"Bottom\r\n"],[-1,"\t"],[1,"        "],[0,"        "]],"start1":4125,"start2":4125,"length1":17,"length2":24},{"diffs":[[0,"ttom) + \"\\n\" +\r\n"],[-1,"\t"],[1,"        "],[0,"           \"   \""]],"start1":4308,"start2":4308,"length1":33,"length2":40},{"diffs":[[0,"\"\\n\" +\r\n"],[-1,"\t"],[1,"        "],[0,"        "]],"start1":4480,"start2":4480,"length1":17,"length2":24},{"diffs":[[0,"om);  \r\n"],[-1,"\t"],[1,"    "],[0,"        "]],"start1":4662,"start2":4662,"length1":17,"length2":20},{"diffs":[[0,"      \r\n"],[-1,"\t"],[1,"    "],[0,"return r"]],"start1":4679,"start2":4679,"length1":17,"length2":20},{"diffs":[[0,"n()\r\n{\r\n"],[-1,"\t"],[1,"    "],[0,"var goal"]],"start1":4896,"start2":4896,"length1":17,"length2":20},{"diffs":[[0,"ate();\r\n"],[-1,"\t\r\n\t"],[1,"    \r\n    "],[0,"goalStat"]],"start1":4935,"start2":4935,"length1":20,"length2":26},{"diffs":[[0,"es = [\r\n"],[-1,"\t\t"],[1,"        "],[0,"// In or"]],"start1":4967,"start2":4967,"length1":18,"length2":24},{"diffs":[[0,"below.\r\n"],[-1,"\t\t"],[1,"        "],[0,"Cubie.cr"]],"start1":5027,"start2":5027,"length1":18,"length2":24},{"diffs":[[0,"colors.green),\r\n"],[-1,"\t\t"],[1,"        "],[0,"Cubie.create(Rub"]],"start1":5115,"start2":5115,"length1":34,"length2":40},{"diffs":[[0,"rs.white),\r\n"],[-1,"\t\t"],[1,"        "],[0,"Cubie.create"]],"start1":5190,"start2":5190,"length1":26,"length2":32},{"diffs":[[0,".colors.blue),\r\n"],[-1,"\t\t"],[1,"        "],[0,"Cubie.create(Rub"]],"start1":5281,"start2":5281,"length1":34,"length2":40},{"diffs":[[0,"colors.green),\r\n"],[-1,"\t\t"],[1,"        "],[0,"Cubie.create(Rub"]],"start1":5352,"start2":5352,"length1":34,"length2":40},{"diffs":[[0,".colors.blue),\r\n"],[-1,"\t\t"],[1,"        "],[0,"Cubie.create(Rub"]],"start1":5422,"start2":5422,"length1":34,"length2":40},{"diffs":[[0,"colors.green),\r\n"],[-1,"\t\t"],[1,"        "],[0,"Cubie.create(Rub"]],"start1":5519,"start2":5519,"length1":34,"length2":40},{"diffs":[[0,"s.yellow),\r\n"],[-1,"\t\t"],[1,"        "],[0,"Cubie.create"]],"start1":5595,"start2":5595,"length1":26,"length2":32},{"diffs":[[0,".colors.blue),\r\n"],[-1,"\t\t"],[1,"        "],[0,"Cubie.create(Rub"]],"start1":5687,"start2":5687,"length1":34,"length2":40},{"diffs":[[0,"colors.green),\r\n"],[-1,"\t\t"],[1,"        "],[0,"Cubie.create(Rub"]],"start1":5760,"start2":5760,"length1":34,"length2":40},{"diffs":[[0,"colors.green),\r\n"],[-1,"\t\t"],[1,"        "],[0,"Cubie.create(Rub"]],"start1":5834,"start2":5834,"length1":34,"length2":40},{"diffs":[[0,".colors.blue),\r\n"],[-1,"\t\t"],[1,"        "],[0,"Cubie.create(Rub"]],"start1":5907,"start2":5907,"length1":34,"length2":40},{"diffs":[[0,".colors.blue),\r\n"],[-1,"\t\t"],[1,"        "],[0,"Cubie.create(Rub"]],"start1":5979,"start2":5979,"length1":34,"length2":40},{"diffs":[[0,"colors.green),\r\n"],[-1,"\t\t"],[1,"        "],[0,"Cubie.create(Rub"]],"start1":6079,"start2":6079,"length1":34,"length2":40},{"diffs":[[0,"olors.orange),\r\n"],[-1,"\t\t"],[1,"        "],[0,"Cubie.create(Rub"]],"start1":6154,"start2":6154,"length1":34,"length2":40},{"diffs":[[0,".colors.blue),\r\n"],[-1,"\t\t"],[1,"        "],[0,"Cubie.create(Rub"]],"start1":6253,"start2":6253,"length1":34,"length2":40},{"diffs":[[0,"colors.green),\r\n"],[-1,"\t\t"],[1,"        "],[0,"Cubie.create(Rub"]],"start1":6327,"start2":6327,"length1":34,"length2":40},{"diffs":[[0,"ors.blue),\r\n"],[-1,"\t\t"],[1,"        "],[0,"Cubie.create"]],"start1":6404,"start2":6404,"length1":26,"length2":32},{"diffs":[[0,"rs.green),\r\n"],[-1,"\t\t"],[1,"        "],[0,"Cubie.create"]],"start1":6503,"start2":6503,"length1":26,"length2":32},{"diffs":[[0,"ange),\r\n"],[-1,"\t\t"],[1,"        "],[0,"Cubie.cr"]],"start1":6581,"start2":6581,"length1":18,"length2":24},{"diffs":[[0,"),\r\n"],[-1,"\t];\r\n\t\r\n\t"],[1,"    ];\r\n    \r\n    "],[0,"retu"]],"start1":6683,"start2":6683,"length1":17,"length2":26},{"diffs":[[0,"rs = {\r\n"],[-1,"\t"],[1,"    "],[0,"red : \"R"]],"start1":6779,"start2":6779,"length1":17,"length2":20},{"diffs":[[0,": \"R\",\r\n"],[-1,"\t"],[1,"    "],[0,"green : "]],"start1":6795,"start2":6795,"length1":17,"length2":20},{"diffs":[[0,": \"G\",\r\n"],[-1,"\t"],[1,"    "],[0,"yellow :"]],"start1":6813,"start2":6813,"length1":17,"length2":20},{"diffs":[[0,": \"Y\",\r\n"],[-1,"\t"],[1,"    "],[0,"blue : \""]],"start1":6832,"start2":6832,"length1":17,"length2":20},{"diffs":[[0,": \"B\",\r\n"],[-1,"\t"],[1,"    "],[0,"orange :"]],"start1":6849,"start2":6849,"length1":17,"length2":20},{"diffs":[[0,": \"O\",\r\n"],[-1,"\t"],[1,"    "],[0,"white : "]],"start1":6868,"start2":6868,"length1":17,"length2":20},{"diffs":[[0,"es = {\r\n"],[-1,"\t"],[1,"    "],[0,"back : 0"]],"start1":7025,"start2":7025,"length1":17,"length2":20},{"diffs":[[0,"k : 0,\r\n"],[-1,"\t"],[1,"    "],[0,"left : 1"]],"start1":7040,"start2":7040,"length1":17,"length2":20},{"diffs":[[0,"t : 1,\r\n"],[-1,"\t"],[1,"    "],[0,"top : 2,"]],"start1":7055,"start2":7055,"length1":17,"length2":20},{"diffs":[[0,"p : 2,\r\n"],[-1,"\t"],[1,"    "],[0,"right : "]],"start1":7069,"start2":7069,"length1":17,"length2":20},{"diffs":[[0,"t : 3,\r\n"],[-1,"\t"],[1,"    "],[0,"front : "]],"start1":7085,"start2":7085,"length1":17,"length2":20},{"diffs":[[0,"t : 4,\r\n"],[-1,"\t"],[1,"    "],[0,"bottom :"]],"start1":7101,"start2":7101,"length1":17,"length2":20},{"diffs":[[0,"es)\r\n{\r\n"],[-1,"\t"],[1,"    "],[0,"// The c"]],"start1":8009,"start2":8009,"length1":17,"length2":20},{"diffs":[[0,"rners)\r\n"],[-1,"\t"],[1,"    "],[0,"this.fac"]],"start1":8064,"start2":8064,"length1":17,"length2":20},{"diffs":[[0,"ations)\r\n{\r\n"],[-1,"\t"],[1,"    "],[0,"for (index i"]],"start1":8370,"start2":8370,"length1":25,"length2":28},{"diffs":[[0,"in this.faces)\r\n"],[-1,"\t{\r\n\t\t"],[1,"    {\r\n        "],[0,"if (this.faces[i"]],"start1":8397,"start2":8397,"length1":38,"length2":47},{"diffs":[[0,"e)\r\n"],[-1,"\t\t\tcontinue;\r\n\t\t\r\n\t\t"],[1,"            continue;\r\n        \r\n        "],[0,"this"]],"start1":8462,"start2":8462,"length1":28,"length2":49},{"diffs":[[0,"tions)\r\n"],[-1,"\t"],[1,"    "],[0,"}\r\n}\r\n\r\n"]],"start1":8542,"start2":8542,"length1":17,"length2":20},{"diffs":[[0,"ce)\r\n{\r\n"],[-1,"\t"],[1,"    "],[0,"for (i i"]],"start1":8710,"start2":8710,"length1":17,"length2":20},{"diffs":[[0,"faces)\r\n"],[-1,"\t{\r\n\t\t"],[1,"    {\r\n        "],[0,"if (this"]],"start1":8737,"start2":8737,"length1":22,"length2":31},{"diffs":[[0," face)\r\n"],[-1,"\t\t\t"],[1,"            "],[0,"return t"]],"start1":8786,"start2":8786,"length1":19,"length2":28},{"diffs":[[0,"color;\r\n"],[-1,"\t"],[1,"    "],[0,"}\r\n};\r\n\r"]],"start1":8827,"start2":8827,"length1":17,"length2":20},{"diffs":[[0,"() \r\n{\r\n"],[-1,"\t"],[1,"    "],[0,"// Check"]],"start1":9027,"start2":9027,"length1":17,"length2":20},{"diffs":[[0,"colors\r\n"],[-1,"\t"],[1,"    "],[0,"if (this"]],"start1":9075,"start2":9075,"length1":17,"length2":20},{"diffs":[[0,".isSide())\r\n"],[-1,"\t{\r\n\t\t"],[1,"    {\r\n        "],[0,"if (this.fac"]],"start1":9095,"start2":9095,"length1":30,"length2":39},{"diffs":[[0,"aces[1].color)\r\n"],[-1,"\t\t\t"],[1,"            "],[0,"return false;\r\n\t"]],"start1":9155,"start2":9155,"length1":35,"length2":44},{"diffs":[[0,"false;\r\n"],[-1,"\t}\r\n\t"],[1,"    }\r\n    "],[0,"else if "]],"start1":9190,"start2":9190,"length1":21,"length2":27},{"diffs":[[0,"ner())\r\n"],[-1,"\t{\r\n\t\t"],[1,"    {\r\n        "],[0,"if (this"]],"start1":9228,"start2":9228,"length1":22,"length2":31},{"diffs":[[0,"es[1].color ||\r\n"],[-1,"\t\t\t"],[1,"            "],[0,"this.faces[1].co"]],"start1":9286,"start2":9286,"length1":35,"length2":44},{"diffs":[[0,"lor ||\r\n"],[-1,"\t\t\t"],[1,"            "],[0,"this.fac"]],"start1":9353,"start2":9353,"length1":19,"length2":28},{"diffs":[[0,"color)\r\n"],[-1,"\t\t\t"],[1,"            "],[0,"return f"]],"start1":9410,"start2":9410,"length1":19,"length2":28},{"diffs":[[0,"false;\r\n"],[-1,"\t}\r\n\t\r\n\t"],[1,"    }\r\n    \r\n    "],[0,"return f"]],"start1":9437,"start2":9437,"length1":24,"length2":33},{"diffs":[[0," function()\r\n{\r\n"],[-1,"\t"],[1,"    "],[0,"return this.colo"]],"start1":9622,"start2":9622,"length1":33,"length2":36},{"diffs":[[0,"n()\r\n{\r\n"],[-1,"\t"],[1,"    "],[0,"return t"]],"start1":9834,"start2":9834,"length1":17,"length2":20},{"diffs":[[0,"e3)\r\n{\r\n"],[-1,"\t"],[1,"    "],[0,"face1 = "]],"start1":10516,"start2":10516,"length1":17,"length2":20},{"diffs":[[0,"face1;\r\n"],[-1,"\t"],[1,"    "],[0,"face2 = "]],"start1":10580,"start2":10580,"length1":17,"length2":20},{"diffs":[[0,"face2;\r\n"],[-1,"\t\r\n\t"],[1,"    \r\n    "],[0,"// A sid"]],"start1":10644,"start2":10644,"length1":20,"length2":26},{"diffs":[[0,"A side\r\n"],[-1,"\t"],[1,"    "],[0,"if (colo"]],"start1":10665,"start2":10665,"length1":17,"length2":20},{"diffs":[[0,"l)\r\n"],[-1,"\t{\t\t\r\n\t\t"],[1,"    {        \r\n        "],[0,"retu"]],"start1":10694,"start2":10694,"length1":16,"length2":31},{"diffs":[[0,"olor1, face1),\r\n"],[-1,"\t\t"],[1,"        "],[0,"                "]],"start1":10754,"start2":10754,"length1":34,"length2":40},{"diffs":[[0,");\r\n"],[-1,"\t}\r\n\t\r\n\t"],[1,"    }\r\n    \r\n    "],[0,"// A"]],"start1":10825,"start2":10825,"length1":16,"length2":25},{"diffs":[[0,"corner\r\n"],[-1,"\t"],[1,"    "],[0,"face3 = "]],"start1":10851,"start2":10851,"length1":17,"length2":20},{"diffs":[[0,"3;\r\n"],[-1,"\t\r\n\t"],[1,"    \r\n    "],[0,"retu"]],"start1":10919,"start2":10919,"length1":12,"length2":18},{"diffs":[[0,"1, face1),\r\n"],[-1,"\t\t"],[1,"        "],[0,"            "]],"start1":10970,"start2":10970,"length1":26,"length2":32},{"diffs":[[0,"ace2),\r\n"],[-1,"\t\t"],[1,"        "],[0,"        "]],"start1":11027,"start2":11027,"length1":18,"length2":24},{"diffs":[[0,"or)\r\n{\r\n"],[-1,"\t"],[1,"    "],[0,"switch ("]],"start1":11303,"start2":11303,"length1":17,"length2":20},{"diffs":[[0,"r)\r\n"],[-1,"\t{\r\n\t\t"],[1,"    {\r\n        "],[0,"case"]],"start1":11327,"start2":11327,"length1":14,"length2":23},{"diffs":[[0,"ellow:\r\n"],[-1,"\t\t\t"],[1,"            "],[0,"return R"]],"start1":11370,"start2":11370,"length1":19,"length2":28},{"diffs":[[0,"s.top;\r\n"],[-1,"\t\t"],[1,"        "],[0,"case Rub"]],"start1":11412,"start2":11412,"length1":18,"length2":24},{"diffs":[[0,"s.red:\r\n"],[-1,"\t\t\t"],[1,"            "],[0,"return R"]],"start1":11449,"start2":11449,"length1":19,"length2":28},{"diffs":[[0,".back;\r\n"],[-1,"\t\t"],[1,"        "],[0,"case Rub"]],"start1":11492,"start2":11492,"length1":18,"length2":24},{"diffs":[[0,"ors.white:\r\n"],[-1,"\t\t\t"],[1,"            "],[0,"return Rubix"]],"start1":11527,"start2":11527,"length1":27,"length2":36},{"diffs":[[0,"ottom;\r\n"],[-1,"\t\t"],[1,"        "],[0,"case Rub"]],"start1":11576,"start2":11576,"length1":18,"length2":24},{"diffs":[[0,"rs.orange:\r\n"],[-1,"\t\t\t"],[1,"            "],[0,"return Rubix"]],"start1":11612,"start2":11612,"length1":27,"length2":36},{"diffs":[[0,"ces.front;\r\n"],[-1,"\t\t"],[1,"        "],[0,"case RubixSt"]],"start1":11656,"start2":11656,"length1":26,"length2":32},{"diffs":[[0,"green:\r\n"],[-1,"\t\t\t"],[1,"            "],[0,"return R"]],"start1":11699,"start2":11699,"length1":19,"length2":28},{"diffs":[[0,".left;\r\n"],[-1,"\t\t"],[1,"        "],[0,"case Rub"]],"start1":11742,"start2":11742,"length1":18,"length2":24},{"diffs":[[0,".blue:\r\n"],[-1,"\t\t\t"],[1,"            "],[0,"return R"]],"start1":11780,"start2":11780,"length1":19,"length2":28},{"diffs":[[0,"right;\r\n"],[-1,"\t\t"],[1,"        "],[0,"default:"]],"start1":11824,"start2":11824,"length1":18,"length2":24},{"diffs":[[0,"fault:\r\n"],[-1,"\t\t\t"],[1,"            "],[0,"return u"]],"start1":11842,"start2":11842,"length1":19,"length2":28},{"diffs":[[0,"fined;\r\n"],[-1,"\t"],[1,"    "],[0,"}\r\n}\r\n\r\n"]],"start1":11873,"start2":11873,"length1":17,"length2":20},{"diffs":[[0,", face)\r\n{\r\n"],[-1,"\t"],[1,"    "],[0,"this.color ="]],"start1":12087,"start2":12087,"length1":25,"length2":28},{"diffs":[[0,"color;\r\n"],[-1,"\t"],[1,"    "],[0,"this.fac"]],"start1":12116,"start2":12116,"length1":17,"length2":20},{"diffs":[[0,"ns)\r\n{\r\n"],[-1,"\t"],[1,"    "],[0,"this.fac"]],"start1":12534,"start2":12534,"length1":17,"length2":20},{"diffs":[[0," {\r\n"],[-1,"\t"],[1,"    "],[0,"0 : {\r\n"],[-1,"\t\t1 : {\r\n\t\t\t1 : 5,\r\n\t\t\t2 : 3,\r\n\t\t\t3 : 2\r\n\t\t},\r\n\t\t2 : {\r\n\t\t\t1 : 1,\r\n\t\t\t2 : 5,\r\n\t\t\t3 : 3\r\n\t\t},\r\n\t\t3 : {\r\n\t\t\t1 : 2,\r\n\t\t\t2 : 1,\r\n\t\t\t3 : 5\r\n\t\t},\r\n\t\t5 : {\r\n\t\t\t1 : 1,\r\n\t\t\t2 : 2,\r\n\t\t\t3 : 3\r\n\t\t}\r\n\t},\r\n\t1 : {\r\n\t\t0 : {\r\n\t\t\t1 : 2,\r\n\t\t\t2 : 4,\r\n\t\t\t3 : 5\r\n\t\t},\r\n\t\t2 : {\r\n\t\t\t1 : 4,\r\n\t\t\t2 : 5,\r\n\t\t\t3 : 0\r\n\t\t},\r\n\t\t4 : {\r\n\t\t\t1 : 5,\r\n\t\t\t2 : 0,\r\n\t\t\t3 : 2\r\n\t\t},\r\n\t\t5 : {\r\n\t\t\t1 : 0,\r\n\t\t\t2 : 2,\r\n\t\t\t3 : 4\r\n\t\t}\r\n\t},\r\n\t2 : {\r\n\t\t0 : {\r\n\t\t\t1 : 3,\r\n\t\t\t2 : 4,\r\n\t\t\t3 : 1\r\n\t\t},\r\n\t\t1 : {\r\n\t\t\t1 : 0,\r\n\t\t\t2 : 3,\r\n\t\t\t3 : 4\r\n\t\t},\r\n\t\t3 : {\r\n\t\t\t1 : 4,\r\n\t\t\t2 : 1,\r\n\t\t\t3 : 0\r\n\t\t},\r\n\t\t4 : {\r\n\t\t\t1 : 1,\r\n\t\t\t2 : 0,\r\n\t\t\t3 : 3\r\n\t\t}\r\n\t},\r\n\t3 : {\r\n\t\t0 : {\r\n\t\t\t1 : 5,\r\n\t\t\t2 : 4,\r\n\t\t\t3 : 2\r\n\t\t},\r\n\t\t2 : {\r\n\t\t\t1 : 0,\r\n\t\t\t2 : 5,\r\n\t\t\t3 : 4\r\n\t\t},\r\n\t\t4 : {\r\n\t\t\t1 : 2,\r\n\t\t\t2 : 0,\r\n\t\t\t3 : 5\r\n\t\t},\r\n\t\t5 : {\r\n\t\t\t1 : 4,\r\n\t\t\t2 : 2,\r\n\t\t\t3 : 0\r\n\t\t}\r\n\t},\r\n\t4 : {\r\n\t\t1 : {\r\n\t\t\t1 : 2,\r\n\t\t\t2 : 3,\r\n\t\t\t3 : 5\r\n\t\t},\r\n\t\t2 : {\r\n\t\t\t1 : 3,\r\n\t\t\t2 : 5,\r\n\t\t\t3 : 1\r\n\t\t},\r\n\t\t3 : {\r\n\t\t\t1 : 5,\r\n\t\t\t2 : 1,\r\n\t\t\t3 : 2\r\n\t\t},\r\n\t\t5 : {\r\n\t\t\t1 : 1,\r\n\t\t\t2 : 2,\r\n\t\t\t3 : 3\r\n\t\t}\r\n\t},\r\n\t5 : {\r\n\t\t0 : {\r\n\t\t\t1 : 1,\r\n\t\t\t2 : 4,\r\n\t\t\t3 : 3\r\n\t\t},\r\n\t\t1 : {\r\n\t\t\t1 : 4,\r\n\t\t\t2 : 3,\r\n\t\t\t3 : 0\r\n\t\t},\r\n\t\t3 : {\r\n\t\t\t1 : 0,\r\n\t\t\t2 : 1,\r\n\t\t\t3 : 4\r\n\t\t},\r\n\t\t4 : {\r\n\t\t\t1 : 3,\r\n\t\t\t2 : 0,\r\n\t\t\t3 : 1\r\n\t\t}\r\n\t"],[1,"        1 : {\r\n            1 : 5,\r\n            2 : 3,\r\n            3 : 2\r\n        },\r\n        2 : {\r\n            1 : 1,\r\n            2 : 5,\r\n            3 : 3\r\n        },\r\n        3 : {\r\n            1 : 2,\r\n            2 : 1,\r\n            3 : 5\r\n        },\r\n        5 : {\r\n            1 : 1,\r\n            2 : 2,\r\n            3 : 3\r\n        }\r\n    },\r\n    1 : {\r\n        0 : {\r\n            1 : 2,\r\n            2 : 4,\r\n            3 : 5\r\n        },\r\n        2 : {\r\n            1 : 4,\r\n            2 : 5,\r\n            3 : 0\r\n        },\r\n        4 : {\r\n            1 : 5,\r\n            2 : 0,\r\n            3 : 2\r\n        },\r\n        5 : {\r\n            1 : 0,\r\n            2 : 2,\r\n            3 : 4\r\n        }\r\n    },\r\n    2 : {\r\n        0 : {\r\n            1 : 3,\r\n            2 : 4,\r\n            3 : 1\r\n        },\r\n        1 : {\r\n            1 : 0,\r\n            2 : 3,\r\n            3 : 4\r\n        },\r\n        3 : {\r\n            1 : 4,\r\n            2 : 1,\r\n            3 : 0\r\n        },\r\n        4 : {\r\n            1 : 1,\r\n            2 : 0,\r\n            3 : 3\r\n        }\r\n    },\r\n    3 : {\r\n        0 : {\r\n            1 : 5,\r\n            2 : 4,\r\n            3 : 2\r\n        },\r\n        2 : {\r\n            1 : 0,\r\n            2 : 5,\r\n            3 : 4\r\n        },\r\n        4 : {\r\n            1 : 2,\r\n            2 : 0,\r\n            3 : 5\r\n        },\r\n        5 : {\r\n            1 : 4,\r\n            2 : 2,\r\n            3 : 0\r\n        }\r\n    },\r\n    4 : {\r\n        1 : {\r\n            1 : 2,\r\n            2 : 3,\r\n            3 : 5\r\n        },\r\n        2 : {\r\n            1 : 3,\r\n            2 : 5,\r\n            3 : 1\r\n        },\r\n        3 : {\r\n            1 : 5,\r\n            2 : 1,\r\n            3 : 2\r\n        },\r\n        5 : {\r\n            1 : 1,\r\n            2 : 2,\r\n            3 : 3\r\n        }\r\n    },\r\n    5 : {\r\n        0 : {\r\n            1 : 1,\r\n            2 : 4,\r\n            3 : 3\r\n        },\r\n        1 : {\r\n            1 : 4,\r\n            2 : 3,\r\n            3 : 0\r\n        },\r\n        3 : {\r\n            1 : 0,\r\n            2 : 1,\r\n            3 : 4\r\n        },\r\n        4 : {\r\n            1 : 3,\r\n            2 : 0,\r\n            3 : 1\r\n        }\r\n    "],[0,"}\r\n}"]],"start1":12940,"start2":12940,"length1":1204,"length2":2176}]],"length":15119,"saved":false}
{"ts":1350089981018,"patch":[[{"diffs":[[0,"colors.blue)"],[-1,","],[0,"\r\n    ];\r\n  "]],"start1":6672,"start2":6672,"length1":25,"length2":24},{"diffs":[[0,"{\r\n    for ("],[1,"var "],[0,"index in thi"]],"start1":8378,"start2":8378,"length1":24,"length2":28},{"diffs":[[0,"   for ("],[1,"var "],[0,"i in thi"]],"start1":8722,"start2":8722,"length1":16,"length2":20}]],"length":15126,"saved":false}
{"ts":1350090011498,"patch":[[{"diffs":[[0,"- */\r\n\r\n"],[1,"/*"],[0,"\r\n$(docu"]],"start1":105,"start2":105,"length1":16,"length2":18},{"diffs":[[0,";\r\n});\r\n"],[1,"*/"],[0,"\r\n\r\n/**\r"]],"start1":311,"start2":311,"length1":16,"length2":18},{"diffs":[[0,"s = "],[-1,"new Array()"],[1,"[]"],[0,", ne"]],"start1":871,"start2":871,"length1":19,"length2":10}]],"length":15121,"saved":false}
{"ts":1350090140651,"patch":[[{"diffs":[[0,"tations)"],[1,";"],[0,"\r\n    }\r"]],"start1":8538,"start2":8538,"length1":16,"length2":17},{"diffs":[[0,"ions);\r\n    }\r\n}"],[1,";"],[0,"\r\n\r\n/**\r\n * Retu"]],"start1":8541,"start2":8541,"length1":32,"length2":33}]],"length":15123,"saved":false}
{"ts":1350090270445,"patch":[[{"diffs":[[0,"face3)]);\r\n}"],[1,";"],[0,"\r\n\r\n/**\r\n * "]],"start1":11083,"start2":11083,"length1":24,"length2":25},{"diffs":[[0,"    }\r\n}"],[1,";"],[0,"\r\n\r\n/**\r"]],"start1":11886,"start2":11886,"length1":16,"length2":17}]],"length":15125,"saved":false}
